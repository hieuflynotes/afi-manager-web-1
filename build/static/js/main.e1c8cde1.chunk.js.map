{"version":3,"sources":["component/common/Button.tsx","container/permission/RedirectToSystemSalesManager.tsx","component/common/BackdropLoading.tsx","constants/Color.ts","theme/MuiTheme.ts","theme/GlobalStyle.ts","component/common/PopupNotification.tsx","afi-manager-base-model/model/HMTracking.ts","afi-manager-base-model/controllers/HMController.ts","controller/LocalStoryController.ts","controller/BaseController.ts","controller/OrderTrackingController.ts","controller/TestController.ts","controller/UserController.ts","controller/MetaDataController.ts","controller/UserHmController.ts","controller/PermissionController.ts","controller/RoleController.ts","controller/MenuTemplateController.ts","controller/ExcelController.ts","controller/index.ts","rematch/Notification.ts","rematch/Authen.ts","rematch/LoadingTop.ts","rematch/NotificationPopup.ts","rematch/index.ts","rematch/store.ts","constants/Other.ts","component/common/NavBar.tsx","component/permssion/AccountMenu.tsx","container/AuthenMenuScreen.tsx","constants/RouterAuthen.tsx","container/Login.tsx","component/common/ListGrid.tsx","component/common/PrettoSlider.tsx","afi-manager-base-model/model/OrderTracking.ts","helper/TrackingHMHelper.ts","helper/StringUtil.tsx","component/tracking/TrackingInfoHMItem.tsx","component/common/TextFiled.tsx","hook/useCrudHook.ts","component/common/PopupConfirm.tsx","component/common/BaseDialog.tsx","component/tracking/PopupFlowTrackingHM.tsx","component/tracking/PopupFlowManyTrackingHM.tsx","component/tracking/PopupFlowManyByOrdersEmailsCustomersTrackingHM.tsx","hook/HandleWithPopupHook.ts","container/CheckTrackingHM.tsx","container/tool/ToolAutoChangeTextHM.tsx","component/common/TextDescWithIcon.tsx","component/AutoOrderHm/UserHmItemList.tsx","afi-manager-base-model/model/UserHm.ts","constants/WareHouse.ts","constants/TemplateAddress.ts","component/AutoOrderHm/PopUpAddressTemplate.tsx","helper/CheckBestOptionForOrder.ts","component/AutoOrderHm/PopupInsertUser.tsx","component/common/SelectBox.tsx","container/hm-manager/DialogShowImage.tsx","container/hm-manager/UserHmManager.tsx","helper/CalculatorHmPrice.ts","helper/NumberUtils.ts","component/AutoOrderHm/ProgressHmItemList.tsx","constants/IMacros.ts","component/AutoOrderHm/PopupEditProgressAutoOrder.tsx","component/AutoOrderHm/PopupSplitOrder.tsx","container/hm-manager/ProgressAutoOrder.tsx","constants/AleFirebaseConfig.ts","component/common/DatePicker.tsx","container/hm-manager/ExportExcel.tsx","component/common/TableCrud.tsx","component/AutoOrderHm/PopupMergeToUser.tsx","component/common/TextDesc.tsx","component/AutoOrderHm/FixSwithUpdateOrder.tsx","container/hm-manager/FixDataTool.tsx","component/permssion/PopupPermssion.tsx","container/hm-manager/StatisticAleTeam.tsx","container/permission/PermissionContainer.tsx","container/permission/RoleContainer.tsx","container/permission/SetupRoleContainer.tsx","afi-manager-base-model/model/User.ts","component/permssion/PopupUserAccount.tsx","container/permission/InnerQuoteList.tsx","component/permssion/ColumnMenu.tsx","component/permssion/PopupEditRouteMenu.tsx","container/permission/SetupMenu.tsx","container/permission/SetupMenuContainer.tsx","container/UiKit.tsx","container/warehouse/OrderHmWarehouse.tsx","component/warehouse/OrderHmDetailForWarehouseItemList.tsx","constants/FirebaseConfig.ts","helper/DownloadUtils.ts","helper/DownloadOrder.ts","container/warehouse/OrderHmDetailForWarehouse.tsx","container/LoginWithCode.tsx","constants/Route.tsx","container/hm-manager/StaticByUserHm.tsx","container/permission/UserManager.tsx","App.tsx","reportWebVitals.ts","index.tsx","constants/Config.ts"],"names":["Button","props","RedirectToSystemSalesManager","useState","jwt","localStorage","getItem","codeLogin","split","join","linkToSaleManager","config","redirectToSaleManager","useEffect","global","open","focus","container","style","flex","height","justifyContent","alignContent","color","variant","href","target","rel","React","memo","useStyle","makeStyles","theme","backdrop","zIndex","drawer","frImage","borderRadius","width","BackdropLoading","classes","loading","useDispatch","useSelector","state","Grid","Backdrop","className","src","primary","darkPrimary","primary100","primary200","lightPrimary","secondary","darkSecondary","warning","success","error","white","lightDark1","lightDark2","lightDark3","lightDark4","grey50","grey100","grey200","grey300","textPrimary","createMuiTheme","palette","main","typography","htmlFontSize","fontSize","fontFamily","body1","body2","h6","fontWeight","h5","h4","spacing","overrides","MuiPaper","root","background","elevation1","boxShadow","MuiButton","textTransform","padding","lineHeight","contained","backgroundColor","borderWidth","borderStyle","borderColor","outlined","containedSecondary","containedPrimary","outlinedPrimary","outlinedSecondary","textSizeSmall","sizeSmall","sizeLarge","textSizeLarge","containedSizeSmall","containedSizeLarge","iconSizeMedium","iconSizeSmall","iconSizeLarge","startIcon","marginRight","MuiTypography","h3","h2","subtitle2","MuiInputBase","input","MuiFormHelperText","MuiOutlinedInput","inputMarginDense","paddingTop","paddingRight","MuiInputLabel","transform","MuiTableBody","MuiTableCell","head","textAlign","body","paddingLeft","MuiTableRow","border","maxWidth","useGlobalStyles","marginTop","marginBottom","display","flex1","section","sectionLanding","title","paragraph","buttomActionButton","highlightSearchText","content","minHeight","borderLeft","grey","borderRight","borderTop","borderBottom","btnRefresh","position","top","right","contentItem","flexLeft","alignItems","alignItemCenter","justifySpaceBetween","justifyEnd","grid2","gridTemplateColumns","gridGap","buttonAlert","dark","iconButtonAlert","buttonPrimaryLink","textDecoration","buttonSecondaryLink","popUp","mm0","margin","mm1","mm2","mm3","mm4","mm5","mm6","mm7","mm8","mb0","mb1","mb2","mb3","mb4","mb5","mb6","mb7","mb8","mr1","mr2","mr3","mr4","mr5","mt0","mt1","mt2","mt3","mt4","mt5","mt6","mt7","mt8","ml1","marginLeft","ml2","ml3","ml4","ml5","pp0","pp1","pp2","pp3","pp4","pp5","pp6","pp7","pp8","pb0","paddingBottom","pb1","pb2","pb3","pb4","pb5","pb6","pb7","pb8","pr0","pr1","pr2","pr3","pr4","pr5","pt0","pt1","pt2","pt3","pt4","pt5","pl0","pl1","pl2","pl3","pl4","pl5","selectSmall","minWidth","breakLongText","overflow","textOverflow","wordBreak","WebkitBoxOrient","useStyles","digActions","PopupNotification","globalStyles","dispatch","statePopup","notificationPopup","Dialog","isDisplay","fullWidth","onKeyDown","e","key","close","DialogTitle","clsx","item","xs","Box","IconButton","onClick","DialogContent","direction","justify","Typography","align","message","DialogActions","size","HMTracking","header","HMController","serviceURL","basePath","client","getInfoProduct","link","get","then","res","data","this","axios","params","orderNo","length","Promise","reject","Object","values","reverse","LocalStoryController","JSON","parse","setItem","stringify","getLocal","setLocal","isShow","setDataByKey","getByKey","table","getTable","idTable","column","value","variables","text","textIndex","getListUserLogin","index","findIndex","username","push","splice","BaseController","id","t","post","notification","sort","convertSort","searchFields","convertSearch","Error","delete","sortString","map","substring","search","searchString","console","log","OrderTrackingController","TestController","BaseModel","UserController","MetaDataController","UserHmController","PermissionController","RoleController","MenuTemplateController","ExcelController","apiProxyUrl","apiSheetConfig","getConfigList","rst","general","apiGatewayUrl","orderId","email","quantity","warehouse","staff","bot","appClient","create","baseURL","timeout","headers","common","interceptors","request","use","showLoading","err","response","hiddenLoading","status","linkNow","window","location","pathname","getRoute","routersMap","typeAuthen","TypeScreen","public","defaults","TypeNotification","localStoryController","userController","orderTrackingController","metaDataController","hMController","userHmController","permssionController","roleController","menuTeamplateController","excelController","authen","createModel","role","undefined","isGet","reducers","update","effects","login","payload","logOut","info","getMe","catch","type","SUCCESS","ERROR","models","history","createBrowserHistory","store","init","redux","router","connectRouter","middlewares","routerMiddleware","rootReducers","RESET_APP","devtoolOptions","disabled","process","cssInfo","topBar","left","divider","narBar","shadows","transition","menuItem","cursor","menuItemNavBar","frSubMenu","subMenu","styleActive","styleActiveNavBar","frLogoNavBar","iconNarBar","itemExpend","subMenuNarBar","fixPadding","iconNavigation","popover","popoverContentSubmenu","popoverItemSubmenu","iconSubmenuPopover","NavBar","hiddenNavBar","idSelectSubMenu","setState","menuElement","useRef","useHistory","globalStyle","math","useRouteMatch","isActive","path","i","menuItemIcon","to","stopPropagation","preventDefault","action","icon","label","NavBarLeft","Divider","route","Slide","in","Accordion","AccordionSummary","expandIcon","AccordionDetails","setShowNavBar","animation","onActionNavBar","getShowNarBar","checkScreenDownNarBar","screenShowNavBar","smUp","mdUp","lgUp","xlUp","isHiddenTopBar","Hidden","xsDown","smDown","mdDown","lgDown","ref","Popover","Boolean","anchorEl","current","onClose","anchorOrigin","vertical","horizontal","lg","exact","activeStyle","activeClassName","leftComponent","iconAccount","nameAccount","btnActionOption","frAvt","AccountMenu","setAnchorEl","event","currentTarget","avt","fullName","transformOrigin","Avatar","navbar","AuthenMenuScreen","menu","setRoute","setHiddenNavBar","getDefault","filter","defaultLink","sub","hidden","isHiddenTop","md","sm","children","AuthenMenu","useMemo","render","component","AuthenRoute","from","PublicRoute","backgroundSize","frLogin","titleLogin","validate","Yup","required","password","ListGrid","minWidthItem","gridTemplateRows","heightItem","MyPrettoSlider","withStyles","thumb","active","valueLabel","track","rail","Slider","PrettoSlider","total","EOrderSource","EStatusOrderTracking","OrderTracking","orderSource","trackingId","userId","customerName","desc","infoHM","lastTimeTracking","productInfo","productLink","userHM","userHMId","totalPrice","totalPriceBuy","productOrder","isOrder","isRegister","errorDesc","dataFirebase","registerByName","addCartByName","logs","TrackingHMHelper","StringUtil","getHighlightedText","highlight","replaceAll","parts","RegExp","part","toLowerCase","upperCaseFirstChar","string","charAt","toUpperCase","slice","formatterMoney","Intl","NumberFormat","currency","minimumFractionDigits","nullOrEmpty","trim","iconDelete","iconEdit","iconStatus","TrackingInfoHMItem","infoOrderTracking","isError","globalsStyle","updateInfoProduct","a","product","productId","tracking_number","updateValue","getTrackingByOrderNo","setTimeout","COMPLETED","getOrderProcess","last_delivery_status","code","moment","timestamp","format","status_text","_embedded","base_image","images","normal","product_url","name","CircularProgress","TextField","useCrudHook","isShowConfirm","isShowPopup","itemSelected","page","pageSize","initQuery","query","setQueryMain","setQuery","rows","totalPages","pagingList","setPagingList","onDelete","onBeforeDelete","controller","remove","onAfterDelete","onSave","onBeforeSave","saveController","bind","onAfterSave","save","onQueryChanged","useCallback","_","debounce","delaySearch","onBeforeQuery","listController","onAfterQuery","list","onConfirm","onShowPopup","onCancelConfirm","onCancelPopup","onRefreshList","setFilter","PopUpConfirm","onCancel","labelButtonConfirm","BaseDialog","onClickConfirm","labelConfirmBtn","require","max","min","nullable","containerDetail","PopupFlowTrackingHM","formik","useFormik","initialValues","validationSchema","onSubmit","onEdit","setValues","cloneDeep","FLOWING","setTouched","mapValues","getDataOrderTracking","firstData","Date","handleSubmit","helperText","touched","errors","onChange","handleChange","onBlur","handleBlur","InputLabelProps","shrink","status_details","PopupFlowManyTrackingHM","orderIds","multiline","PopupFlowManyByOrdersEmailsCustomersTrackingHM","customerNames","emails","links","customerNamesCount","orderIdsCount","emailsCount","linksCount","handleWithPopupHook","handleClosePopup","onClosePopup","handleShowPopup","handleShowConfirm","onShowConfirm","handleConfirmByPopup","onConfirmByPopup","handleConfirm","isDisplayPopup","isDisplayConfirm","frFilter","CheckTrackingHM","handleWithPopupMany","createManyFlow","crudTrackingHM","handleWithPopupManyByEmails","createManyByEmailsAndOrders","listByCustomer","saveByCustomer","Pagination","count","Zoom","frVariable","iconAdd","templateDataSate","variable","variableIndex","ToolAutoChangeTextHM","replaceText","forEach","replace","getState","autoCheck","saveByKey","Chip","avatar","duplicateVariableTemplate","removeVariableTemplate","addVariableTemplate","onChangeVariable","onChangeValue","removeVariable","addNewVariable","duplicateText","removeText","navigator","clipboard","writeText","TextDescWithIcon","pp","UserHmItemList","createdAt","imgScreenShot","onSeeImge","emailCheckout","address","address2","phone","getCartByName","firstName","lastName","town","postcode","onSeeDetail","UserHm","note","isDone","isMerge","metaDataOrder","extraInfor","wareHouses","codeDefault","codeOffs","afiCodes","maxPrice","addressTemplatesConst","mustBeVerified","PopUpAddressTemplate","selectedAddress","setSelectedAddress","addressTemplates","setAddressTemplate","getAddress","onSelect","freeSolo","options","getOptionLabel","ad","renderInput","renderOption","newValue","maxPriceForOrder","order","find","w","wareHouse","c","codeOff","isDangerousPrice","prodPrice","isCorrectCode","products","productIds","p","productNumber","v","indexOf","maxProduct","mustOneProduct","getAvailableCodes","codes","availableAfiCodes","includes","checkExpiredCode","isExpired","divide2Col","tooltipPlacementTop","test","matches","verifiedAmount","verifiedQuantity","staffEmail","PopupInsertUser","isOpenAddList","setIsOpenAddList","isDangerAddress","setIsDangerAddress","isRunBot","setIsRunBot","touch","valueEmailCheckout","checkLastIndex","lastIndexOf","InputProps","startAdornment","InputAdornment","Tooltip","placement","FormControl","InputLabel","Select","MenuItem","FormHelperText","newCode","customInput","thousandSeparator","decimalScale","fixedDecimalScale","onValueChange","floatValue","placeholder","inputProps","FormGroup","FormControlLabel","control","Checkbox","checked","add","SelectBox","valueOption","labelOption","DialogShowImage","linkImage","UserHmManager","crudCompany","img","showPopupImage","setShowPopupImage","isDisplayQuickCreateOrder","setIsDisplayQuickCreateOrder","quickOrder","setQuickOrder","normalizeData","normalizePhone","trimPhone","startsWith","runBotCheckout","op","itemImg","Number","minRows","OrderStatus","mathCeilWithRound","n","decimal","Math","ceil","pow","calcBuyPrice","price","round","getProductStatus","completed","calcBuyPriceOrder","Array","reduce","arr","sumArr","concat","priceP1","priceP2","sum","result","countProduct","orders","r","countBoughtProduct","countProd","totalCompletedAmount","o","totalAmount","rootItem","frCoin","frCoinBuy","frCoinBought","coin","popoverRoot","ProgressHmItemList","isOpenMoreInfo","isCanSplit","refChipInfo","userHm","light","cardNumber","cardPin","giftCard","serialNumber","pin","handleCopyToolMarcro","orderHm","checkIsCanSplit","onSplitOrder","updateOrderId","wrap","alt","PopupEditProgressAutoOrder","PopupSplitOrder","flatItemProductOrder","productSelected","flatProduct","uuid","orderWillSplitTo","checkOrderCanMerge","orderTrackings","orderSelected","FormLabel","RadioGroup","Radio","onSplitWithNew","orderTrackingOld","onSplitWithMerge","orderTrackingNew","aleFirebaseConfig","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","statuses","giftCardForm","popperTootip","pointerEvents","tooltipPlacementBottom","tooltip","bottom","notify","borderEadius","ProgressAutoOrder","userHmId","useParams","setUserHm","isConfirmed","setIsConfirmed","none","selectedStatus","setSelectedStatus","setGiftCard","isListening","handleWithPopupSplit","listForProgress","onListeningNotication","getDos","firestore","collection","doc","toString","onSnapshot","includeMetadataChanges","dataFromFirbase","scrollTo","paging","handleClickSplitOrder","renderComparedData","createdData","difference","amount","abs","splitOrderWithMerge","splitOrderWithNew","isReadyBuyAll","gt20","gt15","renderWarningPrice","lineAddress","flatHouse","postCode","phonenumber","renderOrderStatusSummary","exportdata","buyItems","imgBag","renderPaymentStatusSummary","isValid","errorPrice","initial","created","addedToCard","done","filterByStatus","shape","DatePicker","defaultFormat","initStartDate","initEndDate","date","setDate","onApply","picker","String","chosenLabel","startDate","endDate","onChangeDateRange","_d","initialSettings","ranges","Today","Yesterday","subtract","startOf","endOf","opens","locale","fileDownload","rootInputPass","rootOption","maxHeight","styleLinkToProduct","columns","ExportExcel","isComfirm","security","setSecurity","Map","optionFilter","isRegiter","dataExport","option","statusError","onChangeRegisterOption","statusOrder","onChangeOrderOption","onChangeErrorOption","exportData","csv","Parser","fields","keys","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","row","hover","tabIndex","linkProduct1","productId1","quantityProduct1","priceProduct1","sizeProduct1","productId2","linkProduct2","quantityProduct2","priceProduct2","sizeProduct2","cell","whiteSpace","buttonHeader","popupShowColumn","frPaging","headerNotSort","textAutoHidden","TableCrud","datas","setData","handleClick","componentSort","getColumnIndex","snakeCase","searchField","changeSearchFiledByChangeColumn","onQuery","getData","onCustomerCell","newItem","newItemClone","set","acceptSearch","getColumnDisplay","getFromLocal","getSettingColumnTable","columnDisplay","setSettingColumnTable","onChangeColumn","onDisplayColumn","otherFilter","isSort","changeSort","PopupMergeToUser","user","setUser","TextDesc","FixSwithUpdateOrder","isDisable","orderTracking","setDisble","updateDisable","Switch","updateOrder","frInfo","FixDataTool","inputSearch","findOne","updatedBy","upateData","EMethodPermission","statisticLeft","paper","chart","frChart","PopupPermssion","method","GET","rootPermissionItem","PermissionContainer","crudPermission","RoleContainer","crudRole","redirect","menuTemplateId","SetupRoleContainer","permission","roleSelect","metaData","setRole","permssion","validateUuid","getById","all","getNowSelect","UserAccount","roleId","accountId","phoneNumber","description","PopupUserAccount","roleMap","createPassword","random","endAdornment","InnerQuoteList","quotes","quote","draggableId","dragProvided","dragSnapshot","innerRef","isDragging","isGroupedOver","combineTargetFor","draggableProps","dragHandleProps","renderItem","QuoteList","droppableId","listId","listType","ignoreContainerClipping","isDropDisabled","isCombineEnabled","dropProvided","droppableProps","listDrag","ColumnMenu","disableInteractiveElementBlocking","provided","snapshot","PopupEditRouteMenu","itemMenuDrag","SetupMenu","menuDrag","handleWithPopupMenu","getMenuState","getIndexDefault","handleWithPopupSubMenu","getStateMenu","indexMenu","indexSub","onAddMenu","routers","onDragEnd","refData","dataMap","destination","getValueSelect","getSource","source","getDestinaon","newSubItem","getRefSource","newData","combine","getCombine","rootMenuItem","SetupMenuContainer","gridLayout","MyGrid","iconItem","frInfoItem","frInfoItemCoin","infoItemError","OrderHmWarehouse","crudOrderHm","orderHmForWarehouse","totalOrder","totalPriceDone","totalDone","totalPriceError","totalError","OrderHmDetailForWarehouseItemList","downloadCSV","fileName","csvData","array","str","line","jsonToCSV","document","createElement","setAttribute","encodeURI","click","downloadOrders","orderCSV","orderToCSVModel","OrderHmDetailForWarehouse","refeshList","orderHmDetailForWarehouse","orderHmId","orderByEmail","sortBy","getIndexEmailAfiOrderHm","textSplit","startSplit","endSplit","querySelector","scrollIntoView","behavior","endIcon","utils","DateFnsUtils","DateTimePicker","inputVariant","autoOk","ampm","disableFuture","disablePast","showTodayButton","authenMenu","showPassword","setShowPassword","setError","addUserLogin","removeLogin","interval","toDate","stateDate","setStateDate","nameOfTeamCheckoutSelect","nameOfTeamRegisterSelect","statisticAleTeam","setStatisticAleTeam","intervalTeamCheckout","intervalTeamRegister","_res","nameAllTeamCheckout","nameUser","nameAllTeamRegister","intervalCheckoutTeam","intervalRegisterTeam","nameOfTeamCheckout","nameOfTeamRegister","xl","multiple","defaultValue","filterSelectedOptions","chartType","loader","nameOfTeam","mapNameUserCheckout","getIntervalChart","isStacked","duration","easing","startup","rootProps","crud","statisticByUserHm","handleWithPopupMerge","mergeOrderTrackingToUser","warningEmailMergeWrong","emailUser","isShowHighlightText","toFixed","crudUserAccount","listUserForAdmin","saveUserForAdmin","actionCpn","getByJwt","origin","converToJwt","App","enqueueSnackbar","useSnackbar","TransitionGroup","CSSTransition","classNames","authenNotMenu","IntegrationNotistack","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","ThemeProvider","getElementById","REACT_APP_ENV","applicationUrl"],"mappings":"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","file":"static/js/main.e1c8cde1.chunk.js","sourcesContent":["import { Button as ButtonMaterial, ButtonProps } from '@material-ui/core';\nimport React from 'react';\ntype Props<P = {}, D extends React.ElementType = 'button'> = {} & ButtonProps;\nexport default function Button(props: Props) {\n    return <ButtonMaterial {...props}></ButtonMaterial>;\n}\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Grid, Typography } from '@material-ui/core';\nimport Button from 'src/component/common/Button';\nimport config from 'src/constants/Config';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/rematch/store';\n\ntype Props = {};\nfunction RedirectToSystemSalesManager(props: Props) {\n    const [state, setState] = useState();\n    const jwt = localStorage.getItem('jwt');\n    const codeLogin = jwt?.split('.').join('aleafi');\n    const linkToSaleManager = `${config.redirectToSaleManager}/loginWithCode/${codeLogin}`;\n    useEffect(() => {\n        global?.open(linkToSaleManager, '_blank')?.focus();\n        return () => {};\n    }, []);\n\n    return (\n        <Grid\n            container\n            style={{\n                flex: 1,\n                height: '90%',\n            }}\n            justifyContent=\"center\"\n            alignContent=\"center\"\n        >\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                href={linkToSaleManager}\n                {...({ target: '_blank', rel: 'noopener noreferrer' } as any)}\n            >\n                Chuyển hướng đế trang bán hàng\n            </Button>\n        </Grid>\n    );\n}\n\nexport default React.memo(RedirectToSystemSalesManager);\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Backdrop, CircularProgress, Grid, makeStyles } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatch, RootState } from '../../rematch/store';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 100000000,\n        color: 'rgb(0,0,0,0.01)',\n    },\n    frImage: {\n        borderRadius: '50%',\n        // background: 'white',\n        width: 400,\n        height: 400,\n    },\n}));\nfunction BackdropLoading(props: Props) {\n    const classes = useStyle();\n    const [state, setState] = useState();\n    const dispath = useDispatch<Dispatch>();\n    const loading = useSelector((state: RootState) => state.loading);\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    return (\n        <Grid>\n            <Backdrop open={loading} className={classes.backdrop}>\n                <Grid className={classes.frImage}>\n                    <img src=\"/image/loading-fast.gif\" className={classes.frImage} />\n                </Grid>\n                {/* <CircularProgress color=\"primary\" /> */}\n            </Backdrop>\n        </Grid>\n    );\n}\n\nexport default React.memo(BackdropLoading);\n","const color = {\n    primary: '#3F95E7',\n    darkPrimary: '#187dc1',\n    primary100: '#E1E7F3',\n    primary200: '#8F9DBD',\n    lightPrimary: '#EBEFF6',\n    secondary: '#FF1D89',\n    darkSecondary: '#FF1D89',\n    warning: '#ffc107',\n    success: '#3AB77B',\n    error: '#E9645B',\n    white: '#fff',\n    lightDark1: '#DADADA',\n    lightDark2: '#949494',\n    lightDark3: '#F0F0F0',\n    lightDark4: '#B0B0B0',\n    grey50: '#F5F5F5',\n    grey100: '#EEEEEE',\n    grey200: 'rgba(0, 0, 0, 0.23)',\n    grey300: '#A2A8B4',\n    textPrimary: '#333',\n};\n\nexport default color;\n","import { createMuiTheme } from '@material-ui/core';\nimport { CreateCSSProperties, CSSProperties } from '@material-ui/styles';\nimport color from '../constants/Color';\ndeclare module '@material-ui/core/styles/createBreakpoints' {\n    interface BreakpointOverrides {\n        xs: true;\n        sm: true;\n        md: true;\n        lg: true;\n        hidpi: true;\n        xl: true;\n    }\n}\nconst spacing = 8;\nconst baseHeaderTypography: CSSProperties | CreateCSSProperties<{}> = {\n    fontWeight: 600,\n    marginBottom: '.5rem',\n    lineHeight: 1.2,\n};\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: color.primary,\n        },\n        secondary: {\n            main: color.secondary,\n        },\n        warning: {\n            main: color.warning,\n        },\n        success: {\n            main: color.success,\n        },\n        error: {\n            main: color.error,\n        },\n    },\n    typography: {\n        htmlFontSize: 14,\n        fontSize: 14,\n        fontFamily: `\"Poppins\", sans-serif`,\n        body1: {\n            fontSize: '1rem',\n        },\n        body2: {\n            fontSize: '0.85rem',\n        },\n        h6: {\n            fontSize: '1rem',\n            fontWeight: 750,\n        },\n        h5: {\n            fontSize: '1.25rem',\n            fontWeight: 750,\n        },\n        h4: {\n            fontSize: '1.5rem',\n            fontWeight: 500,\n        },\n    },\n    spacing: 8,\n    overrides: {\n        MuiPaper: {\n            root: {\n                background: 'red',\n                borderRadius: '0.35rem',\n            },\n            elevation1: {\n                boxShadow: '0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%)',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: 'none',\n                padding: '0.75rem 2rem',\n                fontSize: '1rem',\n                lineHeight: '2rem',\n                height: 'fit-content',\n                borderRadius: '5px',\n                fontWeight: 500,\n                boxShadow: 'none',\n                '&:hover  .MuiSvgIcon-root': {\n                    padding: '0.125rem',\n                    fontSize: '2rem',\n                },\n            },\n            contained: {\n                padding: '0.75rem 2rem',\n                fontSize: '1rem',\n                lineHeight: '2rem',\n                boxShadow: 'none',\n                backgroundColor: color.lightDark1,\n                color: color.lightDark2,\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: color.lightDark1,\n                '&:hover': {\n                    boxShadow: 'none',\n                    color: color.primary,\n                    borderColor: color.primary,\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    backgroundColor: color.white,\n                },\n                '&.Mui-disabled': {\n                    backgroundColor: '#F3F3F3',\n                    borderColor: '#F3F3F3',\n                    color: '#A6A6A6',\n                },\n            },\n            outlined: {\n                padding: '0.75rem 2rem',\n                fontSize: '1rem',\n                lineHeight: '2rem',\n            },\n            containedSecondary: {\n                color: color.white,\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: color.secondary,\n                '&:hover': {\n                    boxShadow: 'none',\n                    color: color.white,\n                    borderColor: color.darkSecondary,\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    backgroundColor: color.darkSecondary,\n                },\n            },\n            containedPrimary: {\n                color: color.white,\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: color.primary,\n                '&:hover': {\n                    boxShadow: 'none',\n                    color: color.white,\n                    borderColor: color.darkPrimary,\n                    borderWidth: 1,\n                    borderStyle: 'solid',\n                    backgroundColor: color.darkPrimary,\n                },\n            },\n            outlinedPrimary: {\n                '&:hover': {\n                    backgroundColor: color.primary,\n                    color: color.white,\n                },\n            },\n            outlinedSecondary: {\n                '&:hover': {\n                    backgroundColor: color.secondary,\n                    color: color.white,\n                },\n            },\n            textSizeSmall: {\n                fontSize: '0.85rem',\n                lineHeight: '1.25rem',\n                padding: '0.75rem 1rem',\n                '&:hover  .MuiSvgIcon-root': {\n                    padding: '0.125rem',\n                    fontSize: '1.5rem',\n                },\n            },\n            sizeSmall: {\n                fontSize: '0.85rem',\n                lineHeight: '1.25rem',\n                padding: '0.75rem 1rem',\n                '&:hover  .MuiSvgIcon-root': {\n                    padding: '0.125rem',\n                    fontSize: '1.5rem',\n                },\n            },\n            sizeLarge: {\n                fontSize: '1rem',\n                padding: '1rem 2rem',\n                '&:hover  .MuiSvgIcon-root': {\n                    padding: '0.125rem',\n                    fontSize: '2rem',\n                },\n            },\n            textSizeLarge: {\n                fontSize: '1rem',\n                padding: '1rem 2rem',\n            },\n            containedSizeSmall: {\n                fontSize: '0.85rem',\n                padding: '0.75rem 1rem',\n            },\n            containedSizeLarge: {\n                fontSize: '1rem',\n                padding: '0.75rem 2rem',\n            },\n\n            iconSizeMedium: {\n                '& *:first-child': {\n                    fontSize: '2rem',\n                    padding: '0.25rem',\n                },\n            },\n            iconSizeSmall: {\n                '& *:first-child': {\n                    fontSize: '1.5rem',\n                    padding: '0.25rem',\n                },\n            },\n            iconSizeLarge: {\n                '& *:first-child': {\n                    fontSize: '2rem',\n                    padding: '0.25rem',\n                },\n            },\n            startIcon: {\n                marginRight: '4px',\n            },\n        },\n        MuiTypography: {\n            body1: {\n                fontSize: '1rem',\n                fontWeight: 400,\n            },\n            body2: {\n                fontSize: '0.85rem',\n            },\n            h6: {\n                fontSize: '1rem',\n                fontWeight: 600,\n            },\n            h5: {\n                fontSize: '1.25rem',\n                fontWeight: 600,\n            },\n            h4: {\n                fontSize: '1.5rem',\n                fontWeight: 600,\n            },\n            h3: {\n                fontSize: '2rem',\n                fontWeight: 500,\n            },\n            h2: {\n                fontSize: '3rem',\n                fontWeight: 500,\n            },\n            subtitle2: {\n                fontSize: '1rem',\n                fontWeight: 500,\n            },\n        },\n        MuiInputBase: {\n            input: {\n                height: 'fit-content',\n            },\n        },\n        MuiFormHelperText: {\n            error: {\n                color: color.error,\n            },\n        },\n        MuiOutlinedInput: {\n            inputMarginDense: {\n                paddingTop: '1rem',\n                paddingRight: '1rem',\n            },\n            input: {\n                padding: '1.25rem 1rem',\n                fontSize: '1rem',\n                lineHeight: '1rem',\n                height: 'calc(1rem + 1px)',\n            },\n        },\n        MuiInputLabel: {\n            outlined: {\n                transform: 'translate(14px, 1.25rem) scale(1)',\n            },\n            error: {\n                color: color.error,\n            },\n        },\n        MuiTableBody: {\n            root: {\n                '& tr:nth-child(even)': {\n                    background: '#f5f5f5',\n                },\n            },\n        },\n        MuiTableCell: {\n            root: {\n                '&:first-child': {\n                    // paddingLeft: 30,\n                },\n            },\n            head: {\n                fontWeight: 400,\n                '&(:first-child)': {\n                    textAlign: 'left',\n                },\n                '&:not(:first-child):not(:last-child)': {\n                    textAlign: 'center',\n                },\n            },\n            body: {\n                color: color.textPrimary,\n                fontWeight: 400,\n                '&(:first-child)': {\n                    textAlign: 'left',\n                    paddingLeft: 5,\n                },\n                '&:not(:first-child):not(:last-child)': {\n                    // textAlign: \"center\",\n                },\n            },\n        },\n        MuiTableRow: {\n            root: {\n                height: '65px',\n                // \"&:hover\": {\n                //     transition: \"0.3s\",\n                //     height: \"70px\",\n                // },\n                '& #demo-simple-select-outlined': {\n                    backgroundColor: 'red',\n                    fontSize: '0.85rem',\n                    lineHeight: '1.5rem',\n                    padding: '0.75rem 1rem',\n                    borderRadius: '4px',\n                },\n                '& .MuiOutlinedInput-notchedOutline': {\n                    border: 'none !important',\n                },\n                '& .MuiTableCell-root': {\n                    maxWidth: '300px',\n                },\n                '& .MuiChip-root': {\n                    borderRadius: '4px',\n                    backgroundColor: '#F0F0F0',\n                    // margin: \"8px 8px 8px 0\",\n                    height: 'fit-content',\n                    padding: '4px 12px',\n                    '& .MuiChip-label': {\n                        lineHeight: '17px',\n                        fontSize: '0.85rem',\n                        color: color.textPrimary,\n                    },\n                },\n            },\n        },\n    },\n});\n\nexport default theme;\n","import { makeStyles } from '@material-ui/core/styles';\nimport color from '../constants/Color';\n\nexport const useGlobalStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: `${theme.spacing(15)}px !important`,\n        marginBottom: `${theme.spacing(12)}px !important`,\n        display: 'flex',\n        justifyContent: 'center',\n        flex: 1,\n    },\n    flex1: {\n        flex: 1,\n    },\n    section: {\n        marginTop: `${theme.spacing(5)}px !important`,\n        width: '100%',\n    },\n    sectionLanding: {\n        marginTop: `${theme.spacing(10)}px !important`,\n        width: '100%',\n    },\n    title: {\n        marginTop: `${theme.spacing(3)}px !important`,\n        marginBottom: `${theme.spacing(3)}px !important`,\n    },\n    paragraph: {\n        marginBottom: `${theme.spacing(3)}px !important`,\n    },\n    buttomActionButton: {\n        marginTop: `${theme.spacing(6)}px !important`,\n    },\n    highlightSearchText: {\n        background: 'yellow',\n    },\n    content: {\n        minHeight: '100vh',\n        paddingLeft: `${theme.spacing(4)}px !important`,\n        paddingRight: `${theme.spacing(4)}px !important`,\n    },\n    borderLeft: {\n        borderLeft: '1px solid',\n        borderColor: theme.palette.grey[100],\n    },\n    borderRight: {\n        borderRight: '1px solid',\n        borderColor: theme.palette.grey[100],\n    },\n    borderTop: {\n        borderTop: '1px solid',\n        borderColor: theme.palette.grey[100],\n    },\n    borderBottom: {\n        borderBottom: '1px solid',\n        borderColor: theme.palette.grey[100],\n    },\n    btnRefresh: {\n        position: 'absolute',\n        top: theme.spacing(-1),\n        right: theme.spacing(-2),\n    },\n    contentItem: {\n        padding: `${theme.spacing(3)}px !important`,\n        border: theme.spacing(1),\n        borderWidth: '1px',\n        borderColor: theme.palette.grey[300],\n        borderStyle: 'solid',\n        borderRadius: '10px',\n        // boxSizing: \"borderBox\"\n    },\n    flexLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    alignItemCenter: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    justifySpaceBetween: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    justifyEnd: {\n        justifyContent: 'flex-end',\n    },\n    grid2: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridGap: theme.spacing(2),\n    },\n    buttonAlert: {\n        color: '#fff',\n        backgroundColor: theme.palette.error.main,\n        borderColor: theme.palette.error.main,\n        '&:hover': {\n            backgroundColor: theme.palette.error.dark,\n            borderColor: theme.palette.error.dark,\n        },\n    },\n    iconButtonAlert: {\n        color: theme.palette.error.main,\n        borderColor: theme.palette.error.main,\n        // \"&:hover\": {\n        //     color: theme.palette.error.dark,\n        // }\n        '&:hover': {\n            color: 'white',\n            backgroundColor: theme.palette.error.main,\n            borderColor: theme.palette.error.main,\n            border: '1px solid',\n        },\n    },\n    buttonPrimaryLink: {\n        ...(theme.overrides?.MuiButton && theme.overrides?.MuiButton.root && theme.overrides?.MuiButton.root),\n        color: color.white,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n            textDecoration: 'none',\n            color: color.white,\n            borderColor: theme.palette.primary.dark,\n            backgroundColor: theme.palette.primary.dark,\n        },\n    },\n    buttonSecondaryLink: {\n        ...(theme.overrides?.MuiButton && theme.overrides?.MuiButton.root && theme.overrides?.MuiButton.root),\n        color: color.white,\n        backgroundColor: theme.palette.secondary.main,\n        '&:hover': {\n            textDecoration: 'none',\n            color: color.white,\n            borderColor: theme.palette.secondary.dark,\n            backgroundColor: theme.palette.secondary.dark,\n        },\n    },\n    popUp: {\n        padding: `${theme.spacing(3)}px !important`,\n    },\n    mm0: {\n        margin: `${theme.spacing(0)}px !important`,\n    },\n    mm1: {\n        margin: `${theme.spacing(1)}px !important`,\n    },\n    mm2: {\n        margin: `${theme.spacing(2)}px !important`,\n    },\n    mm3: {\n        margin: `${theme.spacing(3)}px !important`,\n    },\n    mm4: {\n        margin: `${theme.spacing(4)}px !important`,\n    },\n    mm5: {\n        margin: `${theme.spacing(5)}px !important`,\n    },\n    mm6: {\n        margin: `${theme.spacing(6)}px !important`,\n    },\n    mm7: {\n        margin: `${theme.spacing(7)}px !important`,\n    },\n    mm8: {\n        margin: `${theme.spacing(8)}px !important`,\n    },\n    mb0: {\n        marginBottom: `${theme.spacing(0)}px !important`,\n    },\n    mb1: {\n        marginBottom: `${theme.spacing(1)}px !important`,\n    },\n    mb2: {\n        marginBottom: `${theme.spacing(2)}px !important`,\n    },\n    mb3: {\n        marginBottom: `${theme.spacing(3)}px !important`,\n    },\n    mb4: {\n        marginBottom: `${theme.spacing(4)}px !important`,\n    },\n    mb5: {\n        marginBottom: `${theme.spacing(5)}px !important`,\n    },\n    mb6: {\n        marginBottom: `${theme.spacing(6)}px !important`,\n    },\n    mb7: {\n        marginBottom: `${theme.spacing(7)}px !important`,\n    },\n    mb8: {\n        marginBottom: `${theme.spacing(8)}px !important`,\n    },\n    mr1: {\n        marginRight: `${theme.spacing(1)}px !important`,\n    },\n    mr2: {\n        marginRight: `${theme.spacing(2)}px !important`,\n    },\n    mr3: {\n        marginRight: `${theme.spacing(3)}px !important`,\n    },\n    mr4: {\n        marginRight: `${theme.spacing(4)}px !important`,\n    },\n    mr5: {\n        marginRight: `${theme.spacing(5)}px !important`,\n    },\n    mt0: {\n        marginTop: `${theme.spacing(0)}px !important`,\n    },\n    mt1: {\n        marginTop: `${theme.spacing(1)}px !important`,\n    },\n    mt2: {\n        marginTop: `${theme.spacing(2)}px !important`,\n    },\n    mt3: {\n        marginTop: `${theme.spacing(3)}px !important`,\n    },\n    mt4: {\n        marginTop: `${theme.spacing(4)}px !important`,\n    },\n    mt5: {\n        marginTop: `${theme.spacing(5)}px !important`,\n    },\n    mt6: {\n        marginTop: `${theme.spacing(5)}px !important`,\n    },\n    mt7: {\n        marginTop: `${theme.spacing(5)}px !important`,\n    },\n    mt8: {\n        marginTop: `${theme.spacing(5)}px !important`,\n    },\n    ml1: {\n        marginLeft: `${theme.spacing(1)}px !important`,\n    },\n    ml2: {\n        marginLeft: `${theme.spacing(2)}px !important`,\n    },\n    ml3: {\n        marginLeft: `${theme.spacing(3)}px !important`,\n    },\n    ml4: {\n        marginLeft: `${theme.spacing(4)}px !important`,\n    },\n    ml5: {\n        marginLeft: `${theme.spacing(5)}px !important`,\n    },\n    pp0: {\n        padding: `${theme.spacing(0)}px !important`,\n    },\n    pp1: {\n        padding: `${theme.spacing(1)}px !important`,\n    },\n    pp2: {\n        padding: `${theme.spacing(2)}px !important`,\n    },\n    pp3: {\n        padding: `${theme.spacing(3)}px !important`,\n    },\n    pp4: {\n        padding: `${theme.spacing(4)}px !important`,\n    },\n    pp5: {\n        padding: `${theme.spacing(5)}px !important`,\n    },\n    pp6: {\n        padding: `${theme.spacing(6)}px !important`,\n    },\n    pp7: {\n        padding: `${theme.spacing(7)}px !important`,\n    },\n    pp8: {\n        padding: `${theme.spacing(8)}px !important`,\n    },\n    pb0: {\n        paddingBottom: `${theme.spacing(0)}px !important`,\n    },\n    pb1: {\n        paddingBottom: `${theme.spacing(1)}px !important`,\n    },\n    pb2: {\n        paddingBottom: `${theme.spacing(2)}px !important`,\n    },\n    pb3: {\n        paddingBottom: `${theme.spacing(3)}px !important`,\n    },\n    pb4: {\n        paddingBottom: `${theme.spacing(4)}px !important`,\n    },\n    pb5: {\n        paddingBottom: `${theme.spacing(5)}px !important`,\n    },\n    pb6: {\n        paddingBottom: `${theme.spacing(6)}px !important`,\n    },\n    pb7: {\n        paddingBottom: `${theme.spacing(7)}px !important`,\n    },\n    pb8: {\n        paddingBottom: `${theme.spacing(8)}px !important`,\n    },\n    pr0: {\n        paddingRight: `${theme.spacing(0)}px !important`,\n    },\n    pr1: {\n        paddingRight: `${theme.spacing(1)}px !important`,\n    },\n    pr2: {\n        paddingRight: `${theme.spacing(2)}px !important`,\n    },\n    pr3: {\n        paddingRight: `${theme.spacing(3)}px !important`,\n    },\n    pr4: {\n        paddingRight: `${theme.spacing(4)}px !important`,\n    },\n    pr5: {\n        paddingRight: `${theme.spacing(5)}px !important`,\n    },\n    pt0: {\n        paddingTop: `${theme.spacing(0)}px !important`,\n    },\n    pt1: {\n        paddingTop: `${theme.spacing(1)}px !important`,\n    },\n    pt2: {\n        paddingTop: `${theme.spacing(2)}px !important`,\n    },\n    pt3: {\n        paddingTop: `${theme.spacing(3)}px !important`,\n    },\n    pt4: {\n        paddingTop: `${theme.spacing(4)}px !important`,\n    },\n    pt5: {\n        paddingTop: `${theme.spacing(5)}px !important`,\n    },\n    pl0: {\n        paddingLeft: `${theme.spacing(0)}px !important`,\n    },\n    pl1: {\n        paddingLeft: `${theme.spacing(1)}px !important`,\n    },\n    pl2: {\n        paddingLeft: `${theme.spacing(2)}px !important`,\n    },\n    pl3: {\n        paddingLeft: `${theme.spacing(3)}px !important`,\n    },\n    pl4: {\n        paddingLeft: `${theme.spacing(4)}px !important`,\n    },\n    pl5: {\n        paddingLeft: `${theme.spacing(5)}px !important`,\n    },\n    selectSmall: {\n        '& .MuiOutlinedInput-input': {\n            fontSize: '0.85rem',\n            lineHeight: '1.5rem',\n            padding: '0.75rem 1rem',\n            paddingRight: '32px',\n            minWidth: '150px',\n        },\n    },\n    breakLongText: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        wordBreak: 'break-word',\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n    },\n}));\n","import {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    makeStyles,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React from 'react';\nimport { BiErrorCircle } from 'react-icons/bi';\nimport theme from '../../theme/MuiTheme';\nimport clsx from 'clsx';\nimport { Dispatch, RootState } from '../../rematch/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    digActions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(3),\n    },\n    buttonAlert: {\n        paddingRight: theme.spacing(5),\n        paddingLeft: theme.spacing(5),\n    },\n    title: {},\n}));\n\nfunction PopupNotification() {\n    const classes = useStyles();\n    const globalStyles = useGlobalStyles();\n    const dispatch = useDispatch<Dispatch>();\n    const statePopup = useSelector((state: RootState) => state.notificationPopup);\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'Escape' || e.key === 'Enter') {\n            dispatch.notificationPopup.close();\n        }\n    };\n    return (\n        <Dialog open={statePopup.isDisplay} fullWidth={true} maxWidth={'sm'} onKeyDown={handleKeyDown}>\n            <DialogTitle className={clsx(globalStyles.pt2, globalStyles.mm0)}>\n                <Grid item xs={12}>\n                    {/* <Typography variant=\"h4\" color=\"error\" align=\"center\">\n\t\t\t\t\t\tCảnh báo\n\t\t\t\t\t</Typography> */}\n                </Grid>\n                <Box\n                    style={{\n                        position: 'absolute',\n                        top: '1.5rem',\n                        right: '1.5rem',\n                    }}\n                >\n                    <IconButton\n                        aria-label=\"close\"\n                        onClick={() => {\n                            dispatch.notificationPopup.close();\n                        }}\n                        color=\"inherit\"\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                </Box>\n            </DialogTitle>\n\n            <DialogContent>\n                <Grid container direction=\"column\">\n                    <Grid item xs={12}>\n                        <Grid container justify=\"center\" className={clsx(globalStyles.pp1)}>\n                            <BiErrorCircle\n                                style={{\n                                    fontSize: '6rem',\n                                    color: theme.palette.error.main,\n                                    fontWeight: 200,\n                                }}\n                            />\n                        </Grid>\n                        <Grid container justify=\"center\" className={clsx(globalStyles.pp1)}>\n                            <Typography\n                                className={classes.title}\n                                variant=\"h4\"\n                                align=\"center\"\n                                // color=\"textPrimary\"\n                            >\n                                {statePopup.title || 'Bạn ăn cơm chưa ?'}\n                            </Typography>\n                        </Grid>\n                        <Grid container className={clsx(globalStyles.pp1)} justify=\"center\">\n                            <Typography\n                                className={classes.title}\n                                variant=\"subtitle1\"\n                                align=\"center\"\n                                // color=\"textPrimary\"\n                            >\n                                {statePopup.message || 'Lo ăn đi nhá, ăn nhiều rồi mập nhá '}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n\n            <DialogActions>\n                <Grid item xs={12} className={classes.digActions}>\n                    <Grid item container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n                        <Grid xs={6}>\n                            <Button\n                                variant=\"contained\"\n                                className={globalStyles.buttonAlert}\n                                size=\"small\"\n                                fullWidth\n                                // startIcon={<DeleteIcon />}\n                                color=\"primary\"\n                                onClick={() => {\n                                    dispatch.notificationPopup.close();\n                                }}\n                            >\n                                {'Ok nà'}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default PopupNotification;\n\ntype Props = {\n    isDisplay: boolean;\n    title?: string;\n    labelButtonConfirm?: string;\n    onCancel: () => void;\n};\n","// Generated by https://quicktype.io\n\nexport class HMTracking {\n    header?: Header;\n    body?: Body[];\n}\n\nexport interface Body {\n    location?: string;\n    timestamp?: string;\n    status?: string;\n    status_text?: string;\n    status_details?: string;\n    shown?: boolean;\n    full_courier_status?: string;\n    Specifics: string;\n    created?: string;\n}\n\nexport interface Header {\n    id: string;\n    tracking_number: string;\n    actionBox: ActionBox;\n    courier: Courier;\n    last_delivery_status: LastDeliveryStatus;\n    delay: boolean;\n    exception: boolean;\n    delivery_info: DeliveryInfo;\n}\n\nexport interface ActionBox {\n    type: string;\n    label: string;\n}\n\nexport interface Courier {\n    name: string;\n    prettyname: string;\n    trackingurl: string;\n    hide_trackingurl: boolean;\n    trackingurl_label: string;\n    rerouteurl: string;\n    rerouteurl_label_short: string;\n    rerouteurl_label_long: string;\n    rerouteurl_label_info: string;\n    destination_courier: DestinationCourier;\n}\n\nexport interface DestinationCourier {\n    name: string;\n    prettyname: string;\n}\n\nexport interface DeliveryInfo {\n    isReturn: boolean;\n}\n\nexport interface LastDeliveryStatus {\n    code: string;\n    status: string;\n    status_details: string;\n}\n","/* eslint-disable no-dupe-keys */\nimport { HMTracking } from '../model/HMTracking';\nimport axios, { AxiosInstance } from 'axios';\nimport { ProductHM } from '../model/ProductHM';\n\nexport class HMController {\n    protected serviceURL: string;\n    protected basePath: string;\n    public client: AxiosInstance;\n\n    public constructor(serviceURL: string, basePath: string) {\n        this.serviceURL = serviceURL;\n        this.basePath = basePath;\n        this.client = axios;\n    }\n    getTrackingByOrderNo(params: { orderNo: string }): Promise<HMTracking> {\n        if (params.orderNo.length < 10) {\n            return Promise.reject(new HMTracking());\n        }\n        return this.client\n            .get(`${this.serviceURL}/checkpoints/?orderNo=${params.orderNo}&user=1613945&lang=en`)\n            .then((res) => {\n                const data = res.data;\n                data.header = data.header[0];\n                data.body = Object.values(data.body);\n                if (data.body && data.body[0] && data.body[0][0]) {\n                    data.body = data.body[0].reverse();\n                }\n                return data;\n            });\n    }\n\n    getInfoProduct = (link: string): Promise<ProductHM> => {\n        // fetch(\n        //     \"https://consumer.truefitcorp.com/profile/public/v1/hms/products?s=0685816&locale=en_GB\",\n        //     {\n        //         credentials: \"include\",\n        //         headers: {\n        //             \"User-Agent\":\n        //                 \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0\",\n        //             Accept: \"*/*\",\n        //             \"Accept-Language\": \"en-US,en;q=0.5\",\n        //             \"Content-Type\": \"application/json\",\n        //             \"X-TF-UserToken\": \"lr744c3s8d3kt6081n8uqcrqsq\",\n        //             \"Proxy-Authorization\":\n        //                 \"Basic dXNlci11dWlkLTBmOTVmM2NiNWYxNTMzZmFmMTE0NTg2NGI4YjQxZGFjOmQ1NzM4ZmZjYWQzZQ==\",\n\n        //             Origin: \"https://www2.hm.com\",\n        //             Connection: \"keep-alive\",\n        //             Referer: \"https://www2.hm.com/\",\n        //             Cookie: \"tfcuser=lr744c3s8d3kt6081n8uqcrqsq; prod1-tf-prod-86479863pn=05\",\n        //             TE: \"Trailers\",\n        //         },\n        //         referrer: \"https://www2.hm.com/\",\n        //         method: \"GET\",\n        //     }\n        // ).then((res) => {\n        //     console.log(res);\n        // });\n        return this.client\n            .get(\n                `https://photorankapi-a.akamaihd.net/customers/218508/streams/bytag/${link}/?version=v2.2&auth_token=920865547897d325cbff11865b9a87af5957e27267b69ab3cbab86a8782dda1d`,\n            )\n            .then((res) => {\n                return res.data.data;\n            });\n    };\n}\n","import { RouteComponent } from 'src/component/common/NavBar';\n\nexport class LocalStoryController {\n    getLocal() {\n        return JSON.parse(localStorage.getItem('setting') || '{}');\n    }\n    setLocal(data: any) {\n        return localStorage.setItem('setting', JSON.stringify(data));\n    }\n    getByKey(key: string) {\n        const data = this.getLocal();\n        return data[key];\n    }\n    setDataByKey(key: string, data: any) {\n        const getLocal = this.getLocal();\n        getLocal[key] = data;\n        this.setLocal({\n            ...getLocal,\n        });\n    }\n    setShowNavBar(isShow: boolean) {\n        this.setDataByKey('isHiddenNarBar', isShow);\n    }\n    getShowNarBar(): boolean {\n        return this.getByKey('isHiddenNarBar');\n    }\n\n    setSettingColumnTable(params: { idTable: string; column: string[] }) {\n        const table = this.getByKey('table') || {};\n        const getTable = table[params.idTable] || {};\n        if (params.column.length == 0) {\n            params.column = getTable?.column || [];\n        }\n        getTable.column = params.column;\n        table[params.idTable] = getTable;\n        this.setDataByKey('table', table);\n    }\n    getSettingColumnTable(idTable: string): string[] {\n        const table = this.getByKey('table') || {};\n        const getTable = table[idTable] || {};\n        return getTable.column;\n    }\n\n    setStateTool(value: any) {\n        this.setDataByKey('stateToolKey', value);\n    }\n    getStateTool(): any {\n        const data = this.getByKey('stateToolKey');\n        if (data) {\n            return data;\n        }\n        return {\n            variables: [],\n            text: [\n                {\n                    title: 'text1',\n                    value: '',\n                },\n            ],\n            textIndex: 0,\n        };\n    }\n\n    getListUserLogin(): { username: string; password: string }[] {\n        const get = this.getByKey('account');\n        return get || [];\n    }\n    addUserLogin(params: { username: string; password: string }) {\n        const get = this.getListUserLogin();\n        const index = get.findIndex((item) => item.username == params.username);\n        if (index >= 0) {\n            get[index] = params;\n        } else {\n            get.push(params);\n        }\n        this.setDataByKey('account', get);\n    }\n    removeLogin(params: { username: string }) {\n        const get = this.getListUserLogin();\n        const index = get.findIndex((item) => item.username == params.username);\n        if (index >= 0) {\n            get.splice(index, 1);\n        }\n        this.setDataByKey('account', get);\n    }\n\n    addMenu(item: RouteComponent[]) {\n        this.setDataByKey('menu', item);\n    }\n    getMenu(): RouteComponent[] {\n        const get = this.getByKey('menu');\n        return get || [];\n    }\n}\n","import { AxiosInstance } from 'axios';\n\nimport { dispatch } from '../rematch/store';\nimport { CountFilter, FindFilter, IBaseController, ListFilter, Paging } from 'luong-base-model';\n\nexport class BaseController<T> implements IBaseController<T> {\n    protected serviceURL: string;\n    protected basePath: string;\n    public client: AxiosInstance;\n\n    public constructor(serviceURL: string, basePath: string, client: AxiosInstance) {\n        this.serviceURL = serviceURL;\n        this.basePath = basePath;\n        this.client = client;\n    }\n    getById(params: { id: string }): Promise<T | undefined> {\n        return this.client.get(`${this.serviceURL}/${this.basePath}/getById/${params.id}`).then((res) => {\n            return res.data;\n        });\n    }\n\n    save(t: T): Promise<T> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}`, t).then((res) => {\n            dispatch.notification.success('Lưu thành công');\n            return res.data;\n        });\n    }\n    find(params: FindFilter<T>): Promise<T[]> {\n        params = { ...params, sort: this.convertSort(params.sort) };\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/find`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    findOne(params: FindFilter<T>): Promise<T> {\n        params = { ...params, sort: this.convertSort(params.sort) };\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/find-one`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    list(params: ListFilter<T>): Promise<Paging<T>> {\n        params = { ...params, sort: this.convertSort(params.sort) };\n        params = {\n            ...params,\n            searchFields: this.convertSearch(params.searchFields) as any,\n        };\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n\n    getByIds(params: { id: string[] }): Promise<T[]> {\n        throw new Error('Method not implemented.');\n    }\n    remove(params: { id: string }): Promise<T> {\n        return this.client.delete(`${this.serviceURL}/${this.basePath}/${params.id}`).then((res) => {\n            dispatch.notification.success('Xóa thành công');\n            return res.data;\n        });\n    }\n\n    count(params: CountFilter<T>): Promise<number> {\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/count`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n\n    public convertSort(sort: string[] | string | undefined): string {\n        if (!sort) return '';\n        if (typeof sort === 'string') {\n            return sort;\n        }\n        var sortString: string = '';\n        // eslint-disable-next-line array-callback-return\n        sort.map((sort) => {\n            sortString += `${sort},`;\n        });\n        sortString = sortString.substring(0, sortString.length - 1);\n        return sortString;\n    }\n    public convertSearch(search: string[] | (string | number | symbol)[] | undefined): string {\n        if (!search) return '';\n        if (typeof search === 'string') {\n            return search;\n        }\n        var searchString: string = '';\n        // eslint-disable-next-line array-callback-return\n        search.map((search: any) => {\n            searchString += `${search},`;\n        });\n        searchString = searchString.substring(0, searchString.length - 1);\n        console.log(searchString);\n        return searchString;\n    }\n}\n","import { ListFilter, Paging } from 'luong-base-model/lib';\nimport { OrderTracking, ProductOrder } from 'src/afi-manager-base-model/model/OrderTracking';\nimport { dispatch } from 'src/rematch/store';\nimport {\n    ExportOrderTracking,\n    FilterStatistic,\n    IntervalCheckoutHmTeamAle,\n    IOrderTrackingController,\n    PropsCreateManyFlow,\n    PropsExportData,\n    StatisticByUserHm,\n} from '../afi-manager-base-model/controllers/IOrderTrackingController';\nimport { BaseController } from './BaseController';\n\nexport class OrderTrackingController extends BaseController<OrderTracking> implements IOrderTrackingController {\n    orderHmDetailForWarehouse(params: { orderHmId: string }): Promise<Paging<OrderTracking>> {\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/order-hm-detail-for-warehouse`, {\n                params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    splitOrderWithMerge(params: {\n        orderTrackingOld: OrderTracking;\n        orderTrackingNew: OrderTracking;\n        productOrder: ProductOrder;\n    }): Promise<{ orderTrackingOld: OrderTracking; productOrder: ProductOrder; orderTrackingNew: OrderTracking }> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/split-order-with-merge`, params).then((res) => {\n            return res.data;\n        });\n    }\n    splitOrderWithNew(params: {\n        orderTrackingOld: OrderTracking;\n        productOrder: ProductOrder;\n    }): Promise<{ orderTrackingOld: OrderTracking; orderTrackingNew: OrderTracking }> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/split-order-with-new`, params).then((res) => {\n            return res.data;\n        });\n    }\n    saveByCustomer(params: OrderTracking): Promise<OrderTracking> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/save-by-customer`, params).then((res) => {\n            dispatch.notification.success('Lưu thành công');\n            return res.data;\n        });\n    }\n    listByCustomer(params: ListFilter<OrderTracking>): Promise<Paging<OrderTracking>> {\n        params = { ...params, sort: this.convertSort(params.sort) };\n        params = {\n            ...params,\n            searchFields: this.convertSearch(params.searchFields) as any,\n        };\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/list-for-customer`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    intervalTeamRegister(params: FilterStatistic): Promise<IntervalCheckoutHmTeamAle[][]> {\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/interval-team-register`, {\n                params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    intervalTeamCheckout(params: FilterStatistic): Promise<IntervalCheckoutHmTeamAle[][]> {\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/interval-team-checkout`, {\n                params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    statisticByUserHm(params: ListFilter<StatisticByUserHm>): Promise<Paging<StatisticByUserHm>> {\n        params = { ...params, sort: this.convertSort(params.sort) };\n        params = {\n            ...params,\n            searchFields: this.convertSearch(params.searchFields) as any,\n        };\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/staticti-by-user-hm`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n\n    orderHmForWarehouse(params: ListFilter<StatisticByUserHm>): Promise<Paging<StatisticByUserHm>> {\n        params = { ...params, sort: this.convertSort(params.sort) };\n        params = {\n            ...params,\n            searchFields: this.convertSearch(params.searchFields) as any,\n        };\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/statistic-order-hm-by-user`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    exportData(params: PropsExportData): Promise<ExportOrderTracking[]> {\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/export-data`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    mergeOrderTrackingToUser(params: { userHmId?: string; userId?: string }): Promise<OrderTracking[]> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/merger-order-to-user`, params).then((res) => {\n            return res.data;\n        });\n    }\n    createManyByEmailsAndOrders(params: PropsCreateManyFlow): Promise<OrderTracking[]> {\n        return this.client\n            .post(`${this.serviceURL}/${this.basePath}/create-many-by-emails-orders`, params)\n            .then((res) => {\n                return res.data;\n            });\n    }\n    syncSortTracking(params: {}): Promise<OrderTracking[]> {\n        return this.client.get(`${this.serviceURL}/${this.basePath}/sync`, params).then((res) => {\n            return res.data;\n        });\n    }\n    createManyFlow(params: PropsCreateManyFlow): Promise<OrderTracking[]> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/create-many-flow`, params).then((res) => {\n            return res.data;\n        });\n    }\n    public listForProgress(params: ListFilter<OrderTracking>): Promise<Paging<OrderTracking>> {\n        params.sort = ['totalPrice', 'email'];\n        params = { ...params, sort: this.convertSort(params.sort) };\n        params = {\n            ...params,\n            searchFields: this.convertSearch(params.searchFields) as any,\n        };\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/list-for-progress`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n}\n","import { BaseModel } from 'luong-base-model';\nimport { BaseController } from './BaseController';\n\nexport class TestModel extends BaseModel {\n    fullName?: string;\n    email?: string;\n}\nexport class TestController extends BaseController<TestModel> {}\n","import { ListFilter, Paging } from 'luong-base-model/lib';\nimport { IUserController } from '../afi-manager-base-model/controllers/IUserController';\nimport { InfoMe } from '../afi-manager-base-model/model/InfoMe';\nimport { User, UserAccount } from '../afi-manager-base-model/model/User';\nimport { BaseController } from './BaseController';\n\nexport class UserController extends BaseController<User> implements IUserController {\n    getByJwt(params: { userId: string }): Promise<InfoMe> {\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/get-jwt-for-admin`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    listUserForAdmin(params: ListFilter<UserAccount>): Promise<Paging<UserAccount>> {\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/lis-by-admin`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    saveUserForAdmin(params: UserAccount): Promise<UserAccount> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/save-by-admin`, params).then((res) => {\n            return res.data;\n        });\n    }\n    register(params: UserAccount): Promise<User> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/register`, params).then((res) => {\n            return res.data;\n        });\n    }\n    getMe(): Promise<InfoMe> {\n        return this.client.get(`${this.serviceURL}/${this.basePath}/getMe`).then((res) => {\n            return res.data;\n        });\n    }\n    login(params: { username: string; password: string }): Promise<User> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/login`, params).then((res) => {\n            return res.data;\n        });\n    }\n}\n","import { IMetaDataController } from '../afi-manager-base-model/controllers/IMetaDataController';\nimport { InfoMe } from '../afi-manager-base-model/model/InfoMe';\nimport { MetaData } from '../afi-manager-base-model/model/MetaData';\nimport { BaseController } from './BaseController';\n\nexport class MetaDataController extends BaseController<MetaData> implements IMetaDataController {\n    getByKey(params: { key: string }): Promise<MetaData<any>> {\n        return this.client\n            .get(`${this.serviceURL}/${this.basePath}/get-by-key`, {\n                params: params,\n            })\n            .then((res) => {\n                return res.data;\n            });\n    }\n    saveByKey<T = any>(params: { key: string; data: T }): Promise<MetaData<any>> {\n        return this.client.post(`${this.serviceURL}/${this.basePath}/save-by-key`, params).then((res) => {\n            return res.data;\n        });\n    }\n}\n","import { ListFilter, Paging } from 'luong-base-model/lib';\nimport { IUserHmController } from 'src/afi-manager-base-model/controllers/IUserHmController';\nimport { OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\nimport { IUserController } from '../afi-manager-base-model/controllers/IUserController';\nimport { InfoMe } from '../afi-manager-base-model/model/InfoMe';\nimport { User, UserAccount } from '../afi-manager-base-model/model/User';\nimport { BaseController } from './BaseController';\n\nexport class UserHmController extends BaseController<User> implements IUserHmController {}\n","import { IUserController } from '../afi-manager-base-model/controllers/IUserController';\nimport { InfoMe } from '../afi-manager-base-model/model/InfoMe';\nimport { User, UserAccount } from '../afi-manager-base-model/model/User';\nimport { BaseController } from './BaseController';\nimport Model from 'luong-base-model';\n\nexport class PermissionController extends BaseController<Model.Permission> {}\n","import { IUserController } from '../afi-manager-base-model/controllers/IUserController';\nimport { InfoMe } from '../afi-manager-base-model/model/InfoMe';\nimport { User, UserAccount } from '../afi-manager-base-model/model/User';\nimport { BaseController } from './BaseController';\nimport Model from 'luong-base-model';\n\nexport class RoleController extends BaseController<Model.Role> {}\n","import { IMenuTemplateController } from 'src/afi-manager-base-model/controllers/IMenuTemplateController';\nimport { MenuTemplate } from 'src/afi-manager-base-model/model/MenuTemplate';\nimport { BaseController } from './BaseController';\n\nexport class MenuTemplateController extends BaseController<MenuTemplate> implements IMenuTemplateController {}\n","import { AxiosInstance } from \"axios\";\nimport { OrderAddress } from \"src/afi-manager-base-model/model/OrderAddress\";\nimport { ExcelConfig } from \"src/constants/ExcelConfig\";\nimport config from \"./../constants/Config\"\n\nexport class ExcelController {\n    public client: AxiosInstance;\n\n    public constructor(client: AxiosInstance) {\n        this.client = client;\n    }\n    getConfigList(): Promise<ExcelConfig> {\n        return this.client\n            .get(`${config.apiProxyUrl}/proxy?url=${config.apiSheetConfig}&action=getConfigUrls`)\n            .then((res) => {\n                console.log({ res })\n                return res.data;\n            });\n    }\n    getAddress():Promise<OrderAddress[]>{\n        return this.getConfigList().then(rst =>\n            this.client.get(`${config.apiProxyUrl}/proxy?url=${rst.general.apiGatewayUrl}&action=getAddress`)\n                .then(res => res.data))\n    }\n    runBotCheckout(orderId?: string, email?: string, quantity?: number, warehouse?: string,staff?:string): Promise<any> {\n        return this.getConfigList().then(rst =>\n            this.client.post(`${config.apiProxyUrl}/proxy?url=${rst.bot.apiGatewayUrl}&action=create-order&orderId=${orderId}&warehouse=${warehouse}&email=${email}&quantity=${quantity}&staff=${staff}`)\n                .then(res => res.data))\n    }\n}","import axios, { AxiosError } from 'axios';\nimport config from '../constants/Config';\nimport { dispatch } from '../rematch/store';\nimport { HMController } from '../afi-manager-base-model/controllers/HMController';\nimport { LocalStoryController } from './LocalStoryController';\nimport { OrderTrackingController } from './OrderTrackingController';\nimport { TestController } from './TestController';\nimport { UserController } from './UserController';\nimport { routersMap, TypeScreen } from 'src/constants/Route';\nimport { MetaDataController } from './MetaDataController';\nimport { UserHmController } from './UserHmController';\nimport PermissionContainer from 'src/container/permission/PermissionContainer';\nimport { PermissionController } from './PermissionController';\nimport { RoleController } from './RoleController';\nimport { MenuTemplateController } from './MenuTemplateController';\nimport { ExcelController } from './ExcelController';\n\nexport const appClient = axios.create({\n    baseURL: config.apiGatewayUrl,\n    timeout: 30000,\n    headers: {\n        common: {\n            'Content-Type': 'application/json',\n        },\n    },\n});\nappClient.interceptors.request.use(\n    (res) => {\n        dispatch.loading.showLoading();\n        return res;\n    },\n    (err: AxiosError) => { },\n);\n\nappClient.interceptors.response.use(\n    (res) => {\n        dispatch.loading.hiddenLoading();\n        return res;\n    },\n    (err: AxiosError) => {\n        if (err.message === 'Network Error') {\n            dispatch.notification.error('Lỗi kết nối máy chủ');\n            // window.location.href = \"network-error\"\n        }\n        if (err.response?.status === 401) {\n            const linkNow = window.location.pathname;\n            const getRoute = routersMap.get(linkNow);\n            if (getRoute && getRoute?.typeAuthen != TypeScreen.public) {\n                dispatch.notification.error('Authentication error, please login again');\n                window.location.href = '/login';\n            }\n        } else if (err.response?.status === 403) {\n            dispatch.notification.error('Bạn hông có quyền đối hành động này đâu 🙁');\n        } else {\n            dispatch.notification.error(err.response?.data?.message || ' Có lỗi xảy ra');\n        }\n        dispatch.loading.hiddenLoading();\n        return Promise.reject(err);\n    },\n);\nappClient.defaults.headers['authorization'] =\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijg4YThhMjAwLTg2MjctNDcyYy04YzZhLTNmYjNhZjAyY2JiZiIsImRlbGV0ZWRBdCI6bnVsbCwiY3JlYXRlZEF0IjoiMjAyMS0wNS0yM1QxNDozMTo0NC43OTZaIiwidXBkYXRlZEF0IjoiMjAyMS0wNS0yM1QxNDozMTo0NC43OTZaIiwiY3JlYXRlZEJ5IjpudWxsLCJ1cGRhdGVkQnkiOm51bGwsImZ1bGxOYW1lIjoiTmd1eWVuIFZhbiBMdW9uZyAiLCJiaXJ0aERheSI6IjIwMjEtMDUtMTZUMDc6MDg6MTIuMzQ0WiIsImFkZHJlc3MiOiIyMSBsdW9uZyB0aGUgdmluaCIsInBob25lTnVtYmVyIjoiMDM5MzQ1NzE0NCIsInBhc3N3b3JkIjoiNjliNWY5NTgyODQ1MWRlNDgxYTNkMmVhMjlmOTBjMjUiLCJlbWFpbCI6ImxnbnZwckBnbWFpbC5jb20iLCJ1c2VyTmFtZSI6Imx1b25nIiwicGFyZW50SWQiOiIxZDQ4NzgxZC01ZmJiLTQzNjQtOTU0NS01NTA4MzQ2MWQ3YzQiLCJpYXQiOjE2MjE5MzQzMzR9.8YaNLr8SVimJq9LCrURn6nBbXEjMpzgFM2Xs_2O97h0';\nexport const localStoryController = new LocalStoryController();\n\nexport const userController = new UserController(config.apiGatewayUrl, 'user', appClient);\n\nexport const testController = new TestController('https://apidev.tracking.afivn.com', 'appUser', appClient);\nexport const orderTrackingController = new OrderTrackingController(config.apiGatewayUrl, 'orderTracking', appClient);\n\nexport const metaDataController = new MetaDataController(config.apiGatewayUrl, 'metaData', appClient);\n\nexport const hMController = new HMController('https://api.parcellab.com/v2', '');\n\nexport const userHmController = new UserHmController(config.apiGatewayUrl, 'afi/userHm', appClient);\n\nexport const permssionController = new PermissionController(config.apiGatewayUrl, 'permssion', appClient);\nexport const roleController = new RoleController(config.apiGatewayUrl, 'role', appClient);\nexport const menuTeamplateController = new MenuTemplateController(config.apiGatewayUrl, 'menuTemplate', appClient);\nexport const excelController = new ExcelController(appClient);\n\n//\n//\n","import { createModel } from '@rematch/core';\nimport { RootModel } from '.';\n\nexport enum TypeNotification {\n    ERROR = 'error',\n    SUCCESS = 'success',\n    DEFAULT = 'default',\n    WARNING = 'warning',\n    INFO = 'info',\n    // success, error, warning, info, or default\n}\nexport interface Notification {\n    message: string;\n    type: TypeNotification;\n}\nexport const notification = createModel<RootModel>()({\n    state: {\n        message: '',\n        type: TypeNotification.SUCCESS,\n    },\n    reducers: {\n        update: (state, notification: Notification) => {\n            return {\n                ...notification,\n            };\n        },\n    },\n    effects: (dispatch) => {\n        const { notification } = dispatch;\n        return {\n            success(message: string) {\n                notification.update({\n                    message,\n                    type: TypeNotification.SUCCESS,\n                });\n            },\n            error(message: string) {\n                notification.update({\n                    message,\n                    type: TypeNotification.ERROR,\n                });\n            },\n        };\n    },\n});\n","import { createModel } from '@rematch/core';\nimport { Role } from 'luong-base-model/lib';\nimport { appClient, userController } from 'src/controller';\nimport { RootModel } from '.';\n// import { Customer } from \"../model/base-gift-card/model/Customer\";\n\nexport type AuthenModel = {\n    role?: Role[];\n    jwt?: string;\n    // info?: Customer;\n    info?: any;\n    isGet?: boolean;\n};\n\nexport const authen = createModel<RootModel>()({\n    state: {\n        role: undefined,\n        jwt: '',\n        isGet: false,\n    } as AuthenModel,\n    reducers: {\n        update: (state, authen: AuthenModel) => {\n            return {\n                ...authen,\n            };\n        },\n    },\n    effects: (dispatch) => {\n        const { authen } = dispatch;\n        return {\n            async login(payload: AuthenModel): Promise<any> {\n                localStorage.setItem('jwt', payload.jwt || '');\n                appClient.defaults.headers['authorization'] = payload.jwt;\n                return authen.update({ ...payload, isGet: true });\n            },\n            async logOut() {\n                appClient.defaults.headers['authorization'] = '';\n                localStorage.setItem('jwt', '');\n                window.location.href = '/login';\n                authen.update({\n                    role: undefined,\n                    info: {},\n                    isGet: true,\n                    jwt: '',\n                });\n            },\n            async getMe(): Promise<any> {\n                const jwt = localStorage.getItem('jwt');\n                appClient.defaults.headers['authorization'] = jwt;\n                return userController\n                    .getMe()\n                    .then((res) => {\n                        return authen.update({\n                            isGet: true,\n                            role: res.role,\n                            info: res,\n                        });\n                    })\n                    .catch((err) => {\n                        authen.update({\n                            role: [],\n                            info: {},\n                            isGet: true,\n                            jwt: '',\n                        });\n                    });\n            },\n        };\n    },\n});\n","import { createModel } from '@rematch/core';\nimport { RootModel } from '.';\n\nexport const loading = createModel<RootModel>()({\n    state: false,\n    reducers: {\n        update: (state, loading: boolean) => {\n            return loading;\n        },\n    },\n    effects: (dispatch) => {\n        const { loading } = dispatch;\n        return {\n            showLoading() {\n                loading.update(true);\n            },\n            hiddenLoading() {\n                loading.update(false);\n            },\n        };\n    },\n});\n","import { createModel } from '@rematch/core';\nimport { RootModel } from '.';\n\nexport enum TypeNotification {\n    ERROR = 'error',\n    SUCCESS = 'success',\n    DEFAULT = 'default',\n    WARNING = 'warning',\n    INFO = 'info',\n    // success, error, warning, info, or default\n}\nexport interface NotificationPopup {\n    message: string;\n    type: TypeNotification;\n    isDisplay: boolean;\n    title: string;\n}\nexport const notificationPopup = createModel<RootModel>()({\n    state: {\n        message: '',\n        type: TypeNotification.SUCCESS,\n        isDisplay: false,\n        title: 'Thông báo',\n    } as NotificationPopup,\n    reducers: {\n        update: (state, notification: NotificationPopup) => {\n            return {\n                ...notification,\n            };\n        },\n    },\n    effects: (dispatch) => {\n        const { notificationPopup } = dispatch;\n        return {\n            success(params: { message: string; title: string }) {\n                notificationPopup.update({\n                    message: params.message,\n                    type: TypeNotification.SUCCESS,\n                    title: params.title,\n                    isDisplay: true,\n                });\n            },\n            error(params: { message: string; title: string }) {\n                notificationPopup.update({\n                    message: params.message,\n                    type: TypeNotification.SUCCESS,\n                    title: params.title,\n                    isDisplay: true,\n                });\n            },\n            close() {\n                notificationPopup.update({\n                    message: '',\n                    type: TypeNotification.SUCCESS,\n                    title: '',\n                    isDisplay: false,\n                });\n            },\n        };\n    },\n});\n","import { Models } from '@rematch/core';\nimport { useDispatch } from 'react-redux';\nimport { authen } from './Authen';\nimport { loading } from './LoadingTop';\nimport { notification } from './Notification';\nimport { notificationPopup } from './NotificationPopup';\n\nexport interface RootModel extends Models<RootModel> {\n    authen: typeof authen;\n    loading: typeof loading;\n    notification: typeof notification;\n    notificationPopup: typeof notificationPopup;\n}\n\nexport const models: RootModel = { authen, loading, notification, notificationPopup };\n\nexport const useRematchDispatch = <D extends {}, MD>(selector: (dispatch: D) => MD) => {\n    const dispatch = useDispatch<D>();\n    return selector(dispatch);\n};\n","import { init, RematchDispatch, RematchRootState } from '@rematch/core';\n// import createLoadingPlugin from '@rematch/loading';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { models, RootModel } from '.';\n\nexport const history = createBrowserHistory();\n// const loading = createLoadingPlugin(options);\nexport const store = init({\n    redux: {\n        reducers: {\n            router: connectRouter(history),\n            // form: formReducer,\n        },\n        middlewares: [routerMiddleware(history)],\n        rootReducers: {\n            RESET_APP: (state: any, payload: any) => undefined,\n        },\n        devtoolOptions: {\n            disabled: process.env.NODE_ENV === 'production',\n        },\n    },\n    models: models,\n});\nexport type Store = typeof store;\nexport type Dispatch = RematchDispatch<RootModel>;\nexport type RootState = RematchRootState<RootModel>;\n\nexport const dispatch: Dispatch = store.dispatch;\n","export const cssInfo = {\n    widthNarBar: 280,\n    heightMenu: 70,\n    colorCoin: '#E9AD03',\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/alt-text */\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Divider,\n    Grid,\n    Hidden,\n    HiddenProps,\n    IconButton,\n    makeStyles,\n    Typography,\n    Slide,\n    Popover,\n} from '@material-ui/core';\nimport transitions from '@material-ui/core/styles/transitions';\nimport clsx from 'clsx';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { CgPlayListRemove } from 'react-icons/cg';\nimport { FiChevronDown } from 'react-icons/fi';\nimport { IoLogOutOutline } from 'react-icons/io5';\nimport { VscMenu } from 'react-icons/vsc';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\nimport { dispatch } from 'src/rematch/store';\n\nimport { cssInfo } from '../../constants/Other';\nimport { localStoryController } from '../../controller';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport theme from '../../theme/MuiTheme';\nimport Button from './Button';\nimport ListGrid from './ListGrid';\nexport interface RouteComponent {\n    id?: string;\n    link: string;\n    icon: React.ReactElement;\n    label: string;\n    action?: (item?: RouteComponent) => void;\n    subMenu?: RouteComponent[];\n}\ntype Props = {\n    route: (RouteComponent | undefined)[];\n    leftComponent?: React.ReactElement;\n    isHiddenTopBar?: boolean;\n    onActionNavBar?: (isHidden: boolean) => void;\n    screenShowNavBar?: 'xs' | 'sm' | 'md' | 'lg';\n};\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        zIndex: 1000,\n    },\n    topBar: {\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        height: cssInfo.heightMenu,\n        zIndex: 1000,\n        background: 'white',\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    narBar: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        height: '100vh',\n        background: 'white', // todo : hard code\n        boxShadow: theme.shadows[1],\n        width: cssInfo.widthNarBar,\n        zIndex: 1000,\n        overflow: 'hidden',\n        transition: '0.3s',\n    },\n    menuItem: {\n        padding: theme.spacing(2),\n        textDecoration: 'none',\n        cursor: 'pointer',\n        display: 'flex',\n        color: theme.palette.grey[900],\n        alignItems: 'center',\n        position: 'relative',\n        '&:hover > div': {\n            display: 'block',\n            transition: '0.5s',\n            top: 55,\n            left: 0,\n        },\n        '&:hover': {\n            color: theme.palette.primary.main,\n        },\n    },\n    menuItemNavBar: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        paddingLeft: theme.spacing(0),\n        textDecoration: 'none',\n        cursor: 'pointer',\n        color: theme.palette.grey[900],\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        '&:hover': {\n            color: theme.palette.primary.main,\n        },\n    },\n    frSubMenu: {\n        // display: \"none\",\n        position: 'absolute',\n        left: 0,\n        top: -500,\n        background: 'none',\n        minWidth: 180,\n        padding: theme.spacing(1),\n    },\n    subMenu: {\n        background: 'white',\n    },\n    styleActive: {\n        color: theme.palette.primary.main,\n        fontWeight: 600,\n    },\n    styleActiveNavBar: {\n        color: theme.palette.primary.main,\n        fontWeight: 600,\n        borderLeft: `4px solid ${theme.palette.primary.main}`,\n        transition: '0.1s',\n    },\n    frLogoNavBar: {\n        width: '100%',\n    },\n    iconNarBar: {\n        padding: `0px ${theme.spacing(2)}px`,\n        fontSize: '1.2rem',\n    },\n    itemExpend: {\n        boxShadow: 'none',\n        width: '100%',\n        border: 'none',\n        padding: 0,\n        margin: 0,\n    },\n    subMenuNarBar: {\n        padding: 0,\n        paddingLeft: theme.spacing(4),\n    },\n    fixPadding: {\n        paddingLeft: '0 !important',\n        '& .MuiAccordionSummary-content': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n    iconNavigation: {\n        position: 'fixed',\n        background: 'white',\n        borderRadius: `0px ${theme.spacing(2)}px ${theme.spacing(2)}px 0px `,\n        top: theme.spacing(1),\n        width: 60,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        zIndex: 1001,\n        left: cssInfo.widthNarBar - 60,\n        fontSize: '2rem',\n        transition: '0.3s',\n        color: theme.palette.primary.main,\n    },\n    popover: {\n        '& > .MuiPopover-paper': {\n            boxShadow: theme.shadows[0],\n            // border: `1px solid ${theme.palette.divider}`,\n        },\n        zIndex: `800 !important` as any,\n        padding: theme.spacing(3),\n    },\n    popoverContentSubmenu: {\n        width: '100vw',\n        padding: theme.spacing(3),\n        position: 'relative',\n        zIndex: 1200,\n    },\n    popoverItemSubmenu: {\n        '&:hover *': {\n            color: theme.palette.primary.main,\n        },\n    },\n    iconSubmenuPopover: {\n        fontSize: '2rem',\n        padding: theme.spacing(1),\n        color: theme.palette.grey[700],\n    },\n}));\nexport default function NavBar(props: Props) {\n    const [state, setState] = useState<{\n        hiddenNavBar: boolean;\n        subMenu: RouteComponent[];\n        idSelectSubMenu: string;\n    }>({\n        hiddenNavBar: false,\n        subMenu: [],\n        idSelectSubMenu: '',\n    });\n\n    const menuElement = useRef(null);\n\n    const history = useHistory();\n    const classes = useStyles();\n    const globalStyle = useGlobalStyles();\n\n    const handleChangeHiddenNarBar = (isShow: boolean) => {\n        setState({ ...state, hiddenNavBar: isShow });\n        localStoryController.setShowNavBar(isShow);\n    };\n    let math = useRouteMatch();\n\n    const isActive = (item: RouteComponent): boolean => {\n        if (item.link === math.path) {\n            return true;\n        } else if (item.subMenu && item.subMenu.length > 0) {\n            const size = item.subMenu.length;\n            for (let i = 0; i < size; i++) {\n                if (item.subMenu[i].link === math.path) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    const menuItemIcon = (item: RouteComponent): React.ReactElement => {\n        return (\n            <Grid>\n                <NavLink\n                    to={item.link || '/'}\n                    onClick={(e) => {\n                        if (item.link) {\n                            history.push(item.link);\n                        }\n                        e.stopPropagation();\n                        e.preventDefault();\n                        item.action && item.action();\n                    }}\n                    className={clsx(classes.menuItemNavBar, isActive(item) && classes.styleActiveNavBar)}\n                >\n                    <Grid container alignItems=\"center\" alignContent=\"center\">\n                        <Grid className={classes.iconNarBar}>{item.icon}</Grid>\n                        <Grid>{item.label}</Grid>\n                    </Grid>\n                </NavLink>\n            </Grid>\n        );\n    };\n    const NavBarLeft = (): React.ReactElement => {\n        return (\n            <Grid\n                className={classes.narBar}\n                style={{\n                    width: state.hiddenNavBar ? 0 : cssInfo.widthNarBar,\n                    height: state.hiddenNavBar ? 0 : '100vh',\n                    borderRadius: state.hiddenNavBar ? 100 : 0,\n                }}\n                direction=\"column\"\n                justify=\"space-between\"\n                container\n            >\n                <Grid\n                    style={{\n                        width: cssInfo.widthNarBar,\n                    }}\n                >\n                    <Grid className={classes.frLogoNavBar}>\n                        <Grid\n                            className={clsx(globalStyle.pp2, globalStyle.pl4)}\n                            container\n                            justify=\"flex-start\"\n                            style={{\n                                cursor: 'pointer',\n                            }}\n                            onClick={() => {\n                                history.push('/');\n                            }}\n                        >\n                            <img style={{ width: 80 }} src=\"https://dev-giftcard.web.app/image/logo.png\" />\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <Grid>\n                        {props.route.map((item, index) => {\n                            if (item && item.subMenu && item.subMenu.length > 0) {\n                                return (\n                                    <Slide in={true} timeout={(index + 1) * 200} direction=\"up\">\n                                        <Grid container>\n                                            <Accordion className={clsx(classes.itemExpend)}>\n                                                <AccordionSummary\n                                                    className={classes.fixPadding}\n                                                    expandIcon={<FiChevronDown />}\n                                                >\n                                                    {menuItemIcon(item)}\n                                                </AccordionSummary>\n                                                <AccordionDetails className={classes.subMenuNarBar}>\n                                                    <Grid\n                                                        style={{\n                                                            marginTop: -10,\n                                                        }}\n                                                    >\n                                                        {item.subMenu.map((subMenu) => menuItemIcon(subMenu))}\n                                                    </Grid>\n                                                </AccordionDetails>\n                                            </Accordion>\n                                        </Grid>\n                                    </Slide>\n                                );\n                            }\n                            if (item) {\n                                return (\n                                    <Slide in={true} timeout={(index + 1) * 200} direction=\"up\">\n                                        <Grid>{menuItemIcon(item)}</Grid>\n                                    </Slide>\n                                );\n                            }\n                        })}\n                    </Grid>\n                </Grid>\n                <Grid className={globalStyle.pp2}>\n                    <Button\n                        startIcon={<IoLogOutOutline />}\n                        fullWidth\n                        color={'primary'}\n                        size=\"small\"\n                        onClick={() => {\n                            dispatch.authen.logOut();\n                        }}\n                    >\n                        Đăng xuất ra\n                    </Button>\n                </Grid>\n            </Grid>\n        );\n    };\n    const Menu = () => {\n        return (\n            <Grid justify=\"center\" className={classes.topBar} container ref={menuElement}>\n                <Popover\n                    id={'sub-menu'}\n                    open={Boolean(state.subMenu.length)}\n                    anchorEl={menuElement.current}\n                    onClose={() => setState({ ...state, subMenu: [], idSelectSubMenu: '' })}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    className={classes.popover}\n                >\n                    <Grid container className={classes.popoverContentSubmenu} justify=\"center\">\n                        <Grid lg={10} item>\n                            <Grid>\n                                {state.subMenu.map((item) => (\n                                    <Button\n                                        style={{\n                                            minWidth: 200,\n                                            marginRight: theme.spacing(3),\n                                        }}\n                                        className={clsx(\n                                            (isActive(item) && classes.styleActive) || '',\n                                            classes.popoverItemSubmenu,\n                                        )}\n                                        onClick={() => {\n                                            history.push(item.link);\n                                            setState({ ...state, subMenu: [], idSelectSubMenu: '' });\n                                        }}\n                                    >\n                                        <Grid container alignItems=\"center\" alignContent=\"center\">\n                                            <Grid\n                                                item\n                                                className={classes.iconSubmenuPopover}\n                                                style={{\n                                                    color: isActive(item) ? theme.palette.primary.main : undefined,\n                                                }}\n                                            >\n                                                {item.icon}\n                                            </Grid>\n                                            <Grid item>{item.label}</Grid>\n                                        </Grid>\n                                    </Button>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Popover>\n                <Grid container lg={10} alignContent=\"center\" alignItems=\"center\" justify=\"space-between\">\n                    <Grid>\n                        <Grid container alignContent=\"center\" alignItems=\"center\">\n                            <Grid\n                                className={clsx(globalStyle.pl3, globalStyle.pr3)}\n                                style={{\n                                    cursor: 'pointer',\n                                }}\n                                onClick={() => {\n                                    history.push('/');\n                                }}\n                            >\n                                <img style={{ width: 80 }} src=\"https://dev-giftcard.web.app/image/logo.png\" />\n                            </Grid>\n                            <Grid style={{ display: 'flex' }}>\n                                {props.route.map((item) => {\n                                    if (item && item.subMenu && item.subMenu.length > 0) {\n                                        return (\n                                            <Grid\n                                                className={clsx(\n                                                    classes.menuItem,\n                                                    (state.idSelectSubMenu == item.id || isActive(item)) &&\n                                                        classes.styleActive,\n                                                )}\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    if (\n                                                        Boolean(state.subMenu?.length) &&\n                                                        state.idSelectSubMenu == item.id\n                                                    ) {\n                                                        setState({\n                                                            ...state,\n                                                            subMenu: [],\n                                                            idSelectSubMenu: '',\n                                                        });\n                                                        return;\n                                                    }\n                                                    setState({\n                                                        ...state,\n                                                        subMenu: item.subMenu || [],\n                                                        idSelectSubMenu: item.id || '',\n                                                    });\n\n                                                    // Boolean(item.link) && history.push(item.link);\n                                                }}\n                                            >\n                                                <Typography>{item.label}</Typography>\n                                                <FiChevronDown\n                                                    style={{\n                                                        transform: `rotate(${\n                                                            state.idSelectSubMenu == item.id ? 180 : 0\n                                                        }deg)`,\n                                                        transition: '0.3s',\n                                                    }}\n                                                />\n                                            </Grid>\n                                        );\n                                    }\n                                    if (item) {\n                                        return (\n                                            <NavLink\n                                                to={item.link}\n                                                exact={true}\n                                                onClick={(e) => {\n                                                    if (!Boolean(item.link)) {\n                                                        e.preventDefault();\n                                                    }\n                                                    item.action && item.action();\n                                                }}\n                                                activeStyle={{\n                                                    borderBottom: `3px solid ${theme.palette.primary.main}`,\n                                                }}\n                                                className={classes.menuItem}\n                                                activeClassName={classes.styleActive}\n                                            >\n                                                <Typography>{item.label}</Typography>\n                                            </NavLink>\n                                        );\n                                    }\n                                })}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid>{props.leftComponent}</Grid>\n                </Grid>\n            </Grid>\n        );\n    };\n    const iconNavigation = (): React.ReactElement => {\n        return (\n            <Grid\n                style={{\n                    left: state.hiddenNavBar ? 0 : undefined,\n                }}\n                className={classes.iconNavigation}\n            >\n                <IconButton\n                    onClick={(e) => {\n                        handleChangeHiddenNarBar(!state.hiddenNavBar);\n                    }}\n                >\n                    {state.hiddenNavBar ? (\n                        <VscMenu\n                            style={{\n                                animation: 'rotate 1s',\n                            }}\n                        />\n                    ) : (\n                        <CgPlayListRemove\n                            style={{\n                                animation: 'rotate 1s',\n                            }}\n                        />\n                    )}\n                </IconButton>\n            </Grid>\n        );\n    };\n    useEffect(() => {\n        props.onActionNavBar && props.onActionNavBar(state.hiddenNavBar);\n    }, [state.hiddenNavBar]);\n    useEffect(() => {\n        setState({\n            ...state,\n            hiddenNavBar: localStoryController.getShowNarBar(),\n        });\n    }, []);\n    const checkScreenDownMenu = (): HiddenProps => {\n        if (props.screenShowNavBar === 'xs') return { xsDown: true };\n        else if (props.screenShowNavBar === 'sm') return { smDown: true };\n        else if (props.screenShowNavBar === 'md') return { mdDown: true };\n        else if (props.screenShowNavBar === 'lg') return { lgDown: true };\n        else return { xsDown: true };\n    };\n    const checkScreenDownNarBar = (): HiddenProps => {\n        if (props.screenShowNavBar === 'xs') return { smUp: true };\n        else if (props.screenShowNavBar === 'sm') return { mdUp: true };\n        else if (props.screenShowNavBar === 'md') return { lgUp: true };\n        else if (props.screenShowNavBar === 'lg') return { xlUp: true };\n        else return { smUp: true };\n    };\n    return (\n        <Grid container className={classes.root}>\n            {!props.isHiddenTopBar ? (\n                <>\n                    <Hidden {...checkScreenDownMenu()}>{Menu()}</Hidden>\n                    <Hidden {...checkScreenDownNarBar()}>{iconNavigation()}</Hidden>\n                    <Hidden {...checkScreenDownNarBar()}>\n                        {state.hiddenNavBar && <Grid container className={clsx(classes.topBar)}></Grid>}\n\n                        {NavBarLeft()}\n                    </Hidden>\n                </>\n            ) : (\n                <>\n                    <>{iconNavigation()}</>\n                    <>{NavBarLeft()}</>\n                </>\n            )}\n        </Grid>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Avatar, Grid, makeStyles, Popover, Typography } from '@material-ui/core';\nimport { AuthenModel } from '../../rematch/Authen';\nimport { useSelector } from 'react-redux';\nimport { dispatch, RootState } from '../../rematch/store';\nimport { cssInfo } from '../../constants/Other';\nimport { MdAccountCircle } from 'react-icons/md';\nimport Button from '../common/Button';\nimport { Divider } from '@material-ui/core';\nimport { HiOutlineLogout } from 'react-icons/hi';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        height: cssInfo.heightMenu,\n    },\n    iconAccount: {\n        fontSize: 40,\n    },\n    nameAccount: {\n        paddingLeft: theme.spacing(1),\n    },\n    popover: {\n        '& > .MuiPopover-paper': {\n            boxShadow: theme.shadows[1],\n            border: `1px solid ${theme.palette.divider}`,\n        },\n    },\n    btnActionOption: {\n        justify: 'left',\n        textAlign: 'left',\n    },\n    frAvt: {\n        height: 50,\n        width: 50,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        border: `1px solid ${theme.palette.divider}`,\n    },\n}));\nfunction AccountMenu(props: Props) {\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState();\n    const authen: AuthenModel = useSelector<RootState>((state) => state.authen) as AuthenModel;\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n        <Grid container className={classes.root} alignContent=\"center\" alignItems=\"center\">\n            <Button onClick={handleClick}>\n                <Grid alignContent=\"center\" alignItems=\"center\" container>\n                    <Grid>\n                        {!authen.info?.avt && <MdAccountCircle className={classes.iconAccount} />}\n                        {authen.info?.avt && (\n                            <Grid className={classes.frAvt}>\n                                <img\n                                    style={{\n                                        width: 50,\n                                    }}\n                                    src={authen.info?.avt}\n                                />\n                            </Grid>\n                        )}\n                    </Grid>\n\n                    <Grid className={classes.nameAccount}>{authen.info?.fullName}</Grid>\n                </Grid>\n            </Button>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                className={classes.popover}\n            >\n                <Grid className={globalStyle.pp2}>\n                    <Grid container alignContent=\"center\" alignItems=\"center\">\n                        <Grid>\n                            <Avatar variant=\"rounded\">{authen.info?.fullName?.substring(0, 2)}</Avatar>\n                        </Grid>\n                        <Grid className={globalStyle.pp2}>\n                            <Typography variant=\"body2\">{authen.info?.fullName}</Typography>\n                            <Typography variant=\"caption\">{authen.info?.email}</Typography>\n                        </Grid>\n                    </Grid>\n                    <Divider></Divider>\n                    <Grid container className={globalStyle.pt2}>\n                        <Button\n                            onClick={() => {\n                                dispatch.authen.logOut();\n                            }}\n                            className={classes.btnActionOption}\n                            fullWidth\n                            startIcon={<HiOutlineLogout />}\n                        >\n                            Đăng xuất ra\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Popover>\n        </Grid>\n    );\n}\n\nexport default React.memo(AccountMenu);\n","import { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { AiFillDashboard } from 'react-icons/ai';\nimport { FaKey } from 'react-icons/fa';\nimport { FiLogOut } from 'react-icons/fi';\nimport { RiAccountPinBoxFill } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MenuTemplate } from 'src/afi-manager-base-model/model/MenuTemplate';\nimport NavBar, { RouteComponent } from 'src/component/common/NavBar';\nimport AccountMenu from 'src/component/permssion/AccountMenu';\nimport { localStoryController } from 'src/controller';\nimport { cssInfo } from '../constants/Other';\nimport { routersMap } from '../constants/Route';\nimport { Dispatch, RootState } from '../rematch/store';\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        minHeight: '100vh',\n        // background: theme.palette.background.default,\n    },\n    navbar: {\n        // width: cssInfo.widthNarBar,\n        position: 'fixed',\n        height: '100vh',\n        zIndex: 1000,\n        // background: theme.palette.background.default,\n    },\n    main: {\n        // marginLeft: cssInfo.widthNarBar,\n        paddingTop: 70,\n        // paddingLeft: 230,\n        flex: 1,\n        height: '100vh',\n        transition: '0.3s',\n    },\n}));\ntype Props = {\n    children: React.ReactElement;\n};\nconst link = [\n    '/user-hm',\n    '/statistic-user-hm',\n    '/check-tracking',\n    '/permission',\n    '/role',\n    '/user-manager',\n    '/setup-menu',\n];\nfunction AuthenMenuScreen(props: Props) {\n    const classes = useStyle();\n    const [route, setRoute] = useState<{\n        route: RouteComponent[];\n        menu: MenuTemplate;\n    }>({\n        menu: {},\n        route: [],\n    });\n    const authen = useSelector((state: RootState) => state.authen);\n    const [hiddenNavBar, setHiddenNavBar] = useState<boolean>();\n    const dispath = useDispatch<Dispatch>();\n    useEffect(() => {\n        let menu: RouteComponent[] = [];\n        menu = authen?.info?.menu?.menu || [];\n\n        menu = menu\n            .map((item) => {\n                return getDefault(item);\n            })\n            .filter((item) => Boolean(item)) as any;\n\n        setRoute({\n            menu: authen.info.menu,\n            route: menu,\n        });\n    }, [authen]);\n\n    const getDefault = (item: RouteComponent): RouteComponent => {\n        const defaultLink = routersMap.get(item.link);\n        return {\n            ...item,\n            icon: defaultLink?.icon || <AiFillDashboard />,\n            link: defaultLink?.link || '',\n            label: item.label,\n            subMenu: item.subMenu?.map((sub) => getDefault(sub)) || [],\n        };\n    };\n    return (\n        <Grid>\n            <Grid className={classes.root} container direction=\"column\" justify=\"center\">\n                <Grid className={classes.navbar}>\n                    <NavBar\n                        onActionNavBar={(hidden: boolean) => {\n                            setHiddenNavBar(hidden);\n                        }}\n                        isHiddenTopBar={Boolean(route.menu?.isHiddenTop)}\n                        screenShowNavBar={route.menu?.screenShowNavBar || 'md'}\n                        leftComponent={<AccountMenu />}\n                        route={route.route}\n                    />\n                </Grid>\n                <Grid container justify=\"center\">\n                    <Grid lg={10} md={12} xs={12} sm={12}>\n                        <Grid className={classes.main}>{props.children}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nexport default AuthenMenuScreen;\n","import React, { useMemo } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { createBrowserHistory } from 'history';\nimport { InfoMe } from '../afi-manager-base-model/model/InfoMe';\nimport AuthenMenuScreen from 'src/container/AuthenMenuScreen';\nexport const history = createBrowserHistory({});\n\nexport function AuthenMenu({ ...props }: iProtectRoute) {\n    return useMemo(\n        () => (\n            <Route\n                path={props.path}\n                render={({ location }) => (\n                    // props.authen?.role == \"admin\"\n                    <AuthenMenuScreen>\n                        <props.component />\n                    </AuthenMenuScreen>\n                )}\n            />\n        ),\n        [props],\n    );\n}\n\nexport function AuthenRoute({ ...props }: iProtectRoute) {\n    return useMemo(\n        () => (\n            <Route\n                exact={props.exact}\n                path={props.path}\n                render={({ location }) =>\n                    Boolean(props.authen?.role) ? (\n                        <props.component />\n                    ) : (\n                        <Redirect\n                            to={{\n                                pathname: '/login',\n                                state: { from: location },\n                            }}\n                        />\n                    )\n                }\n            />\n        ),\n        [props],\n    );\n}\nexport function PublicRoute({ ...props }: iProtectRoute) {\n    return <Route exact={props.exact} path={props.path} render={({ location }) => <props.component />} />;\n}\n\nexport const goTo = (path: string) => {\n    history.push(path);\n};\n\ninterface iProtectRoute extends iRoute {\n    authen: InfoMe | undefined;\n}\n\nexport interface iRoute {\n    exact?: boolean;\n    path: string;\n    component: any;\n    requireGuest?: boolean;\n    requireAuth?: boolean;\n}\n","import { Button, Chip, Grid, IconButton, makeStyles, Slide, TextField, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { history } from 'src/constants/RouterAuthen';\nimport * as Yup from 'yup';\nimport { localStoryController, userController } from '../controller';\nimport { Dispatch, RootState } from '../rematch/store';\nimport { useGlobalStyles } from '../theme/GlobalStyle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100vh',\n        background: \"url('https://devforum.info/DEMO/LoginForm1/bg.jpg')\",\n        backgroundSize: 'cover',\n    },\n    frLogin: {\n        width: 420,\n        // height : 320,\n        background: 'white',\n        padding: theme.spacing(6),\n    },\n    titleLogin: {\n        fontWeight: 500,\n        // borderLeft : `${1}px solid ${theme.palette.primary.main}`\n    },\n}));\nconst validate = Yup.object({\n    username: Yup.string().required('Do not leave username blank'),\n    password: Yup.string().required('Do not leave the password blank'),\n});\nexport default function Login() {\n    const dispatch = useDispatch<Dispatch>();\n    const authen = useSelector((state: RootState) => state.authen);\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n    const [error, setError] = useState<string>('');\n    const formik = useFormik<{ username: string; password: string }>({\n        validationSchema: validate,\n        initialValues: { password: '', username: '' },\n        onSubmit: (values) => {\n            userController\n                .login({\n                    password: values.password,\n                    username: values.username,\n                })\n                .then((res: any) => {\n                    localStoryController.addUserLogin({\n                        ...formik.values,\n                    });\n                    dispatch.authen.login({\n                        info: res,\n                        jwt: res['jwt'],\n                        role: res.role,\n                    });\n                })\n                .catch((err) => {\n                    setError('Incorrect account or password');\n                });\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        formik.setTouched({\n            password: true,\n            username: true,\n        });\n    };\n\n    useEffect(() => {\n        if (authen.isGet) {\n            console.log(authen);\n            if (authen.info?.redirect) {\n                history.push(authen.info?.redirect);\n            } else {\n                // dispatch.notification.error('Permission not confirmed');\n            }\n        }\n    }, [authen]);\n    const classes = useStyles();\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\" className={classes.root}>\n            <Slide in={true} timeout={900} direction=\"down\">\n                <Grid className={classes.frLogin} container>\n                    <Grid container>\n                        {localStoryController.getListUserLogin().map((item, index) => (\n                            <Chip\n                                className={globalStyles.mb1}\n                                label={item.username}\n                                onDelete={() => {\n                                    localStoryController.removeLogin({\n                                        username: item.username,\n                                    });\n                                    formik.setValues({\n                                        ...formik.values,\n                                    });\n                                }}\n                                onClick={() => {\n                                    formik.setValues({\n                                        ...item,\n                                    });\n                                }}\n                            />\n                        ))}\n                    </Grid>\n                    <Grid className={globalStyles.pp1}>\n                        <Typography className={classes.titleLogin} variant=\"h4\" color=\"primary\">\n                            Login\n                        </Typography>\n                        <Typography color=\"error\" variant=\"caption\">\n                            {error}\n                        </Typography>\n                    </Grid>\n                    <form\n                        onSubmit={(e) => {\n                            onSubmit();\n                            e.preventDefault();\n                            return false;\n                        }}\n                    >\n                        <TextField\n                            className={globalStyles.mm1}\n                            fullWidth\n                            label=\"username\"\n                            name=\"username\"\n                            value={formik.values.username}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            error={!!(formik.touched.username && formik.errors.username)}\n                            InputProps={{\n                                endAdornment: (\n                                    <IconButton disabled onClick={() => setShowPassword(!showPassword)}>\n                                        <BsEyeSlash color=\"rgba(0,0,0,0)\" />\n                                    </IconButton>\n                                ),\n                            }}\n                            helperText={formik.touched.username && formik.errors.username}\n                        ></TextField>\n                        <TextField\n                            fullWidth\n                            label=\"password\"\n                            className={globalStyles.mm1}\n                            name=\"password\"\n                            value={formik.values.password}\n                            type={showPassword ? 'text' : 'password'}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            InputProps={{\n                                endAdornment: (\n                                    <IconButton onClick={() => setShowPassword(!showPassword)}>\n                                        {showPassword ? <BsEye /> : <BsEyeSlash />}\n                                    </IconButton>\n                                ),\n                            }}\n                            error={!!(formik.touched.password && formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                        ></TextField>\n                        <Button\n                            className={clsx(globalStyles.mm1, globalStyles.mt3)}\n                            fullWidth\n                            type={'submit'}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            // onClick={() => onSubmit()}\n                        >\n                            Login\n                        </Button>\n                        {/* <Grid container justify=\"center\">\n                            <Button\n                                onClick={() => history.push(\"/register\")}\n                                color=\"primary\"\n                            >\n                                Create a new account\n                            </Button>\n                        </Grid> */}\n                    </form>\n                </Grid>\n            </Slide>\n        </Grid>\n    );\n}\n","import React from 'react';\n\ntype Props = {\n    children: React.ReactElement[] | React.ReactElement | undefined;\n    gridGap?: number;\n    minWidthItem?: string;\n    heightItem?: string;\n};\nexport default function ListGrid(props: Props) {\n    return (\n        <div\n            style={{\n                width: '100%',\n                display: 'grid',\n                gridGap: props.gridGap || 0,\n                gridTemplateColumns: `repeat(auto-fit, minmax(${props.minWidthItem || '100px'}, 1fr))`,\n                gridTemplateRows: `repeat(auto, ${props.heightItem || '100px'} )`,\n            }}\n        >\n            {props.children}\n        </div>\n    );\n}\n","import { Slider, withStyles } from '@material-ui/core';\nimport React from 'react';\n\nconst MyPrettoSlider = withStyles((theme) => ({\n    root: {\n        color: theme.palette.primary.main,\n        height: 8,\n    },\n    thumb: {\n        height: 0,\n        width: 0,\n        backgroundColor: '#fff',\n        // border: \"2px solid currentColor\",\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        // borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        // borderRadius: 4,\n    },\n}))(Slider);\ntype Props = {\n    total?: number;\n    value: number;\n};\nexport default function PrettoSlider(props: Props) {\n    const value = (props.value * 100) / (props.total || 100);\n    return <MyPrettoSlider value={value}></MyPrettoSlider>;\n}\n","import { BaseModel } from 'luong-base-model/lib';\nimport { HMTracking } from './HMTracking';\nimport { ProductHM } from './ProductHM';\nimport { UserHm } from './UserHm';\n\nexport class OrderTracking extends BaseModel {\n    orderSource?: EOrderSource;\n\n    orderId?: string;\n\n    trackingId?: string;\n\n    userId?: string;\n\n    customerName?: string;\n\n    desc?: string;\n\n    infoHM?: HMTracking;\n\n    status?: EStatusOrderTracking;\n\n    lastTimeTracking?: Date;\n\n    email?: string;\n\n    productInfo?: ProductHM[];\n\n    productLink?: string[];\n\n    userHM?: UserHm;\n\n    userHMId?: string;\n\n    totalPrice?: number;\n    totalPriceBuy?: number;\n\n    productOrder?: ProductOrder[];\n    isOrder?: boolean;\n    isRegister?: boolean;\n    errorDesc?: string;\n\n    dataFirebase?: DataFirebaseHm;\n\n    registerByName?: string;\n    addCartByName?: string;\n    logs?: string[];\n}\n\nexport interface ProductOrder {\n    id?: string;\n    productId?: string;\n    size?: string;\n    price?: number;\n    originPrice?: number;\n    buyPrice?: number;\n    quantity?: number;\n    errorDesc?: string;\n    name?: string;\n    img?: string;\n}\n\nexport interface DataFirebaseHm {\n    email?: string;\n    timestamp?: string;\n    total?: string;\n    username?: string;\n    orderId?: string;\n    address?: BillingArress;\n    giftCards?: Giftcard[];\n}\n\nexport enum EOrderSource {\n    HM = 'H&M',\n    botAutoHm = 'botAutoHm',\n    autoSplit = 'autoSplit',\n}\n\nexport enum EStatusOrderTracking {\n    COMPLETED = 'Complete',\n    FLOWING = 'Flowing',\n}\n\ninterface BillingArress {\n    validated: boolean;\n    firstName: string;\n    lastName: string;\n    cellPhone: string;\n    \n    line1: string;\n    line2: string;\n    postalCode: string;\n    town: string;\n  }\n\n  interface Giftcard {\n    balanceAmount: BalanceAmount;\n    remainAmount?: any;\n    cardNumber: string;\n    cardPin?: any;\n    eovDate?: any;\n    currency?: any;\n    invoiceNumber?: any;\n    deductedAmount: BalanceAmount;\n    returnCode?: any;\n    displayMessage?: any;\n  }\n  \n  interface BalanceAmount {\n    currencyIso: string;\n    value: number;\n    priceType: string;\n    formattedValue: string;\n    minQuantity?: any;\n    maxQuantity?: any;\n    type?: any;\n  }","export class TrackingHMHelper {\n    static getOrderProcess(status: string): number {\n        switch (status) {\n            case 'OrderProcessed':\n                return 50;\n            case 'Delivered':\n                return 100;\n            default:\n                return 0;\n        }\n    }\n}\n","import React from 'react';\n\nexport class StringUtil {\n    static getHighlightedText = (text?: string, highlight?: string) => {\n        highlight = highlight?.replaceAll(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n        if (highlight == null || highlight.length === 0 || text == null || text.length === 0) return text;\n        const parts = text.split(new RegExp(`(${highlight})`, 'gi'));\n        return (\n            <span>\n                {parts.map((part, i) => (\n                    <span\n                        key={i}\n                        style={part.toLowerCase() === highlight?.toLowerCase() ? { backgroundColor: '#ffed59' } : {}}\n                    >\n                        {part}\n                    </span>\n                ))}\n            </span>\n        );\n    };\n    static upperCaseFirstChar = (string: string) => {\n        let upperCaseFirstChar = string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n        return upperCaseFirstChar;\n    };\n\n    static formatterMoney = new Intl.NumberFormat('uk-EN', {\n        style: 'currency',\n        currency: 'GBP',\n        minimumFractionDigits: 0,\n    });\n\n    static nullOrEmpty = (text?: string) => {\n        return text == null || text.trim().length === 0;\n    };\n    // formatterPhoneVN = (phone: string): string => {\n    //     var pn = new PhoneNumber(phone || '', 'VN');\n    //     return pn.getNumber('international');\n    // };\n}\n","/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Divider, Grid, IconButton, makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport PrettoSlider from '../common/PrettoSlider';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { EStatusOrderTracking, OrderTracking } from '../../afi-manager-base-model/model/OrderTracking';\nimport { hMController } from 'src/controller';\nimport moment from 'moment';\nimport { BiErrorCircle } from 'react-icons/bi';\nimport theme from 'src/theme/MuiTheme';\nimport { CircularProgress } from '@material-ui/core';\nimport { TrackingHMHelper } from 'src/helper/TrackingHMHelper';\nimport { StringUtil } from 'src/helper/StringUtil';\nimport { HMTracking } from 'src/afi-manager-base-model/model/HMTracking';\nimport CheckTrackingHM from 'src/container/CheckTrackingHM';\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        minHeight: 260,\n        background: '#fff',\n        position: 'relative',\n        border: `1px solid ${theme.palette.grey[200]}`,\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(1),\n    },\n    iconDelete: {\n        color: theme.palette.error.main,\n        margin: 0,\n        padding: 4,\n    },\n    iconEdit: {\n        color: theme.palette.primary.main,\n        margin: 0,\n        padding: 4,\n    },\n    iconStatus: {\n        background: theme.palette.success.main,\n        height: 15,\n        width: 15,\n        // padding: 10,\n        borderRadius: '50%',\n        margin: 0,\n    },\n}));\ntype Props = {\n    onDelete: (item: OrderTracking) => void;\n    item: OrderTracking;\n    onEdit: (item: OrderTracking) => void;\n    searchString: string;\n    index: number;\n};\nfunction TrackingInfoHMItem(props: Props) {\n    const classes = useStyle();\n    const [state, setState] = useState<{\n        infoOrderTracking: OrderTracking;\n        isGet: boolean;\n        isError: boolean;\n    }>({\n        infoOrderTracking: {},\n        isGet: false,\n        isError: false,\n    });\n    const globalsStyle = useGlobalStyles();\n\n    const updateInfoProduct = async (item: HMTracking) => {\n        let productInfo: any[] = [];\n\n        if (\n            props.item.productOrder ||\n            (props.item.productLink && props.item.productLink?.length > 0 && !props.item.productInfo)\n        ) {\n            let info;\n            if (props.item.productLink && props.item.productLink.length > 0) {\n                for (const link of props.item.productLink) {\n                    try {\n                        const id = link.split('productpage.')[1].split('.html')[0];\n                        info = await hMController.getInfoProduct(id);\n                    } catch (error) {\n                        info = undefined;\n                    }\n                    if (info) {\n                        productInfo?.push(info);\n                    }\n                }\n            } else if (props.item.productOrder) {\n                for (const product of props.item.productOrder) {\n                    try {\n                        const id = product.productId;\n                        if (id) {\n                            info = await hMController.getInfoProduct(id);\n                            info = { ...info, quantity: product.quantity };\n                        }\n                    } catch (error) {\n                        info = undefined;\n                    }\n                    if (info) {\n                        productInfo?.push(info);\n                    }\n                }\n            }\n\n            console.log({\n                productInfo,\n            });\n\n            // orderTrackingController.save(props.item);\n            setState({\n                infoOrderTracking: {\n                    ...props.item,\n                    infoHM: item,\n                    trackingId: item.header?.tracking_number,\n                    productInfo: productInfo,\n                },\n                isError: false,\n                isGet: true,\n            });\n        } else {\n            setState({\n                infoOrderTracking: {\n                    ...props.item,\n                    infoHM: item,\n                    trackingId: item.header?.tracking_number,\n                },\n                isError: false,\n                isGet: true,\n            });\n        }\n    };\n\n    const updateValue = () => {\n        hMController\n            .getTrackingByOrderNo({\n                orderNo: props.item.orderId || '',\n            })\n            .then((res) => {\n                updateInfoProduct(res);\n            })\n            .catch((err) => {\n                setState({\n                    infoOrderTracking: props.item,\n                    isError: true,\n                    isGet: true,\n                });\n            });\n    };\n    useEffect(() => {\n        setState({\n            infoOrderTracking: {},\n            isError: false,\n            isGet: false,\n        });\n        setTimeout(updateValue, props.index * 200);\n    }, [props.item]);\n    const main = () => {\n        return (\n            <Grid container>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                    <div\n                        className={classes.iconStatus}\n                        style={{\n                            background:\n                                state.infoOrderTracking.status == EStatusOrderTracking.COMPLETED\n                                    ? theme.palette.success.main\n                                    : theme.palette.grey[500],\n                        }}\n                    ></div>\n                    <Typography variant=\"body2\">\n                        #{StringUtil.getHighlightedText(state.infoOrderTracking.orderId, props.searchString)}\n                    </Typography>\n                    {/* <Grid>\n                        <Grid container>\n                            <IconButton\n                                onClick={() => props.onEdit(state.infoOrderTracking)}\n                                className={classes.iconEdit}\n                            >\n                                <AiOutlineEdit />\n                            </IconButton>\n                            <IconButton\n                                className={classes.iconDelete}\n                                onClick={() => props.onDelete(state.infoOrderTracking)}\n                            >\n                                <IoCloseOutline />\n                            </IconButton>\n                        </Grid>\n                    </Grid> */}\n                </Grid>\n                <Divider className={clsx(globalsStyle.mt1, globalsStyle.mb1)} />\n                {state.isError ? (\n                    <Grid container justify=\"center\" className={clsx(globalsStyle.pp1)}>\n                        <Grid container justify=\"center\">\n                            <BiErrorCircle\n                                style={{\n                                    fontSize: '6rem',\n                                    color: theme.palette.error.main,\n                                    fontWeight: 200,\n                                }}\n                            />\n                        </Grid>\n                        <Grid container justify=\"center\">\n                            <Typography\n                                variant=\"h4\"\n                                align=\"center\"\n                                // color=\"textPrimary\"\n                            >\n                                {'Order Error'}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <>\n                        <Grid container>\n                            <PrettoSlider\n                                value={TrackingHMHelper.getOrderProcess(\n                                    state.infoOrderTracking.infoHM?.header?.last_delivery_status.code || '',\n                                )}\n                            />\n                            <Grid container justify=\"space-between\">\n                                <Typography variant=\"subtitle1\">In Warehouse</Typography>\n                                <Typography color=\"secondary\">\n                                    {state.infoOrderTracking.infoHM?.header?.last_delivery_status.status}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Divider className={clsx(globalsStyle.mt1, globalsStyle.mb1)} />\n                        <Grid container direction=\"column\" style={{ padding: '16px 0px' }} justify=\"space-around\">\n                            {state.infoOrderTracking?.infoHM?.body?.map((item, index) => {\n                                if (index == 0) {\n                                    return (\n                                        <Grid style={{ width: '100%' }}>\n                                            <Grid>\n                                                <Typography variant=\"caption\">\n                                                    {moment(item.timestamp).format('DD/MM/YYYY, hh:mm')}\n                                                </Typography>\n                                            </Grid>\n                                            <Grid>\n                                                <Typography variant=\"body2\">{item.status_text}</Typography>\n                                            </Grid>\n                                        </Grid>\n                                    );\n                                }\n                            })}\n                        </Grid>\n                        <Divider className={clsx(globalsStyle.mt1, globalsStyle.mb1)} />\n                        <Grid\n                            container\n                            direction=\"column\"\n                            style={{\n                                borderTop: `1px solid ${theme.palette.divider}`,\n                                padding: '16px 0px',\n                            }}\n                            justify=\"space-around\"\n                        >\n                            <Grid>\n                                <Typography variant=\"body2\">\n                                    {StringUtil.getHighlightedText(\n                                        state.infoOrderTracking.trackingId,\n                                        props.searchString,\n                                    )}\n                                </Typography>\n                                <Typography>\n                                    {StringUtil.getHighlightedText(\n                                        state.infoOrderTracking.customerName,\n                                        props.searchString,\n                                    )}\n                                </Typography>\n                                <Typography>\n                                    {StringUtil.getHighlightedText(state.infoOrderTracking.email, props.searchString)}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Divider className={clsx(globalsStyle.mt1, globalsStyle.mb1)} />\n                        {state.infoOrderTracking.productInfo?.map((info) => (\n                            <Grid\n                                style={{\n                                    borderTop: `1px solid ${theme.palette.divider}`,\n                                    padding: theme.spacing(1),\n                                }}\n                                container\n                                alignItems=\"center\"\n                                alignContent=\"center\"\n                                justify=\"flex-start\"\n                            >\n                                <Grid>\n                                    <img\n                                        style={{\n                                            width: 36,\n                                            marginRight: 16,\n                                        }}\n                                        src={info._embedded.base_image.images.normal}\n                                    />\n                                </Grid>\n                                <Grid>\n                                    <Typography>\n                                        <a\n                                            href={info.product_url}\n                                            target=\"_blank\"\n                                            rel=\"noreferrer\"\n                                            style={{\n                                                fontSize: 10,\n                                                color: theme.palette.primary.main,\n                                            }}\n                                        >\n                                            {info.name} ({info.quantity || 1})\n                                        </a>\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        ))}\n                        <Grid\n                            container\n                            justify=\"center\"\n                            style={{\n                                borderTop: `1px solid ${theme.palette.divider}`,\n                                padding: theme.spacing(2),\n                            }}\n                        >\n                            <Typography>\n                                <a\n                                    style={{\n                                        color: theme.palette.secondary.main,\n                                    }}\n                                    href={`https://hm.delivery-status.com/gb/en/?orderNo=${state.infoOrderTracking.orderId}`}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    See Tracking\n                                </a>\n                            </Typography>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        );\n    };\n    return (\n        <Grid>\n            <Grid className={clsx(classes.root)} container>\n                {state.isGet ? (\n                    main()\n                ) : (\n                    <Grid container justify=\"center\" alignContent=\"center\">\n                        <CircularProgress />\n                    </Grid>\n                )}\n            </Grid>\n        </Grid>\n    );\n}\nexport default React.memo(TrackingInfoHMItem);\n","import { TextField as TextFieldMaterial, TextFieldProps } from '@material-ui/core';\nimport React from 'react';\ntype Props = {} & TextFieldProps;\nexport default function TextField(props: Props) {\n    return <TextFieldMaterial {...props}></TextFieldMaterial>;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport _ from 'lodash';\nimport { useCallback, useEffect, useState } from 'react';\nimport { BaseController } from '../controller/BaseController';\nimport { BaseModel, Filter as FilterQuery, ListFilter, Paging } from 'luong-base-model';\n\nexport function useCrudHook<T extends BaseModel, Filter extends ListFilter<T> = ListFilter<T>>(\n    props: Props<T, Filter>,\n) {\n    const [state, setState] = useState<State<T>>({\n        isShowConfirm: false,\n        isShowPopup: false,\n        itemSelected: {} as T,\n    });\n    const [query, setQueryMain] = useState<Filter>({\n        page: 1,\n        pageSize: 10,\n        ...props.initQuery,\n    } as Filter);\n\n    const setQuery = (filter: Filter) => {\n        setQueryMain({ ...filter });\n    };\n\n    const [pagingList, setPagingList] = useState<Paging<T>>({\n        page: 1,\n        pageSize: 10,\n        rows: [],\n        total: 0,\n        totalPages: 1,\n    });\n\n    const onConfirm = (item: T) => {\n        setState({\n            ...state,\n            itemSelected: item,\n            isShowConfirm: true,\n        });\n    };\n\n    const onShowPopup = (item: T) => {\n        setState({\n            ...state,\n            isShowPopup: true,\n            itemSelected: item,\n            isShowConfirm: false,\n        });\n    };\n\n    const onDelete = async (item: T): Promise<T> => {\n        if (props.onBeforeDelete) {\n            props.onBeforeDelete(item);\n        }\n        return props.controller.remove({ id: item.id || '' }).then((res) => {\n            if (props.onAfterDelete) {\n                props.onAfterDelete(res);\n            }\n            setQuery({ ...query });\n            setState({\n                isShowPopup: false,\n                isShowConfirm: false,\n                itemSelected: {} as T,\n            });\n            return res as T;\n        });\n    };\n\n    const onSave = async (item: T): Promise<T> => {\n        if (props.onBeforeSave) {\n            props.onBeforeSave(item);\n        }\n        if (props.saveController) {\n            return props.saveController\n                .bind(props.controller)({ ...item })\n                .then((res) => {\n                    if (props.onAfterSave) {\n                        props.onAfterSave(res);\n                    }\n                    setQuery({ ...query });\n                    setState({\n                        isShowPopup: false,\n                        isShowConfirm: false,\n                        itemSelected: {} as T,\n                    });\n                    return res;\n                })\n                .catch((err) => {\n                    setState({\n                        isShowPopup: true,\n                        isShowConfirm: false,\n                        itemSelected: item,\n                    });\n                    return item;\n                });\n        }\n        return props.controller\n            .save({ ...item })\n            .then((res) => {\n                if (props.onAfterSave) {\n                    props.onAfterSave(res);\n                }\n                setQuery({ ...query });\n                setState({\n                    isShowPopup: false,\n                    isShowConfirm: false,\n                    itemSelected: {} as T,\n                });\n                return res;\n            })\n            .catch((err) => {\n                setState({\n                    isShowPopup: true,\n                    isShowConfirm: false,\n                    itemSelected: item,\n                });\n                return item;\n            });\n    };\n\n    const onCancelConfirm = () => {\n        setState({\n            ...state,\n            isShowConfirm: false,\n            itemSelected: {} as T,\n        });\n    };\n\n    const onCancelPopup = () => {\n        setState({\n            ...state,\n            isShowPopup: false,\n            itemSelected: {} as T,\n        });\n    };\n\n    const onQueryChanged = useCallback(\n        _.debounce((value: string) => {\n            setQuery({ ...query, search: value, page: 1 });\n        }, props.delaySearch || 400),\n        [],\n    );\n\n    const onRefreshList = () => {\n        setQuery({ ...query });\n    };\n\n    const setFilter = (params: FilterQuery<T>) => {\n        setQuery({\n            ...query,\n            filter: params,\n        });\n    };\n\n    useEffect(() => {\n        if (props.onBeforeQuery) {\n            props.onBeforeQuery(query);\n        }\n        if (props.listController) {\n            props.listController\n                .bind(props.controller)(query)\n                .then((res) => {\n                    setPagingList(res);\n                    if (props.onAfterQuery) props.onAfterQuery(query);\n                });\n        } else {\n            props.controller?.list(query).then((res) => {\n                setPagingList(res);\n                if (props.onAfterQuery) props.onAfterQuery(query);\n            });\n        }\n    }, [query]);\n\n    return {\n        onConfirm,\n        onDelete,\n        onSave,\n        onShowPopup,\n        onCancelConfirm,\n        onCancelPopup,\n        setQuery,\n        setPagingList,\n        onRefreshList,\n        onQueryChanged,\n        isShowConfirm: state.isShowConfirm,\n        isShowPopup: state.isShowPopup,\n        itemSelected: state.itemSelected,\n        pagingList,\n        query,\n        setFilter,\n    };\n}\n\ntype State<T> = {\n    itemSelected: T;\n    isShowConfirm: boolean;\n    isShowPopup: boolean;\n};\n\ninterface Props<T, Filter extends ListFilter<T>> {\n    controller: BaseController<T>;\n    listController?: (params: Filter) => Promise<Paging<T>>;\n    saveController?: (t: T) => Promise<T>;\n    onBeforeSave?: (item: T) => void;\n    onAfterSave?: (item: T) => void;\n    onBeforeDelete?: (item: T) => void;\n    onAfterDelete?: (item: T) => void;\n    onBeforeQuery?: (params: Filter) => void;\n    onAfterQuery?: (params: Filter) => void;\n    onQuery?: (query: Filter) => void;\n    initQuery?: Filter;\n    /**\n     * @description millisecond\n     * */\n    delaySearch?: number;\n}\n","import {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    makeStyles,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport React from 'react';\nimport { BiErrorCircle } from 'react-icons/bi';\nimport theme from '../../theme/MuiTheme';\nimport clsx from 'clsx';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    digActions: {\n        padding: theme.spacing(4),\n    },\n    buttonAlert: {\n        paddingRight: theme.spacing(5),\n        paddingLeft: theme.spacing(5),\n    },\n    title: {},\n}));\n\nfunction PopUpConfirm(props: Props) {\n    const classes = useStyles();\n    const globalStyles = useGlobalStyles();\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'Enter') {\n            props.onConfirm();\n        }\n        if (e.key === 'Escape') {\n            props.onCancel();\n        }\n    };\n    return (\n        <Dialog open={props.isDisplay} fullWidth={true} maxWidth={'sm'} onKeyDown={handleKeyDown}>\n            <DialogTitle className={clsx(globalStyles.pp2, globalStyles.mm0)}>\n                <Grid item xs={12}>\n                    {/* <Typography variant=\"h4\" color=\"error\" align=\"center\">\n\t\t\t\t\t\tCảnh báo\n\t\t\t\t\t</Typography> */}\n                </Grid>\n                <Box\n                    style={{\n                        position: 'absolute',\n                        top: '1.5rem',\n                        right: '1.5rem',\n                    }}\n                >\n                    <IconButton\n                        aria-label=\"close\"\n                        onClick={() => {\n                            props.onCancel();\n                        }}\n                        color=\"inherit\"\n                    >\n                        <IoCloseOutline />\n                    </IconButton>\n                </Box>\n            </DialogTitle>\n\n            <DialogContent>\n                <Grid container direction=\"column\">\n                    <Grid item xs={12}>\n                        <Grid container justify=\"center\" className={clsx(globalStyles.pp1)}>\n                            <BiErrorCircle\n                                style={{\n                                    fontSize: '6rem',\n                                    color: theme.palette.error.main,\n                                    fontWeight: 200,\n                                }}\n                            />\n                        </Grid>\n                        <Grid container justify=\"center\" className={clsx(globalStyles.pp1)}>\n                            <Typography\n                                className={classes.title}\n                                variant=\"h4\"\n                                align=\"center\"\n                                // color=\"textPrimary\"\n                            >\n                                {props.title || 'Bạn chắc chắc hông  zạ?'}\n                            </Typography>\n                        </Grid>\n                        <Grid container className={clsx(globalStyles.pt1)} justify=\"center\">\n                            <Typography\n                                className={classes.title}\n                                variant=\"subtitle1\"\n                                align=\"center\"\n                                // color=\"textPrimary\"\n                            >\n                                {props.title || 'Không khôi phục lại được đâu nha '}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n\n            <DialogActions>\n                <Grid item xs={12} className={classes.digActions}>\n                    <Grid item container xs={12} justify=\"space-between\" alignItems=\"center\">\n                        <Grid xs={5}>\n                            <Button\n                                fullWidth\n                                // className={globalStyles.buttonOutline}\n                                // startIcon={<IoCloseOutline />}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                color={'primary'}\n                                onClick={() => {\n                                    props.onCancel();\n                                }}\n                            >\n                                {'À Thôi'}\n                            </Button>\n                        </Grid>\n\n                        <Grid xs={5}>\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                className={globalStyles.buttonAlert}\n                                size=\"small\"\n                                // startIcon={<IoCloseOutline />}\n                                color=\"primary\"\n                                onClick={() => {\n                                    props.onConfirm();\n                                }}\n                            >\n                                {props.labelButtonConfirm || 'Chắc'}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default PopUpConfirm;\n\ntype Props = {\n    isDisplay: boolean;\n    title?: string;\n    labelButtonConfirm?: string;\n    onConfirm: () => void;\n    onCancel: () => void;\n};\n","import {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\n\ntype Props = {\n    children: React.ReactElement | React.ReactElement[];\n    isDisplay: boolean;\n    onCancel: () => void;\n    onClickConfirm: () => void;\n    title: string;\n    labelConfirmBtn?:string\n};\n\nexport default function BaseDialog(props: Props) {\n    const globalStyles = useGlobalStyles();\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'Enter') {\n            props.onClickConfirm();\n        }\n        if (e.key === 'Escape') {\n            props.onCancel();\n        }\n    };\n    return (\n        <Dialog open={props.isDisplay} fullWidth onKeyDown={handleKeyDown}>\n            <Grid className={clsx(globalStyles.pp3)}>\n                <Grid>\n                    <DialogTitle>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h5\" color={'primary'} align={'center'}>\n                                {props.title}\n                            </Typography>\n                        </Grid>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '1.5rem',\n                                right: '1.5rem',\n                            }}\n                        >\n                            <IconButton aria-label=\"close\" onClick={props.onCancel}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Box>\n                    </DialogTitle>\n                </Grid>\n                <DialogContent>\n                    <Grid container xs={12} direction=\"column\" className={clsx(globalStyles.mt1)}>\n                        {props.children}\n                    </Grid>\n                </DialogContent>\n                <Grid className={clsx(globalStyles.ml2, globalStyles.mr2)}>\n                    <DialogActions>\n                        <Grid item container xs={12} justify={'space-between'}>\n                            <Grid item container xs={5} justify={'center'} alignItems={'center'}>\n                                <Button\n                                    startIcon={<CloseIcon />}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    onClick={props.onCancel}\n                                >\n                                    Cancel\n                                </Button>\n                            </Grid>\n                            <Grid item container xs={5} justify={'center'} alignItems={'center'}>\n                                <Button\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    fullWidth\n                                    startIcon={<SaveIcon />}\n                                    type={'submit'}\n                                    color=\"primary\"\n                                    onClick={props.onClickConfirm}\n                                >\n                                    {props.labelConfirmBtn||\"Save\"}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </DialogActions>\n                </Grid>\n            </Grid>\n        </Dialog>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Divider,\n    Grid,\n    makeStyles,\n    TextField,\n    Switch,\n    Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport React, { useCallback, useEffect } from 'react';\nimport { hMController } from 'src/controller';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport * as Yup from 'yup';\nimport { OrderTracking, EStatusOrderTracking } from '../../afi-manager-base-model/model/OrderTracking';\nimport BaseDialog from '../common/BaseDialog';\nimport PrettoSlider from '../common/PrettoSlider';\nimport moment from 'moment';\nimport { BiErrorCircle } from 'react-icons/bi';\nimport theme from 'src/theme/MuiTheme';\nimport { TrackingHMHelper } from 'src/helper/TrackingHMHelper';\nconst CKEditor = require('ckeditor4-react');\n\ntype Props = {\n    isDisplay: boolean;\n    item: OrderTracking;\n    onEdit: (item: OrderTracking) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({\n    orderId: Yup.string()\n        .max(100, 'Chữ không được quá 100 kí tự')\n        .min(11, 'ID của HM có trên 11 kí tự')\n        .required('Is require !!')\n        .trim()\n        .nullable(),\n});\n\nconst useStyle = makeStyles((theme) => ({\n    containerDetail: {\n        background: '#fff',\n        position: 'relative',\n        border: `1px solid ${theme.palette.grey[400]}`,\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(1),\n        boxShadow: 'none',\n    },\n    iconDelete: {\n        color: theme.palette.error.main,\n        margin: 0,\n        padding: 4,\n    },\n    iconEdit: {\n        color: theme.palette.primary.main,\n        margin: 0,\n        padding: 4,\n    },\n}));\nexport default function PopupFlowTrackingHM(props: Props) {\n    const classes = useStyle();\n    const globalsStyle = useGlobalStyles();\n    const formik = useFormik<OrderTracking>({\n        initialValues: {},\n        validationSchema: validate,\n        onSubmit: () => {\n            // .filter((item) => Boolean(item))\n            props.onEdit({\n                ...formik.values,\n                productLink: formik.values?.productLink?.filter((item) => Boolean(item)),\n            });\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        formik.setTouched(_.mapValues(new OrderTracking(), () => true));\n    };\n\n    useEffect(() => {\n        if (props.isDisplay) {\n            formik.setValues(\n                _.cloneDeep({\n                    ...props.item,\n                    status: props.item.status || EStatusOrderTracking.FLOWING,\n                }),\n            );\n            formik.setTouched(_.mapValues(new OrderTracking(), () => false));\n        }\n    }, [props]);\n\n    useEffect(() => {\n        getDataOrderTracking(formik.values.orderId || '', formik.values);\n    }, [formik.values.orderId]);\n\n    const getDataOrderTracking = useCallback(\n        _.debounce((id: string, values) => {\n            return hMController\n                .getTrackingByOrderNo({\n                    orderNo: id,\n                })\n                .then((res) => {\n                    const firstData = res.body && res.body[0];\n                    formik.setValues({\n                        ...values,\n                        infoHM: res,\n                        orderId: values.orderId,\n                        trackingId: res?.header?.tracking_number,\n                        lastTimeTracking: new Date(firstData?.timestamp || new Date()),\n                        status:\n                            res.header?.last_delivery_status.code == 'Delivered'\n                                ? EStatusOrderTracking.COMPLETED\n                                : EStatusOrderTracking.FLOWING,\n                    });\n                })\n                .catch((err) => {\n                    formik.setValues({\n                        ...values,\n                        infoHM: undefined as any,\n                        orderId: values.orderId,\n                        trackingId: undefined as any,\n                    });\n                });\n        }, 400),\n        [],\n    );\n\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title=\"Edit New Flow\"\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    {/* <Grid container justify=\"flex-end\" alignItems=\"center\">\n                        Is Completed :{\" \"}\n                        <Switch\n                            color={\"primary\"}\n                            checked={\n                                formik.values.status ==\n                                EStatusOrderTracking.COMPLETED\n                            }\n                            onChange={(e, value) => {\n                                const status = value\n                                    ? EStatusOrderTracking.COMPLETED\n                                    : EStatusOrderTracking.FLOWING;\n                                formik.setValues({\n                                    ...formik.values,\n                                    status,\n                                });\n                            }}\n                        />\n                    </Grid> */}\n                    <Grid>\n                        <TextField\n                            value={formik.values.orderId}\n                            helperText={formik.touched.orderId && formik.errors.orderId}\n                            name=\"orderId\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            fullWidth\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"OrderID\"\n                            rows={4}\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            value={formik.values.customerName}\n                            helperText={formik.touched.customerName && formik.errors.customerName}\n                            name=\"customerName\"\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Tên khách hàng\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            helperText={formik.touched.email && formik.errors.email}\n                            name=\"email\"\n                            value={formik.values.email}\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Email\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            name=\"email\"\n                            value={formik.values?.productLink?.join(';')}\n                            onBlur={formik.handleBlur}\n                            onChange={(e) => {\n                                formik.setValues({\n                                    ...formik.values,\n                                    productInfo: undefined,\n                                    productLink: e.target.value.split(';'),\n                                });\n                            }}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Link sản phẩm\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        {!formik.values.infoHM ? (\n                            <Grid container justify=\"center\" className={clsx(globalsStyle.pp1)}>\n                                <Grid container justify=\"center\">\n                                    <BiErrorCircle\n                                        style={{\n                                            fontSize: '6rem',\n                                            color: theme.palette.error.main,\n                                            fontWeight: 200,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid container justify=\"center\">\n                                    <Typography\n                                        variant=\"h4\"\n                                        align=\"center\"\n                                        // color=\"textPrimary\"\n                                    >\n                                        {'Order Error'}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        ) : (\n                            <Accordion className={classes.containerDetail}>\n                                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                                    <Grid container>\n                                        <Grid container justify=\"space-between\" alignItems=\"center\">\n                                            <Typography variant=\"body2\">{'#' + formik.values.orderId}</Typography>\n                                        </Grid>\n                                        {/* <Divider className={clsx(globalsStyle.mt1, globalsStyle.mb1)} /> */}\n                                        <Grid container>\n                                            <PrettoSlider\n                                                value={TrackingHMHelper.getOrderProcess(\n                                                    formik.values.infoHM?.header?.last_delivery_status.code || '',\n                                                )}\n                                            />\n                                            <Grid container justify=\"space-between\">\n                                                <Typography variant=\"subtitle1\">In Warehouse</Typography>\n                                                <Typography color=\"secondary\">\n                                                    {formik.values.infoHM?.header?.last_delivery_status.status}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container direction=\"column\" justify=\"space-around\">\n                                            <Grid>\n                                                <Typography>{formik.values.infoHM?.header?.tracking_number}</Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Grid container>\n                                        {formik.values?.infoHM?.body?.map((item) => (\n                                            <Grid style={{ width: '100%' }}>\n                                                <Divider className={clsx(globalsStyle.mt1, globalsStyle.mb1)} />\n                                                <Grid>\n                                                    <Typography>\n                                                        {moment(item.timestamp).format('DD/MM/YYYY, hh:mm')}\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid>\n                                                    <Typography variant=\"body2\">{item.status_text}</Typography>\n                                                </Grid>\n                                                <Grid>\n                                                    <Typography>{item.status_details}</Typography>\n                                                </Grid>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </AccordionDetails>\n                            </Accordion>\n                        )}\n                    </Grid>\n                    {/* <Grid>\n                        <CKEditor\n                            className={clsx(globalStyles.mt2, globalStyles.mb2)}\n                            data={formik.values.desc}\n                            onChange={(e: any) => {\n                                formik.setValues({\n                                    ...formik.values,\n                                    desc: e.editor.getData(),\n                                });\n                            }}\n                        />\n                    </Grid> */}\n                </Grid>\n            </BaseDialog>\n        </Grid>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Divider,\n    Grid,\n    makeStyles,\n    TextField,\n    Switch,\n    Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport React, { useCallback, useEffect } from 'react';\nimport { hMController } from 'src/controller';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport * as Yup from 'yup';\nimport { OrderTracking, EStatusOrderTracking } from '../../afi-manager-base-model/model/OrderTracking';\nimport BaseDialog from '../common/BaseDialog';\nimport PrettoSlider from '../common/PrettoSlider';\nimport moment from 'moment';\nimport { BiErrorCircle } from 'react-icons/bi';\nimport theme from 'src/theme/MuiTheme';\nimport { PropsCreateManyFlow } from 'src/afi-manager-base-model/controllers/IOrderTrackingController';\nconst CKEditor = require('ckeditor4-react');\n\ntype Props = {\n    isDisplay: boolean;\n    onEdit: (item: PropsCreateManyFlow) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({\n    orderId: Yup.string().min(11, 'ID của HM có trên 11 kí tự').required('Is require !!').trim().nullable(),\n});\n\nconst useStyle = makeStyles((theme) => ({}));\nexport default function PopupFlowManyTrackingHM(props: Props) {\n    const classes = useStyle();\n    const globalsStyle = useGlobalStyles();\n    const formik = useFormik<PropsCreateManyFlow>({\n        initialValues: {\n            orderId: '',\n            orderIds: [],\n            email: '',\n            link: '',\n            customerName: '',\n        },\n        validationSchema: validate,\n        onSubmit: () => {\n            const values = formik.values.orderId;\n            props.onEdit({\n                ...formik.values,\n                orderIds: values.split('\\n'),\n            });\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        formik.setTouched({\n            orderId: true,\n        });\n    };\n\n    useEffect(() => {\n        formik.setTouched({});\n    }, [props]);\n\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title=\"Edit New Flow\"\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    <Grid>\n                        <TextField\n                            helperText={formik.touched.orderId && formik.errors.orderId}\n                            name=\"orderId\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            rows={8}\n                            multiline\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"OrderID\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            helperText={formik.touched.customerName && formik.errors.customerName}\n                            name=\"customerName\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            value={formik.values.customerName}\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Name customer\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            helperText={formik.touched.email && formik.errors.email}\n                            value={formik.values.email}\n                            name=\"email\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Email\"\n                        ></TextField>\n                    </Grid>\n                </Grid>\n            </BaseDialog>\n        </Grid>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Divider,\n    Grid,\n    makeStyles,\n    TextField,\n    Switch,\n    Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { hMController } from 'src/controller';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport * as Yup from 'yup';\nimport { OrderTracking, EStatusOrderTracking } from '../../afi-manager-base-model/model/OrderTracking';\nimport BaseDialog from '../common/BaseDialog';\nimport PrettoSlider from '../common/PrettoSlider';\nimport moment from 'moment';\nimport { BiErrorCircle } from 'react-icons/bi';\nimport theme from 'src/theme/MuiTheme';\nimport { PropsCreateManyFlow } from 'src/afi-manager-base-model/controllers/IOrderTrackingController';\nconst CKEditor = require('ckeditor4-react');\n\ntype Props = {\n    isDisplay: boolean;\n    onEdit: (item: PropsCreateManyFlow) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({});\n\nconst useStyle = makeStyles((theme) => ({}));\nexport default function PopupFlowManyByOrdersEmailsCustomersTrackingHM(props: Props) {\n    const classes = useStyle();\n    const [state, setState] = useState<{\n        error: string;\n    }>({\n        error: '',\n    });\n    const globalsStyle = useGlobalStyles();\n    const formik = useFormik<PropsCreateManyFlow>({\n        initialValues: {\n            orderId: '',\n            orderIds: [],\n            email: '',\n            link: '',\n            customerName: '',\n        },\n        validationSchema: validate,\n        onSubmit: () => {\n            const customerNames = formik.values.customerName.trim().split('\\n');\n            const orderIds = formik.values.orderId.trim().split('\\n');\n            const emails = formik.values.email.trim().split('\\n');\n            const links = formik.values.link.trim().split('\\n');\n\n            if (!formik.values.orderId || !formik.values.customerName || !formik.values.email) {\n                setState({\n                    error: ` Can't be left blank orderID and customer name and email,Please  `,\n                });\n            } else if (customerNames.length != orderIds.length || emails.length != orderIds.length) {\n                setState({\n                    error: `Inconsistent data, Please check again data`,\n                });\n            } else {\n                props.onEdit({\n                    ...formik.values,\n                    orderIds: orderIds,\n                    emails: emails,\n                    links: links,\n                    customerNames: customerNames,\n                });\n            }\n        },\n    });\n    const customerNamesCount = !formik.values.customerName ? 0 : formik.values.customerName.trim().split('\\n').length;\n    const orderIdsCount = !formik.values.orderId ? 0 : formik.values.orderId.trim().split('\\n').length;\n    const emailsCount = !formik.values.email ? 0 : formik.values.email.trim().split('\\n').length;\n\n    const linksCount = !formik.values.link ? 0 : formik.values.link.trim().split('\\n').length;\n    const onSubmit = () => {\n        formik.handleSubmit();\n        formik.setTouched({\n            orderId: true,\n        });\n    };\n\n    useEffect(() => {\n        if (props.isDisplay) {\n            formik.setValues({} as any);\n            setState({\n                error: '',\n            });\n        }\n        formik.setTouched({});\n    }, [props]);\n\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title=\"Edit New Flow\"\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    <Grid className={clsx(globalStyles.mt1, globalStyles.mb2)}>\n                        <Typography color={'error'}>{state.error}</Typography>\n                        <Typography color={'error'}>Order: {orderIdsCount}</Typography>\n                        <Typography color={'error'}>Customer name : {customerNamesCount}</Typography>\n                        <Typography color={'error'}>Email : {emailsCount}</Typography>\n                        <Typography color={'error'}>Link : {linksCount}</Typography>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            helperText={formik.touched.orderId && formik.errors.orderId}\n                            name=\"orderId\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            rows={8}\n                            multiline\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"OrderID\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            helperText={formik.touched.customerName && formik.errors.customerName}\n                            name=\"customerName\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            multiline\n                            rows={8}\n                            value={formik.values.customerName}\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Name customer\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            helperText={formik.touched.email && formik.errors.email}\n                            value={formik.values.email}\n                            name=\"email\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            multiline\n                            rows={8}\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Email\"\n                        ></TextField>\n                    </Grid>\n\n                    <Grid>\n                        <TextField\n                            helperText={formik.touched.link && formik.errors.link}\n                            value={formik.values.link}\n                            name=\"link\"\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            multiline\n                            rows={8}\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Link\"\n                        ></TextField>\n                    </Grid>\n                </Grid>\n            </BaseDialog>\n        </Grid>\n    );\n}\n","import { useState } from 'react';\n\nexport function handleWithPopupHook<T>(props: Props<T>) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [state, setState] = useState<{\n        itemSelected: T;\n        isShowPopup: boolean;\n        isShowConfirm: boolean;\n    }>({\n        itemSelected: {} as T,\n        isShowPopup: false,\n        isShowConfirm: false,\n    });\n\n    function handleShowPopup(item?: T) {\n        props.onShowPopup && props.onShowPopup(item);\n        setState({\n            ...state,\n            isShowPopup: true,\n            itemSelected: item as T,\n        });\n    }\n\n    function handleShowConfirm(item?: T) {\n        props.onShowConfirm && props.onShowConfirm();\n        setState({\n            ...state,\n            isShowConfirm: true,\n            itemSelected: item as T,\n        });\n    }\n\n    function handleClosePopup() {\n        props.onClosePopup && props.onClosePopup(state.itemSelected);\n        setState({\n            ...state,\n            isShowPopup: false,\n            itemSelected: {} as T,\n            isShowConfirm: false,\n        });\n    }\n\n    function handleConfirm(item?: T) {\n        props.onConfirm && props.onConfirm(item as T);\n        handleClosePopup();\n    }\n\n    function handleConfirmByPopup(item?: T) {\n        props.onConfirmByPopup && props.onConfirmByPopup(item);\n        handleClosePopup();\n    }\n\n    return {\n        handleShowPopup,\n        handleClosePopup,\n        handleShowConfirm,\n        handleConfirmByPopup,\n        handleConfirm,\n        setState,\n        state,\n        isDisplayPopup: state.isShowPopup,\n        isDisplayConfirm: state.isShowConfirm,\n        itemSelected: state.itemSelected,\n    };\n}\n\ntype Props<T> = {\n    onShowPopup?: (item?: T) => void;\n    onShowConfirm?: (item?: T) => void;\n    onClosePopup?: (item?: T) => void;\n    onConfirm?: (item?: T) => void;\n    onConfirmByPopup?: (item?: T) => void;\n};\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Grid, makeStyles, Zoom, Typography, Divider } from '@material-ui/core';\nimport ListGrid from 'src/component/common/ListGrid';\nimport TrackingInfoHMItem from 'src/component/tracking/TrackingInfoHMItem';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport TextFiled from 'src/component/common/TextFiled';\nimport Button from 'src/component/common/Button';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { hMController, orderTrackingController, userController } from 'src/controller';\nimport PopUpConfirm from 'src/component/common/PopupConfirm';\nimport PopupFlowTrackingHM from 'src/component/tracking/PopupFlowTrackingHM';\nimport { Pagination } from '@material-ui/lab';\nimport { EStatusOrderTracking, OrderTracking } from '../afi-manager-base-model/model/OrderTracking';\nimport { ListFilter } from 'luong-base-model/lib';\nimport SelectBox from 'src/component/common/SelectBox';\nimport PopupFlowManyTrackingHM from 'src/component/tracking/PopupFlowManyTrackingHM';\nimport PopupFlowManyByOrdersEmailsCustomersTrackingHM from 'src/component/tracking/PopupFlowManyByOrdersEmailsCustomersTrackingHM';\n\nimport { handleWithPopupHook } from 'src/hook/HandleWithPopupHook';\nimport { OrderTrackingController } from 'src/controller/OrderTrackingController';\nimport { PropsCreateManyFlow } from 'src/afi-manager-base-model/controllers/IOrderTrackingController';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/rematch/store';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    frFilter: {\n        background: 'white',\n        borderRadius: theme.spacing(3),\n        padding: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n}));\nfunction CheckTrackingHM(props: Props) {\n    const classes = useStyle();\n    const handleWithPopupMany = handleWithPopupHook<PropsCreateManyFlow>({\n        onConfirmByPopup: (item) => {\n            if (item)\n                orderTrackingController\n                    .createManyFlow({\n                        ...item,\n                    })\n                    .then((res) => {\n                        crudTrackingHM.onRefreshList();\n                    });\n        },\n    });\n    const handleWithPopupManyByEmails = handleWithPopupHook<PropsCreateManyFlow>({\n        onConfirmByPopup: (item) => {\n            if (item)\n                orderTrackingController\n                    .createManyByEmailsAndOrders({\n                        ...item,\n                    })\n                    .then((res) => {\n                        crudTrackingHM.onRefreshList();\n                    });\n        },\n    });\n    const crudTrackingHM = useCrudHook<OrderTracking, ListFilter<OrderTracking>>({\n        controller: orderTrackingController,\n        listController: orderTrackingController.listByCustomer,\n        saveController: orderTrackingController.saveByCustomer,\n        initQuery: {\n            searchFields: ['orderId', 'trackingId', 'customerName', 'email'],\n            pageSize: 100,\n        },\n    });\n    const globalStyles = useGlobalStyles();\n    const [state, setState] = useState();\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    const syncSort = () => {\n        orderTrackingController.syncSortTracking({}).then((res) => {\n            crudTrackingHM.onRefreshList();\n        });\n    };\n    const authen = useSelector((state: RootState) => state.authen);\n\n    return (\n        <Grid className={globalStyles.pp3}>\n            <PopUpConfirm\n                isDisplay={crudTrackingHM.isShowConfirm}\n                onCancel={crudTrackingHM.onCancelConfirm}\n                onConfirm={() => crudTrackingHM.onDelete(crudTrackingHM.itemSelected)}\n            />\n            <PopupFlowTrackingHM\n                isDisplay={crudTrackingHM.isShowPopup}\n                item={crudTrackingHM.itemSelected}\n                onCancel={crudTrackingHM.onCancelPopup}\n                onEdit={crudTrackingHM.onSave}\n            />\n            <PopupFlowManyTrackingHM\n                isDisplay={handleWithPopupMany.isDisplayPopup}\n                onCancel={handleWithPopupMany.handleClosePopup}\n                onEdit={handleWithPopupMany.handleConfirmByPopup}\n            />\n            <PopupFlowManyByOrdersEmailsCustomersTrackingHM\n                isDisplay={handleWithPopupManyByEmails.isDisplayPopup}\n                onCancel={handleWithPopupManyByEmails.handleClosePopup}\n                onEdit={handleWithPopupManyByEmails.handleConfirmByPopup}\n            />\n\n            <Typography variant=\"h4\" align=\"center\">\n                Order Tracking H&M\n            </Typography>\n            <Typography variant=\"subtitle1\" align=\"center\">\n                ({authen.info.fullName})\n            </Typography>\n            <Grid className={classes.frFilter}>\n                <Grid container justify=\"space-between\" className={clsx(globalStyles.pt1, globalStyles.pb1)}>\n                    <TextFiled\n                        variant=\"outlined\"\n                        label=\"Search\"\n                        onChange={(e) => crudTrackingHM.onQueryChanged(e.target.value)}\n                    ></TextFiled>\n                    {/* <Grid>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => crudTrackingHM.onShowPopup({})}>\n                            New Flow\n                        </Button>\n                    </Grid> */}\n                </Grid>\n                {/* <Divider className={clsx(globalStyles.mt1, globalStyles.mb1)} /> */}\n                <Grid\n                    container\n                    justify=\"space-between\"\n                    className={clsx(globalStyles.pt1, globalStyles.pb1)}\n                    alignItems=\"center\"\n                >\n                    <Pagination\n                        count={crudTrackingHM.pagingList.totalPages}\n                        onChange={(e, page) => {\n                            crudTrackingHM.setQuery({\n                                ...crudTrackingHM.query,\n                                page: page,\n                            });\n                        }}\n                        color=\"primary\"\n                    />\n                    {/* <Grid>\n                        <Grid container alignItems=\"center\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                    handleWithPopupManyByEmails.handleShowPopup({} as any);\n                                }}\n                            >\n                                Flow many by Emails and Orders\n                            </Button>\n                        </Grid>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n            <ListGrid minWidthItem={'320px'} gridGap={15}>\n                {crudTrackingHM.pagingList.rows?.map((item, index) => (\n                    <Zoom in={true} timeout={index * 100}>\n                        <Grid container justify=\"center\">\n                            <TrackingInfoHMItem\n                                index={index}\n                                onDelete={crudTrackingHM.onConfirm}\n                                item={item}\n                                searchString={crudTrackingHM.query.search || ''}\n                                onEdit={crudTrackingHM.onShowPopup}\n                            />\n                        </Grid>\n                    </Zoom>\n                ))}\n            </ListGrid>\n        </Grid>\n    );\n}\n\nexport default React.memo(CheckTrackingHM);\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Typography, Button, Grid, makeStyles, TextField, IconButton, Chip, Avatar } from '@material-ui/core';\nimport { IoAdd, IoAttachOutline, IoCloseOutline } from 'react-icons/io5';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport { localStoryController, metaDataController } from 'src/controller';\nimport theme from 'src/theme/MuiTheme';\nimport { AiOutlineCloudSync } from 'react-icons/ai';\nimport { IoMdCopy } from 'react-icons/io';\nimport { dispatch } from 'src/rematch/store';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    frVariable: {\n        borderRadius: theme.spacing(2),\n        border: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(3),\n        width: 500,\n    },\n    iconAdd: {\n        border: `1px solid ${theme.palette.primary.main}`,\n        marginLeft: theme.spacing(2),\n        padding: theme.spacing(0.5),\n    },\n}));\ntype State = {\n    variables: {\n        name: string;\n        variable: {\n            variable: string;\n            values: string;\n        }[];\n    }[];\n\n    text: {\n        title: string;\n        value: string;\n    }[];\n    variableIndex: number;\n    textIndex: number;\n};\nconst templateDataSate = {\n    variables: [\n        {\n            name: 'main',\n            variable: [],\n        },\n    ],\n    text: [\n        {\n            title: 'text1',\n            value: '',\n        },\n    ],\n    textIndex: 0,\n    variableIndex: 0,\n};\nfunction ToolAutoChangeTextHM(props: Props) {\n    const classes = useStyle();\n    const globalStyles = useGlobalStyles();\n    const [state, setState] = useState<State>(templateDataSate);\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    // const getStateVariable = () => {\n    //     const variables = state.variables;\n    //     if (variables.length == 0) {\n    //         setState({\n    //             ...state,\n    //             variables: [[]],\n    //             variableIndex: 0,\n    //         });\n    //     } else if (!state.variables[state.variableIndex]) {\n    //     }\n    // };\n\n    const addNewVariable = () => {\n        let variable = state.variables;\n        variable[state.variableIndex].variable.push({\n            values: '',\n            variable: '',\n        });\n        setState({\n            ...state,\n            variables: variable,\n        });\n    };\n\n    const removeText = (index: number) => {\n        let text = state.text;\n        if (text.length > 1) {\n            text.splice(index, 1);\n        }\n        setState({\n            ...state,\n            text: text,\n            textIndex: 0,\n        });\n    };\n\n    const removeVariable = (index: number) => {\n        // Kiểm bug\n        let variable = state.variables;\n        variable[state.variableIndex].variable.splice(index, 1);\n        setState({\n            ...state,\n            variables: variable,\n        });\n    };\n\n    const onChangeValue = (value: string, index: number) => {\n        let variables = state.variables;\n        const variable = variables[state.variableIndex].variable;\n        variable[index].values = value;\n        variables[state.variableIndex].variable = variable;\n        setState({\n            ...state,\n            variables: variables,\n        });\n    };\n    const onChangeVariable = (value: string, index: number) => {\n        let variables = state.variables;\n        const variable = variables[state.variableIndex].variable;\n        variable[index].variable = value;\n        variables[state.variableIndex].variable = variable;\n        setState({\n            ...state,\n            variables: variables,\n        });\n    };\n\n    const addVariableTemplate = () => {\n        let variables = state.variables || [];\n        variables.push({\n            name: 'variable Next',\n            variable: [],\n        });\n        setState({\n            ...state,\n            variables,\n        });\n    };\n\n    const duplicateVariableTemplate = (item: any) => {\n        let variables = state.variables || [];\n        variables.push(JSON.parse(JSON.stringify(item)));\n        setState({\n            ...state,\n            variables,\n        });\n    };\n\n    const removeVariableTemplate = (index: number) => {\n        let variables = state.variables || [];\n        variables.splice(index, 1);\n        setState({\n            ...state,\n            variables,\n        });\n    };\n\n    const replaceText = (text: string): string => {\n        let variable = state.variables[state.variableIndex] || [];\n        variable.variable.forEach((item) => {\n            try {\n                text = text.replace(new RegExp(`{${item.variable}}`, 'ig'), item.values);\n            } catch (error) {}\n        });\n        return text;\n    };\n\n    const syncOnline = () => {\n        metaDataController.saveByKey({\n            key: 'tool-replace-text',\n            data: state,\n        });\n    };\n\n    const addText = () => {\n        setState({\n            ...state,\n            text: [\n                ...state.text,\n                {\n                    title: 'text',\n                    value: '',\n                },\n            ],\n        });\n    };\n    const duplicateText = (item: any) => {\n        setState({\n            ...state,\n            text: [...state.text, item],\n        });\n    };\n\n    useEffect(() => {\n        metaDataController.getByKey({ key: 'tool-replace-text' }).then((res) => {\n            setState(res.data || templateDataSate);\n        });\n    }, []);\n\n    const autoCheck = () => {\n        const getState = state;\n        let error = false;\n        if (!getState.variables[getState.variableIndex]) {\n            getState.variableIndex = 0;\n            error = true;\n        }\n        if (!getState.variables[getState.variableIndex] || !getState.variables[getState.variableIndex].variable) {\n            getState.variables = [\n                {\n                    name: 'main',\n                    variable: [],\n                },\n            ];\n            error = true;\n        }\n        if (error) {\n            setState({\n                ...state,\n                ...getState,\n            });\n        }\n    };\n    autoCheck();\n\n    return (\n        <Grid\n            style={{\n                minHeight: '100vh',\n                background: 'white',\n                padding: theme.spacing(2),\n            }}\n        >\n            <Grid container className={globalStyles.pp2} justify=\"flex-end\">\n                <Button\n                    startIcon={<AiOutlineCloudSync />}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                        syncOnline();\n                    }}\n                >\n                    Đồng bộ online\n                </Button>\n            </Grid>\n            <Grid container direction=\"row\">\n                <Grid className={classes.frVariable} justify=\"center\">\n                    <Grid container justify=\"space-between\" className={globalStyles.pp1}>\n                        <Grid>\n                            <Grid container className={globalStyles.pp1}>\n                                {state.variables.map((item, index) => (\n                                    <Chip\n                                        avatar={\n                                            <Avatar\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    duplicateVariableTemplate(item);\n                                                }}\n                                            >\n                                                <IoMdCopy />\n                                            </Avatar>\n                                        }\n                                        color={index == state.variableIndex ? 'primary' : undefined}\n                                        className={clsx(globalStyles.mr1, globalStyles.mb1)}\n                                        label={item.name}\n                                        onDelete={() => {\n                                            removeVariableTemplate(index);\n                                        }}\n                                        onClick={() => {\n                                            setState({\n                                                ...state,\n                                                variableIndex: index,\n                                            });\n                                        }}\n                                    />\n                                ))}\n                                <IconButton\n                                    className={classes.iconAdd}\n                                    color=\"primary\"\n                                    onClick={() => {\n                                        addVariableTemplate();\n                                    }}\n                                >\n                                    <IoAdd />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                        <Grid container className={clsx(globalStyles.pp1, globalStyles.pt3)}>\n                            <TextField\n                                label=\"Giá trị\"\n                                variant=\"outlined\"\n                                value={state.variables[state.variableIndex]?.name || ''}\n                                onChange={(e) => {\n                                    const getState = state;\n                                    getState.variables[state.variableIndex].name = e.target.value;\n                                    setState({\n                                        ...getState,\n                                    });\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid className={globalStyles.pt4}>\n                        {(state.variables[state.variableIndex]?.variable || []).map((item, index) => (\n                            <Grid container justify=\"space-around\" alignItems=\"center\" className={globalStyles.pp1}>\n                                <Grid xs={5}>\n                                    <TextField\n                                        label=\"Tên biến\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        value={item.variable}\n                                        onChange={(e) => {\n                                            onChangeVariable(e.target.value, index);\n                                        }}\n                                    />\n                                </Grid>\n                                <IoAttachOutline\n                                    style={{\n                                        fontSize: '2rem',\n                                    }}\n                                />\n                                <Grid xs={5}>\n                                    <TextField\n                                        label=\"Giá trị\"\n                                        variant=\"outlined\"\n                                        value={item.values || ''}\n                                        fullWidth\n                                        onChange={(e) => {\n                                            onChangeValue(e.target.value, index);\n                                        }}\n                                    />\n                                </Grid>\n                                <IconButton onClick={() => removeVariable(index)}>\n                                    <IoCloseOutline />\n                                </IconButton>\n                            </Grid>\n                        ))}\n                    </Grid>\n                    <Grid container justify=\"center\" className={globalStyles.pp1}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => addNewVariable()}>\n                            Thêm biến\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid\n                    style={{\n                        flex: 1,\n                    }}\n                    className={clsx(globalStyles.pp2, globalStyles.pt0)}\n                >\n                    <Grid container>\n                        <Grid\n                            container\n                            className={globalStyles.pp2}\n                            style={{\n                                border: `1px solid ${theme.palette.divider}`,\n                                borderRadius: theme.spacing(2),\n                            }}\n                        >\n                            <Typography variant=\"h3\">Template</Typography>\n                            <Grid container justify=\"space-between\">\n                                <Grid>\n                                    {state.text.map((item, index) => (\n                                        <Chip\n                                            avatar={\n                                                <Avatar\n                                                    onClick={(e) => {\n                                                        e.stopPropagation();\n                                                        duplicateText(item);\n                                                    }}\n                                                >\n                                                    <IoMdCopy />\n                                                </Avatar>\n                                            }\n                                            color={index == state.textIndex ? 'primary' : undefined}\n                                            className={clsx(globalStyles.mr1, globalStyles.mb1)}\n                                            label={item.title}\n                                            onDelete={() => {\n                                                removeText(index);\n                                            }}\n                                            onClick={() => {\n                                                setState({\n                                                    ...state,\n                                                    textIndex: index,\n                                                });\n                                            }}\n                                        />\n                                    ))}\n                                    <IconButton\n                                        className={classes.iconAdd}\n                                        color=\"primary\"\n                                        onClick={() => {\n                                            addText();\n                                        }}\n                                    >\n                                        <IoAdd />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                            <TextField\n                                fullWidth\n                                label=\"Name\"\n                                value={state.text[state.textIndex || 0].title}\n                                onChange={(e) => {\n                                    const text = state.text;\n                                    text[state.textIndex || 0].title = e.target.value;\n                                    setState({\n                                        ...state,\n                                        text: text,\n                                    });\n                                }}\n                                variant=\"outlined\"\n                                className={clsx(globalStyles.mt1, globalStyles.mb1)}\n                            />\n                            <TextField\n                                fullWidth\n                                label=\"Value\"\n                                variant=\"outlined\"\n                                multiline\n                                value={state.text[state.textIndex || 0].value}\n                                onChange={(e) => {\n                                    const text = state.text;\n                                    text[state.textIndex || 0].value = e.target.value;\n                                    setState({\n                                        ...state,\n                                        text: text,\n                                    });\n                                }}\n                                rows={10}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container className={clsx(globalStyles.pt2)}>\n                        <Grid\n                            className={clsx(globalStyles.pp2, classes.frVariable)}\n                            style={{\n                                flex: 1,\n                            }}\n                        >\n                            <Grid container>\n                                <Typography variant=\"h3\">Output</Typography>\n                                <Grid>\n                                    <IconButton\n                                        className={classes.iconAdd}\n                                        color=\"secondary\"\n                                        style={{\n                                            borderColor: theme.palette.secondary.main,\n                                        }}\n                                        onClick={() => {\n                                            try {\n                                                navigator.clipboard\n                                                    .writeText(replaceText(state.text[state.textIndex || 0].value))\n                                                    .then((res) => {\n                                                        dispatch.notification.success('Copy thành success');\n                                                    });\n                                            } catch (error) {}\n                                        }}\n                                    >\n                                        <IoMdCopy />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                            <Grid>\n                                <TextField\n                                    fullWidth\n                                    label=\"Value\"\n                                    variant=\"outlined\"\n                                    multiline\n                                    value={replaceText(state.text[state.textIndex || 0].value)}\n                                    rows={20}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(ToolAutoChangeTextHM);\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport theme from '../../theme/MuiTheme';\nimport { Variant } from '@material-ui/core/styles/createTypography';\n\ntype Props = {\n    icon: React.ReactElement;\n    desc?: string;\n    pp?: number;\n    color?: 'inherit' | 'initial' | 'primary' | 'secondary' | 'textPrimary' | 'textSecondary' | 'error';\n    variant?: 'inherit' | Variant;\n};\nconst useStyle = makeStyles((theme) => ({\n    icon: {\n        paddingRight: theme.spacing(1),\n    },\n}));\nfunction TextDescWithIcon(props: Props) {\n    const classes = useStyle();\n    const [state, setState] = useState();\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    return (\n        <Grid\n            container\n            style={{\n                padding: theme.spacing(props.pp || 1),\n            }}\n            justify=\"space-between\"\n            alignItems=\"center\"\n            alignContent=\"center\"\n        >\n            <Grid className={classes.icon}>{props.icon}</Grid>\n            <Grid>\n                <Typography variant={props.variant} color={props.color}>\n                    {props.desc}\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(TextDescWithIcon);\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { IoClose, IoCloseOutline } from 'react-icons/io5';\nimport { IconButton } from '@material-ui/core';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport TextDesc from '../common/TextDesc';\nimport moment from 'moment';\nimport { AiOutlineEdit, AiOutlineMail, AiOutlinePhone, AiOutlineUser } from 'react-icons/ai';\nimport TextDescWithIcon from '../common/TextDescWithIcon';\nimport { VscHome } from 'react-icons/vsc';\nimport { BiKey, BiMap } from 'react-icons/bi';\nimport { EmailOutlined } from '@material-ui/icons';\nimport { CgKey } from 'react-icons/cg';\nimport { FiImage } from 'react-icons/fi';\n\ntype Props = {\n    item: UserHm;\n    onEdit: (item: UserHm) => void;\n    onDelete: (item: UserHm) => void;\n    onSeeDetail: (item: UserHm) => void;\n    onSeeImge: (item: UserHm) => void;\n};\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        // width: 300,\n        borderRadius: theme.spacing(1),\n        border: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(1),\n    },\n}));\nfunction UserHmItemList(props: Props) {\n    const classes = useStyle();\n    const [state, setState] = useState();\n    const globalStyle = useGlobalStyles();\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    return (\n        <Grid container className={clsx(classes.root)}>\n            <Grid container alignItems=\"center\" justify=\"space-between\" className={globalStyle.pl1}>\n                <Grid>\n                    <Typography variant=\"caption\">\n                        {moment(props.item.createdAt).format('DD/MM/YYYY : hh:mm')}\n                    </Typography>\n                </Grid>\n                <Grid>\n                    <Grid container>\n                        <Grid>\n                            <IconButton\n                                disabled={!Boolean(props.item.imgScreenShot)}\n                                onClick={() => {\n                                    props.onSeeImge(props.item);\n                                }}\n                            >\n                                <FiImage />\n                            </IconButton>\n                        </Grid>\n                        <Grid>\n                            <IconButton onClick={(e) => props.onDelete(props.item)}>\n                                <IoCloseOutline />\n                            </IconButton>\n                        </Grid>\n                        <Grid>\n                            <IconButton onClick={(e) => props.onEdit(props.item)}>\n                                <AiOutlineEdit />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={props.item.id} variant=\"caption\" icon={<CgKey />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={props.item.username} variant=\"h6\" icon={<AiOutlineUser />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={props.item.password} variant=\"caption\" icon={<BiKey />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon\n                        color=\"secondary\"\n                        desc={props.item.emailCheckout}\n                        variant=\"body2\"\n                        icon={<AiOutlineMail />}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={props.item.address} icon={<VscHome />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={props.item.address2} icon={<VscHome />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={props.item.phone} icon={<AiOutlinePhone />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={props.item.getCartByName} icon={<AiOutlineUser />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={`First: ${props.item.firstName}`} icon={<AiOutlineUser />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextDescWithIcon desc={`Last: ${props.item.lastName}`} icon={<AiOutlineUser />} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid xs={6}>\n                    <Grid container>\n                        <Grid>\n                            <TextDescWithIcon desc={props.item.town} icon={<BiMap />} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid xs={6}>\n                    <Grid container>\n                        <Grid>\n                            <TextDescWithIcon desc={props.item.postcode} icon={<BiMap />} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid container className={globalStyle.pp1}>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    fullWidth\n                    size=\"small\"\n                    onClick={(e) => props.onSeeDetail(props.item)}\n                >\n                    Xem chi tiết\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(UserHmItemList);\n","import { BaseModel } from 'luong-base-model';\nimport { OrderTracking } from './OrderTracking';\n\nexport class UserHm extends BaseModel {\n    username?: string;\n\n    password?: string;\n\n    firstName?: string;\n\n    lastName?: string;\n\n    phone?: string;\n\n    address?: string;\n    address2?: string;\n\n    town?: string;\n\n    postcode?: string;\n\n    emailCheckout?: string;\n\n    note?: string;\n\n    isDone?: boolean;\n\n    isMerge?: boolean;\n\n    imgScreenShot?: string;\n\n    getCartByName?: string;\n\n    metaDataOrder?: OrderTracking[];\n    \n    extraInfor?:{\n        // to do: Alert if creating wrong orders\n        verifiedAmount?: number;\n        verifiedQuantity?: number;\n        codeOff?:string\n        //to do: Make sure that wrong orders is accepted by warehouse \n        isAccepted?: boolean;\n        wareHouse?: string;\n        staffEmail?:string\n    }\n}","export const wareHouses:WareHouse[] = [\n    {name: \"Mai Linh\",codeDefault:\"OFF40-18\", codeOffs:[\"OFF40-18\",\"OFF45-15\",\"OFF30-60\",\"OFF36-25\",\"DEAL10\",\"DEAL60\"]},\n    {name:\"PLE\",codeDefault:\"DEAL25\",codeOffs:[\"DEAL25\"]},\n    {name: \"Amy\",codeDefault:\"OFF40-20\",codeOffs:[\"OFF40-20\",\"OFF30-60\"]},\n    {name: \"Trang\",codeDefault:\"DEAL60\",codeOffs:[\"DEAL60\"]},\n    {name: \"Hải pro\",codeDefault:\"DEAL25\",codeOffs:[\"DEAL25\",\"DEAL60\"]},\n    {name: \"Elisa\",codeDefault:\"OFF40-18\",codeOffs:[\"OFF50-10\",\"OFF40-18\",\"OFF45-15\",\"OFF30-60\",\"OFF36-25\",\"DEAL10\",\"DEAL60\"]},\n    {name: \"Yến Anh\",codeDefault:\"DEAL60\",codeOffs:[\"DEAL60\"]},\n    {name: \"Alan\",codeDefault:\"DEAL10\",codeOffs:[\"DEAL10\",\"DEAL60\"]},\n    {name: \"Hương Quỳnh\",codeDefault:\"DEAL60\",codeOffs:[\"DEAL60\"]},\n]\n\nexport const afiCodes: CodeOff[] = [\n    {code:\"OFF50-10\",maxPrice:10},\n    {code:\"OFF40-18\",maxPrice:18},\n    {code:\"OFF40-20\",maxPrice:20},\n    {code:\"OFF45-15\",maxPrice:15},\n    {code:\"OFF30-60\",maxPrice:60},\n    {code:\"OFF36-25\",maxPrice:25},\n    {code:\"DEAL10\", maxPrice:10},\n    {code:\"DEAL25\", maxPrice:25},\n    {code:\"DEAL60\", maxPrice:60},\n]\n\nexport interface WareHouse {\n    name:string,\n    codeDefault:string,\n    // defaultMaxPrice:number,\n    codeOffs?:string[],\n}\nexport interface CodeOff {\n    code:string,\n    minPrice?:number,\n    maxPrice?:number,\n    minQuantity?:number,\n    mustOneProduct?:boolean,\n    suitablePrices?:number[],\n    isExpired?:boolean\n}","import { OrderAddress } from \"src/afi-manager-base-model/model/OrderAddress\";\n\nexport const addressTemplatesConst: OrderAddress[] = [\n    {address:'100 The Highway',address2:'Unit 9 Big Yellow Self Storage',town:'London',postcode:'E1W 2BX'},\n    {address:'199 East India Dock Road',address2:'199 East India Dock Road',town:'London',postcode:'E14 0ED'}, \n    {address:'27 Northumberland Gardens',address2:'27 Northumberland Gardens',town:'London',postcode:'N9 9LN'}, \n    {address:'22 Benedict Drive',address2:'22 Benedict Drive',town:'Feltham',postcode:'TW14 8JL'},\n    {address:'Bendish Farm',address2:'Unit 2 The Grainstore',town:'Hertfordshire',postcode:'SG4 8JD',mustBeVerified:true},\n    {address:'Bendish Farm',address2:'Mill House Trading',town:'Hertfordshire',postcode:'SG4 8JD',mustBeVerified:true}, \n    {address:'197 Campbell Road',address2:'197 Campbell Road',town:'London',postcode:'E3 4DP'}, \n    {address:'5 Henriques Street',address2:'5 Henriques Street',town:'London',postcode:'E1 1NB'}, \n    {address:'58 Shefford Crescent',address2:'58 Shefford Crescent Wokingham,Berkshire',town:'Wokingham',postcode:'RG40 1YP'},\n    {address:'19-21 Park Royal Road,London',address2:'19-21 Park Royal Road',town:'London',postcode:'NW10 7LQ',mustBeVerified:true}, \n    {address:'Leeds Road',address2:'163 The Gatehaus',town:'Bradford',postcode:'BD1 5BQ'}, \n    {address:'216 Ramillies Road',address2:'216 Ramillies Road',town:'Sidcup',postcode:'DA15 9JH'}, \n    {address:'86 Deptford high street',address2:'86 Deptford high street',town:'London',postcode:'SE8 4RG'}, \n    {address:'4 Rockley Drive',address2:'4 Rockley Drive',town:'Wakefield',postcode:'WF2 7HQ'}, \n    {address:'20 Wrench Road',address2:'20 Wrench Road',town:'Norwich',postcode:'NR5 8AS'}, \n    {address:'9 St. Katherines Road',address2:'9 St. Katherines Road',town:'Erith',postcode:'DA18 4DS'}, \n    {address:'85 Footscray Road',address2:'85 Footscray Road',town:'London',postcode:'SE9 2SX'}, \n    {address:'23 Downland Way',address2:'23 Downland Way',town:'Epsom',postcode:'KT18 5SL'}, \n    {address:'5 Westfield Villas',address2:'5 Westfield Villas',town:'Doncaster',postcode:'DN7 6QA'}, \n    {address:'3 Henriques street,London',address2:'3 Henriques street',town:'London',postcode:'E1 1NB',mustBeVerified:true}, \n    {address:'207A Well Street',address2:'207A Well Street',town:'London',postcode:'E9 6QU'}, \n    {address:'35 Kendal Lane',address2:'35 Kendal Lane',town:'Leeds',postcode:'LS3 1AS'}, \n    {address:'Poyle Road',address2:'Chiltern Air Freight Ltd,Wraysbury House',town:'Slough',postcode:'SL3 0AY'}, \n    {address:'55 Bowens field',address2:'55 Bowens field',town:'Ashford',postcode:'TN23 4QW'}, \n    {address:'57 Sharrow Street',address2:'57 Sharrow Street',town:'Sheffield',postcode:'S11 8BY'}, \n    {address:'25 Dovehouse Close',address2:'25 Dovehouse Close',town:'St Neots',postcode:'PE19 1DS'}, \n    {address:'1 Powell Gardens',address2:'1 Powell Gardens',town:'Redhill',postcode:'RH1 1TQ'}, \n    {address:'212 Deptford High street',address2:'212 Deptford High street',town:'London',postcode:'SE8 3PR'}, \n    {address:'89 Hazel Close',address2:'89 Hazel Close',town:'Twickenham',postcode:'TW2 7NP'}, \n    {address:'232 Holloway Road',address2:'Flat 2, 232 Holloway Road',town:'London',postcode:'N7 8DA'}, \n    {address:'Challenge Road, Ashford, Middlesex',address2:'Unit 306 Bedfont North Industrial Estate',town:'Ashford',postcode:'TW15 1AX',mustBeVerified:true}, \n    {address:'59 Victoria Avenue',address2:'Flat 48 The Pinnacle',town:'Southend-on-sea',postcode:'SS2 6DS'}, \n    {address:'397 Hackney Road',address2:'Nail Stories',town:'London',postcode:'E2 8PP'}, \n    {address:'60 Westferry road',address2:'Flat 66 Ocean Wharf',town:'London',postcode:'E14 8JS'}, \n    {address:'46 Dominies Close',address2:'46 Dominies Close',town:'Rowlands Gill',postcode:'NE39 1PA'}, \n    {address:'41 High Street',address2:'41 High Street, Whitton',town:'Twickenham',postcode:'TW2 7LB'}, \n    {address:'72A High Street',address2:'72A High Street, Whitton',town:'Twickenham',postcode:'TW2 7LS'}, \n    {address:'Bibulo LTD,19-21 Park Royal Road',address2:'Unit 19, Bibulo LTD',town:'London',postcode:'NW10 7LQ',mustBeVerified:true}, {address:'Aurora Gardens',address2:'Apartment 33,Faraday House',town:'London',postcode:'SW11 8ED'}, \n    {address:'19-21 Park Royal Road',address2:'Unit 18,19-21 Park Royal Road',town:'London',postcode:'NW10 7LQ',mustBeVerified:true}, \n    {address:'Leaside Road',address2:'Unit G168 Riverside House',town:'London',postcode:'E5 9LU',mustBeVerified:true}, \n    {address:'2B Pemberton Terrace',address2:'2B Pemberton Terrace',town:'London',postcode:'N19 5RY'}, \n    {address:'180 Elsinge Road',address2:'180 Elsinge Road',town:'Enfield',postcode:'EN1 4PA'}, \n    {address:'36 Bournbrook Road',address2:'36 Bournbrook Road',town:'London',postcode:'SE3 8JS'}, \n    {address:'1 Ovett Gardens',address2:'1 Ovett Gardens, Gateshead',town:'Gateshead',postcode:'NE8 3JH'}, \n    {address:'21 Knightsbridge',address2:'Office 6 2nd Floor',town:'London',postcode:'SW1X 7LY'},\n    {address:'4 Grand Arcade',address2:'Stylish nail & beauty',town:'London',postcode:'N12 0EH'}\n]","import { Grid, TextField, Typography } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\nimport React, { useEffect, useState } from 'react'\nimport { OrderAddress } from 'src/afi-manager-base-model/model/OrderAddress';\nimport { addressTemplatesConst } from 'src/constants/TemplateAddress';\nimport { excelController } from 'src/controller';\nimport BaseDialog from '../common/BaseDialog';\n\ninterface Props {\n    isDisplay: boolean;\n    onSelect(template?:OrderAddress):void,\n    onCancel():void;\n}\nexport default function PopUpAddressTemplate(props:Props) {\n    const [selectedAddress, setSelectedAddress] = useState<OrderAddress>()\n    const [addressTemplates, setAddressTemplate] = useState<OrderAddress[]>([])\n\n    useEffect(() => {\n        excelController.getAddress().then(rst=> \n            setAddressTemplate(rst.length > 0 ? rst:addressTemplatesConst ))\n            .catch(err => setAddressTemplate(addressTemplatesConst))\n    }, [])\n    \n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={()=>props.onSelect(selectedAddress)}\n                title=\"Địa chỉ mẫu\"\n                labelConfirmBtn=\"Chọn mẫu này\"\n            >\n                <Autocomplete\n                    freeSolo\n                    options={addressTemplates}\n                    getOptionLabel={(ad) => `${ad.address}`}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Địa chỉ mẫu\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                    renderOption={(ad) => {return(\n                        <Grid>\n                            <Typography>  Address: {ad.address}</Typography>\n                            <Typography variant=\"body2\">  Address 2: {ad.address2} {\" (\"}{ad.town} - {ad.postcode}{\")\"} </Typography>\n                        </Grid>\n                        )}}\n                    onChange={(event, newValue) => {\n                        setSelectedAddress(newValue as OrderAddress);\n                    }}\n      />\n            </BaseDialog>\n        </Grid>\n    )\n}\n\n","import { OrderTracking} from \"src/afi-manager-base-model/model/OrderTracking\";\nimport { UserHm } from \"src/afi-manager-base-model/model/UserHm\";\nimport { afiCodes, wareHouses } from \"src/constants/WareHouse\";\n\n\n// Todo: Find the max price can be bought\nexport const maxPriceForOrder = (order:UserHm)=>{\n    let codeDefault = wareHouses.find(w => w.name == order.extraInfor?.wareHouse)?.codeDefault\n    let maxPrice = afiCodes.find(c => c.code == (order.extraInfor?.codeOff||codeDefault))?.maxPrice\n    \n    return maxPrice\n}\n\nexport const minPriceForOrder = (order:UserHm)=>{\n    let codeDefault = wareHouses.find(w => w.name == order.extraInfor?.wareHouse)?.codeDefault\n    let maxPrice = afiCodes.find(c => c.code == (order.extraInfor?.codeOff||codeDefault))?.minPrice\n    \n    return maxPrice\n}\n\n// To do: Warning on product has price higher than standard\nexport const isDangerousPrice = (prodPrice:number,order:UserHm)=>{\n    let maxPrice = maxPriceForOrder(order)\n    if(prodPrice - (maxPrice||prodPrice)>0)return true\n    else return false\n}\n\n// to do: alert if has any product is not match code condition\nexport const isCorrectCode = (order:UserHm, products:OrderTracking[]) =>{\n    // return true\n    if(!order.extraInfor||!order.extraInfor.wareHouse) return true\n    else {\n        let maxPrice = maxPriceForOrder(order)\n        let productIds: string[] =[]\n\n        products.map(p => p.productOrder).length > 0\n        && products.forEach(p => p.productOrder \n            && p.productOrder.forEach(p => p.productId && productIds.push(p.productId)))\n\n        let productNumber = productIds.filter((v, i, a) => a.indexOf(v) === i).length;\n              \n        let maxProduct = afiCodes.find(c => c.code == order.extraInfor?.codeOff)?.mustOneProduct\n                            ?1\n                            :productNumber\n        // console.log({productNumber},{maxProduct},{productIds})\n        // console.log(Boolean(maxProduct >= productNumber)?\"true\":\"false\");\n        // console.log(products.findIndex(p => p.totalPrice && maxPrice && p.totalPrice > (maxPrice)));\n        if(Boolean(products.findIndex(p => p.totalPrice && maxPrice && p.totalPrice > (maxPrice)) == -1) && \n        Boolean(maxProduct >= productNumber)){\n            return true\n        }\n    else return false}\n}\n// return list code for \nexport const getAvailableCodes = (wareHouse:string) =>{\n    let codes = wareHouses.find(w => w.name == wareHouse)?.codeOffs||[];\n    let availableAfiCodes = afiCodes.map(c => c.code)\n    let rst = codes.length >0 && availableAfiCodes ? codes.filter(c => availableAfiCodes.includes(c)) : []\n    console.log({codes},{availableAfiCodes},{rst});\n\n    return rst\n}\n\nexport const checkExpiredCode = (code:string) => {\n    return afiCodes.find(c => c.code == code)?\n            afiCodes.find(c => c.code == code)?.isExpired : true\n}","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormHelperText, Grid, InputAdornment, InputLabel, makeStyles, MenuItem, Select, TextField, Tooltip, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport NumberFormat from 'react-number-format';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport BaseDialog from '../common/BaseDialog';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport { wareHouses } from 'src/constants/WareHouse';\nimport PopUpAddressTemplate from './PopUpAddressTemplate';\nimport { OrderAddress } from 'src/afi-manager-base-model/model/OrderAddress';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport { checkExpiredCode, getAvailableCodes } from 'src/helper/CheckBestOptionForOrder';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Autocomplete from '@material-ui/lab/Autocomplete/Autocomplete';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/rematch/store';\n\nconst useStyle = makeStyles((theme) => ({\n    divide2Col: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gridGap: 20\n    },\n    tooltipPlacementTop: {\n        margin: '5px 0'\n    },\n}))\ntype Props = {\n    isDisplay: boolean;\n    item: UserHm;\n    onEdit: (item: UserHm, isRunBot?: boolean) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({\n    address: Yup.string().max(40, 'Không được quá 40 kí tự').required('Không được để trống').trim().nullable(),\n    firstName: Yup.string().max(20, 'Không quá 20 kí tự').required('Không được để trống').trim().nullable(),\n    emailCheckout: Yup.string().max(100, 'Không được quá 20 kí tự').required('Không được để trống').trim().test(\n        'K được có @gmail.com',\n        'K được có @gmail.com',\n        (value) => {\n            return !value?.includes('@')\n        }\n    ).nullable(),\n    password: Yup.string()\n        .max(40, 'Không được quá 40 kí tự')\n        .required('Không được để trống')\n        .trim()\n        .matches(\n            /(?=[A-Za-z0-9=!\"#$%&'()*+,-./:;<=>?@\\\\\\[\\]^_`{|}~]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*)(?=.{8,}).*$/,\n            '1 chữ số , 1 chữ in hoa, 1 chữ in thường, 8 kí tự',\n        )\n        .nullable(),\n    phone: Yup.string()\n        .max(20, 'Không được quá 20 kí tự')\n        .required('Không được để trống')\n        .matches(/^\\+44[0-9\\s]{7,14}$/, 'Không đúng số điện thoại UK')\n        .nullable(),\n    postcode: Yup.string().max(40, 'Không được quá 40 kí tự').required('Không được để trống').trim().nullable(),\n    town: Yup.string().max(40, 'Không được quá 40 kí tự').required('Không được để trống').trim().nullable(),\n    username: Yup.string().max(40, 'Không được quá 40 kí tự').required('Không được để trống').trim().nullable(),\n    extraInfor: Yup.object({\n        wareHouse: Yup.string().required(\"Không được để trống\"),\n        verifiedAmount: Yup.string().matches(/[0-9]/, \"\").required(\"Không được để trống\"),\n        verifiedQuantity: Yup.string().matches(/[0-9]/, \"\").required(\"Không được để trống\"),\n        codeOff: Yup.string(),\n        staffEmail: Yup.string()\n    })\n});\n\nexport default function PopupInsertUser(props: Props) {\n    const [isOpenAddList, setIsOpenAddList] = useState(false)\n    const [isDangerAddress, setIsDangerAddress] = useState(false)\n    const authen = useSelector((state: RootState) => state.authen);\n    const [isRunBot, setIsRunBot] = useState(false)\n\n\n    const formik = useFormik<UserHm>({\n        initialValues: {} as UserHm,\n        validationSchema: validate,\n        onSubmit: () => {\n            props.onEdit({\n                ...formik.values,\n                username: formik.values.username?.trim(),\n                password: formik.values.password?.trim(),\n                extraInfor: {\n                    ...formik.values.extraInfor,\n                    staffEmail: formik.values.id ? formik.values.extraInfor?.staffEmail : authen.info?.email\n                }\n            }, isRunBot);\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        const touch = {\n            ..._.mapValues(new UserHm(), () => true),\n        };\n        formik.setTouched(touch);\n    };\n\n    useEffect(() => {\n        if (props.isDisplay) {\n            formik.setValues(\n                _.cloneDeep({\n                    ...props.item,\n                    isDone: props.item.isDone || false,\n                    isMerge: props.item.isMerge || false,\n                }),\n            );\n            formik.setTouched(_.mapValues(new UserHm(), () => false));\n        }\n    }, [props]);\n\n    const globalStyles = useGlobalStyles();\n    const classes = useStyle();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title={`Thông tin đơn hàng ${authen.info?.email}`}\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    <>\n                        {/* <Grid>\n                        <FormGroup row>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        onChange={(e) => {\n                                            formik.setValues({\n                                                ...formik.values,\n                                                isDone:\n                                                    e.target.checked || false,\n                                            });\n                                        }}\n                                        checked={formik.values.isDone}\n                                    />\n                                }\n                                label=\"IsDone\"\n                            />\n                        </FormGroup>\n                    </Grid> */}\n                        {/* <Grid>\n                        <FormGroup row>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        onChange={(e) => {\n                                            formik.setValues({\n                                                ...formik.values,\n                                                isMerge: e.target.checked || false,\n                                            });\n                                        }}\n                                        checked={formik.values.isMerge}\n                                    />\n                                }\n                                label=\"Đánh dấu đã merge\"\n                            />\n                        </FormGroup>\n                    </Grid> */}\n                    </>\n                    <Grid>\n                        <TextField\n                            value={formik.values.username}\n                            helperText={formik.touched.username && formik.errors.username}\n                            error={Boolean(formik.touched.username && formik.errors.username)}\n                            name=\"username\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Email giỏ hàng\"\n                            disabled={formik.values.isDone}\n                        />\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            value={formik.values.emailCheckout}\n                            helperText={formik.touched.emailCheckout && formik.errors.emailCheckout}\n                            error={Boolean(formik.touched.emailCheckout && formik.errors.emailCheckout)}\n                            disabled={formik.values.isDone}\n                            name=\"emailCheckout\"\n                            onChange={(e) => {\n                                let valueEmailCheckout: string = e.target?.value || '';\n                                const checkLastIndex = valueEmailCheckout.lastIndexOf('@');\n                                if (checkLastIndex >= 0) {\n                                    valueEmailCheckout = valueEmailCheckout.substring(0, checkLastIndex);\n                                }\n\n                                e.target.value = valueEmailCheckout;\n                                formik.handleChange(e);\n                            }}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"emailCheckout (not @gmail.com)\"\n                        />\n                    </Grid>\n                    <Grid className={classes.divide2Col}>\n                        <TextField\n                            value={formik.values.password}\n                            helperText={formik.touched.password && formik.errors.password}\n                            error={Boolean(formik.touched.password && formik.errors.password)}\n                            name=\"password\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Password\"\n                        />\n                        <TextField\n                            value={formik.values.phone}\n                            helperText={formik.touched.phone && formik.errors.phone}\n                            error={Boolean(formik.touched.phone && formik.errors.phone)}\n                            name=\"phone\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Phone\"\n                        />\n                    </Grid>\n                    <Grid className={classes.divide2Col}>\n                        <TextField\n                            value={formik.values.firstName}\n                            helperText={formik.touched.firstName && formik.errors.firstName}\n                            error={Boolean(formik.touched.firstName && formik.errors.firstName)}\n                            name=\"firstName\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"First name\"\n                        />\n                        <TextField\n                            value={formik.values.lastName}\n                            helperText={formik.touched.lastName && formik.errors.lastName}\n                            error={Boolean(formik.touched.lastName && formik.errors.lastName)}\n                            name=\"lastName\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Last name\"\n                        />\n                    </Grid>\n                    <Grid>\n                        <Grid container direction=\"row\" justifyContent=\"space-around\" alignItems=\"center\">\n                            <TextField InputLabelProps={{ shrink: true }}\n                                value={formik.values.address}\n                                helperText={formik.touched.address && formik.errors.address}\n                                error={Boolean(formik.touched.address && formik.errors.address)}\n                                name=\"address\"\n                                onChange={formik.handleChange}\n                                fullWidth\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            {isDangerAddress &&\n                                                <Tooltip title=\"Cẩn thận với địa chỉ này!\" placement=\"top-start\"\n                                                    classes={{ tooltipPlacementTop: classes.tooltipPlacementTop }}\n                                                >\n                                                    <WarningIcon color=\"error\" fontSize=\"small\" />\n                                                </Tooltip>}\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                variant=\"outlined\"\n                                className={clsx(globalStyles.mt1)}\n                                label=\"Address\"\n                            />\n                        </Grid>\n                        <Grid container direction=\"row\" alignItems=\"center\" className={clsx(globalStyles.mt1, globalStyles.mb2)}>\n                            <FavoriteRoundedIcon color=\"primary\" style={{ fontSize: 15 }} />\n                            <FavoriteRoundedIcon color=\"primary\" style={{ fontSize: 15 }} />\n                            <FavoriteRoundedIcon color=\"primary\" style={{ fontSize: 15 }} />\n                            <Typography color=\"primary\" variant=\"body2\" style={{ textDecoration: \"underline\", marginLeft: 7, cursor: \"pointer\" }}\n                                onClick={(e) => setIsOpenAddList(true)}>\n                                Mẫu địa chỉ chuẩn VIP PRO!</Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        <TextField InputLabelProps={{ shrink: true }}\n                            value={formik.values.address2}\n                            helperText={formik.touched.address2 && formik.errors.address2}\n                            error={Boolean(formik.touched.address2 && formik.errors.address2)}\n                            name=\"address2\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Address 2\"\n                        />\n                    </Grid>\n\n                    <Grid className={classes.divide2Col}>\n                        <TextField InputLabelProps={{ shrink: true }}\n                            value={formik.values.town}\n                            helperText={formik.touched.town && formik.errors.town}\n                            error={Boolean(formik.touched.town && formik.errors.town)}\n                            name=\"town\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Town\"\n                        />\n                        <TextField InputLabelProps={{ shrink: true }}\n                            value={formik.values.postcode}\n                            helperText={formik.touched.postcode && formik.errors.postcode}\n                            error={Boolean(formik.touched.postcode && formik.errors.postcode)}\n                            name=\"postcode\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Postcode\"\n                        />\n                    </Grid>\n\n                    <Grid className={classes.divide2Col}>\n                        <FormControl variant=\"outlined\" className={clsx(globalStyles.mt1, globalStyles.mb2)}>\n                            <InputLabel>Kho</InputLabel>\n                            <Select\n                                fullWidth\n                                label=\"Kho\"\n                                value={formik.values.extraInfor?.wareHouse || \"\"}\n                                onChange={(e) => {\n                                    let newValue = {\n                                        ...formik.values,\n                                        extraInfor: {\n                                            ...formik.values.extraInfor,\n                                            codeOff: \"\",\n                                            wareHouse: e.target.value as string\n                                        }\n                                    }\n                                    formik.setValues(newValue)\n                                }}\n                                error={Boolean(formik.touched.extraInfor && formik.errors.extraInfor && (!formik.values.extraInfor?.wareHouse || formik.values.extraInfor?.wareHouse?.length == 0))}\n                            >\n                                <MenuItem value=\"\">Kho</MenuItem>\n                                {wareHouses.map(w => {\n                                    return (\n                                        <MenuItem value={w.name}>{w.name}</MenuItem>\n                                    )\n                                })}\n                            </Select>\n                            <FormHelperText error >\n                                {formik.touched.extraInfor && formik.errors.extraInfor && (!formik.values.extraInfor?.wareHouse || formik.values.extraInfor?.wareHouse?.length == 0) && \"Không được để trống\"}\n                            </FormHelperText>\n                        </FormControl>\n                        <FormControl variant=\"outlined\" className={clsx(globalStyles.mt1, globalStyles.mb2)}>\n                            <Autocomplete\n                                freeSolo\n                                value={formik.values.extraInfor?.codeOff ? `${formik.values.extraInfor?.codeOff} ${checkExpiredCode(formik.values.extraInfor?.codeOff) && formik.values.extraInfor?.codeOff ? \"(Hết hạn)\" : \"\"}` : \"Đơn thường\"}\n                                disabled={!formik.values.extraInfor?.wareHouse || formik.values.extraInfor?.wareHouse.length == 0\n                                    || getAvailableCodes(formik.values.extraInfor.wareHouse).length == 0}\n                                onChange={(event: any, newValue: string | null) => {\n                                    let newCode = {\n                                        ...formik.values,\n                                        extraInfor: {\n                                            ...formik.values.extraInfor,\n                                            codeOff: newValue as string\n                                        }\n                                    }\n                                    formik.setValues(newCode)\n                                }}\n                                renderInput={(params) => <TextField\n                                    variant=\"outlined\"\n                                    label=\"Code\" {...params} />}\n                                options={formik.values.extraInfor?.wareHouse && getAvailableCodes(formik.values.extraInfor.wareHouse).length > 0 &&\n                                    [\"Đơn thường\", ...getAvailableCodes(formik.values.extraInfor?.wareHouse).filter(c => !checkExpiredCode(c)) || []] || [\"Đơn thường\"]}\n\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid className={classes.divide2Col}>\n                        <FormControl variant=\"outlined\" className={clsx(globalStyles.mt1, globalStyles.mb2)}>\n                            <NumberFormat\n                                customInput={TextField}\n                                required\n                                thousandSeparator\n                                value={formik.values.extraInfor?.verifiedQuantity}\n                                decimalScale={0}\n                                fixedDecimalScale\n                                onValueChange={(value) => {\n                                    let newValue = {\n                                        ...formik.values,\n                                        extraInfor: {\n                                            ...formik.values.extraInfor,\n                                            verifiedQuantity: value.floatValue\n                                        }\n                                    }\n                                    formik.setValues(newValue)\n                                }}\n                                placeholder=\"Nhập số món\"\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                            <FormHelperText error >\n                                {formik.touched.extraInfor && formik.errors.extraInfor && (!formik.values.extraInfor?.verifiedQuantity || formik.values.extraInfor?.verifiedQuantity == 0) && \"Không được để trống\"}\n                            </FormHelperText>\n                        </FormControl>\n                        <FormControl variant=\"outlined\" className={clsx(globalStyles.mt1, globalStyles.mb2)}>\n                            <NumberFormat\n                                customInput={TextField}\n                                thousandSeparator\n                                decimalScale={2}\n                                fixedDecimalScale\n                                value={formik.values.extraInfor?.verifiedAmount}\n                                onValueChange={(value) => {\n                                    let newValue = {\n                                        ...formik.values,\n                                        extraInfor: {\n                                            ...formik.values.extraInfor,\n                                            verifiedAmount: value.floatValue\n                                        }\n                                    }\n                                    formik.setValues(newValue)\n                                }}\n                                required\n                                placeholder=\"Nhập tổng tiền\"\n                                InputProps={{\n                                    inputProps: {\n                                        min: 0,\n                                    },\n                                    startAdornment:\n                                        <InputAdornment position=\"start\"\n                                            style={{ marginRight: 5, zIndex: 1000, color: \"#333333\" }}\n                                        >£</InputAdornment>,\n                                }}\n                                fullWidth\n                                variant=\"outlined\"\n                            />\n                            <FormHelperText error >\n                                {formik.touched.extraInfor && formik.errors.extraInfor && (!formik.values.extraInfor?.verifiedAmount || formik.values.extraInfor?.verifiedAmount == 0) && \"Không được để trống\"}\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid className={classes.divide2Col} alignItems=\"center\">\n                        <TextField\n                            value={formik.values.note}\n                            helperText={formik.touched.note && formik.errors.note}\n                            name=\"note\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Note\"\n                        />\n                        <FormGroup>\n                            <FormControlLabel control={\n                                <Checkbox checked={isRunBot} onChange={(e) => setIsRunBot(!isRunBot)} />}\n                                label=\"Run Bot!\" />\n                        </FormGroup>\n                    </Grid>\n                </Grid>\n            </BaseDialog>\n            <PopUpAddressTemplate\n                isDisplay={isOpenAddList}\n                onCancel={() => setIsOpenAddList(false)}\n                onSelect={(add: OrderAddress) => {\n                    setIsOpenAddList(false)\n                    setIsDangerAddress(add.mustBeVerified ? true : false)\n                    add &&\n                        formik.setValues({\n                            ...formik.values,\n                            address: add.address,\n                            address2: add.address2,\n                            town: add.town,\n                            postcode: add.postcode\n                        })\n                }}\n            />\n        </Grid>\n    );\n}\n","import { FormControl, FormControlTypeMap, FormHelperText, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { OverrideProps } from '@material-ui/core/OverridableComponent';\nimport React from 'react';\ntype Props<T = any, D extends React.ElementType = FormControlTypeMap['defaultComponent'], P = {}> = {\n    label?: string;\n    data: T[];\n    value?: any;\n    labelOption: (items: T) => string;\n    valueOption: (items: T) => any;\n    onChange: (items: T) => void;\n    helperText?: string;\n    shrink?: boolean;\n    minWidth?: number;\n} & OverrideProps<FormControlTypeMap<P, D>, D>;\nexport default function SelectBox(props: Props) {\n    return (\n        <FormControl\n            {...props}\n            style={{\n                minWidth: props.minWidth,\n            }}\n        >\n            {props.label && <InputLabel shrink={props.shrink}>{props.label || 'label'}</InputLabel>}\n            <Select value={props.value} onChange={(e) => props.onChange(e.target.value)} label={props.label}>\n                {props.data.map((item) => (\n                    <MenuItem value={props.valueOption(item)}>{props.labelOption(item)}</MenuItem>\n                ))}\n            </Select>\n            <FormHelperText>{props.helperText}</FormHelperText>\n        </FormControl>\n    );\n}\n","import {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\n\ntype Props = {\n    linkImage: string;\n    isDisplay: boolean;\n    onCancel: () => void;\n};\n\nexport default function DialogShowImage(props: Props) {\n    const globalStyles = useGlobalStyles();\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'Enter') {\n            props.onCancel();\n        }\n        if (e.key === 'Escape') {\n            props.onCancel();\n        }\n    };\n    return (\n        <Dialog maxWidth=\"xl\" open={props.isDisplay} fullWidth onKeyDown={handleKeyDown}>\n            <Grid className={clsx(globalStyles.pp3)}>\n                <Grid>\n                    <DialogTitle>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h5\" color={'primary'} align={'center'}>\n                                {'Hỉnh ảnh'}\n                            </Typography>\n                        </Grid>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '1.5rem',\n                                right: '1.5rem',\n                            }}\n                        >\n                            <IconButton aria-label=\"close\" onClick={props.onCancel}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Box>\n                    </DialogTitle>\n                </Grid>\n                <DialogContent>\n                    <Grid container xs={12} direction=\"column\" className={clsx(globalStyles.mt1)}>\n                        <img\n                            style={{\n                                width: '100%',\n                            }}\n                            src={props.linkImage}\n                        ></img>\n                    </Grid>\n                </DialogContent>\n                <Grid className={clsx(globalStyles.ml2, globalStyles.mr2)}>\n                    <DialogActions>\n                        <Grid item container xs={12} justify={'space-between'}>\n                            <Grid item container xs={12} justify={'center'} alignItems={'center'}>\n                                <Button\n                                    startIcon={<CloseIcon />}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    onClick={props.onCancel}\n                                >\n                                    Cancel\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </DialogActions>\n                </Grid>\n            </Grid>\n        </Dialog>\n    );\n}\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Grid, makeStyles, Typography, Zoom } from '@material-ui/core';\nimport TextField from '../../component/common/TextFiled';\nimport Button from '../../component/common/Button';\nimport ListGrid from '../../component/common/ListGrid';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { useCrudHook } from '../../hook/useCrudHook';\nimport { Pagination } from '@material-ui/lab';\nimport PopUpConfirm from '../../component/common/PopupConfirm';\nimport { useHistory } from 'react-router-dom';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport { excelController, orderTrackingController, userHmController } from 'src/controller';\nimport UserHmItemList from 'src/component/AutoOrderHm/UserHmItemList';\nimport PopupInsertUser from 'src/component/AutoOrderHm/PopupInsertUser';\nimport theme from 'src/theme/MuiTheme';\nimport { handleWithPopupHook } from 'src/hook/HandleWithPopupHook';\nimport PopupMergeToUser from 'src/component/AutoOrderHm/PopupMergeToUser';\nimport { OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\nimport SelectBox from 'src/component/common/SelectBox';\nimport DialogShowImage from './DialogShowImage';\nimport BaseDialog from 'src/component/common/BaseDialog';\nimport { User } from 'src/afi-manager-base-model/model/User';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({}));\nfunction UserHmManager(props: Props) {\n    const history = useHistory();\n\n    const crudCompany = useCrudHook<UserHm>({\n        controller: userHmController,\n        initQuery: {\n            pageSize: 50,\n        },\n    });\n    const [showPopupImage, setShowPopupImage] = useState<{\n        img: string;\n        isDisplay: boolean;\n    }>({\n        img: '',\n        isDisplay: false,\n    });\n    const [isDisplayQuickCreateOrder, setIsDisplayQuickCreateOrder] = useState(false);\n    const [quickOrder, setQuickOrder] = useState<UserHm>({} as UserHm);\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState();\n\n    useEffect(() => {\n        return () => { };\n    }, []);\n\n    const normalizeData = (text: string) => (text || '').trim()\n    const normalizePhone = (phone: string) => {\n        let trimPhone = (phone || '').replaceAll(\" \", \"\")\n        return trimPhone.startsWith('+44' || '(+44)')\n            ? trimPhone\n            : trimPhone.startsWith('44')\n                ? `+${trimPhone}`\n                : trimPhone.startsWith('0')\n                    ? `+44${trimPhone.substring(1, trimPhone.length)}`\n                    : `+44${trimPhone}`\n    }\n    return (\n        <Grid\n            container\n            style={{\n                minHeight: '100vh',\n                background: 'white',\n                padding: theme.spacing(2),\n            }}\n        >\n            <DialogShowImage\n                isDisplay={showPopupImage?.isDisplay}\n                linkImage={showPopupImage?.img}\n                onCancel={() => {\n                    setShowPopupImage({\n                        img: '',\n                        isDisplay: false,\n                    });\n                }}\n            />\n            <Grid container justify=\"center\" className={clsx(globalStyle.pp2)}>\n                <PopUpConfirm\n                    isDisplay={crudCompany.isShowConfirm}\n                    onCancel={crudCompany.onCancelConfirm}\n                    onConfirm={() => crudCompany.onDelete(crudCompany.itemSelected)}\n                />\n\n                <PopupInsertUser\n                    isDisplay={crudCompany.isShowPopup}\n                    item={crudCompany.itemSelected}\n                    onCancel={() => { crudCompany.onCancelPopup() }}\n                    onEdit={(item, isRunBot) => crudCompany.onSave(item).then(rst => {\n                        isRunBot && rst.id\n                            && excelController.runBotCheckout(rst.id, rst.username, rst.extraInfor?.verifiedQuantity, rst.extraInfor?.wareHouse, rst.extraInfor?.staffEmail)\n                    })}\n                />\n                <Grid md={10}>\n                    <Grid container justify=\"center\" className={globalStyle.pb2}>\n                        <Typography align=\"center\" variant=\"h4\">\n                            Danh sách đơn hàng\n                        </Typography>\n                    </Grid>\n                    <Grid container justify=\"space-between\">\n                        {/* <TextField\n                            onChange={(e) =>\n                                crudCompany.onQueryChanged(e.target.value)\n                            }\n                            className={clsx(globalStyle.mt2, globalStyle.mb2)}\n                            label=\"search\"\n                            variant=\"outlined\"\n                        ></TextField> */}\n                        <SelectBox\n                            data={['Tất cả', 'Đã chạy tool', 'Chưa chạy tool']}\n                            labelOption={(op) => op}\n                            variant=\"outlined\"\n                            label=\"Filter\"\n                            fullWidth\n                            // inputLabelProps={{\n                            //     shrink: true,\n                            // }}\n                            valueOption={(value) => value}\n                            onChange={(e: any) => {\n                                switch (e) {\n                                    case 'Đã chạy tool':\n                                        crudCompany.setFilter({\n                                            isDone: true,\n                                        });\n                                        break;\n                                    case 'Chưa chạy tool':\n                                        crudCompany.setFilter({\n                                            isDone: [false, null as any],\n                                        });\n                                        break;\n                                    default:\n                                        crudCompany.setFilter({});\n                                        break;\n                                }\n                            }}\n                        />\n                        <TextField\n                            style={{ marginTop: 24 }}\n                            fullWidth\n                            variant=\"outlined\"\n                            placeholder=\"Tìm theo username, email, note\"\n                            value={crudCompany.query?.search}\n                            onChange={(e) => {\n                                crudCompany.setQuery({\n                                    search: e.target.value.trim(),\n                                    searchFields: ['note', 'username', 'emailCheckout'],\n                                });\n                            }}\n                            className={clsx(globalStyle.mt2, globalStyle.mb2)}\n                        ></TextField>\n                        <Button\n                            // className={clsx(globalStyle.mt2, globalStyle.mb2)}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => setIsDisplayQuickCreateOrder(true)}\n                        >\n                            Tạo Order Hm\n                        </Button>\n                    </Grid>\n                    <Grid\n                        container\n                        // justify=\"center\"\n                        className={clsx(globalStyle.pt2, globalStyle.pb2)}\n                    >\n                        <ListGrid minWidthItem={'350px'} gridGap={20}>\n                            {crudCompany.pagingList?.rows?.map((item, index) => (\n                                <Zoom in={true} timeout={300}>\n                                    <Grid>\n                                        <UserHmItemList\n                                            onSeeImge={(itemImg) => {\n                                                if (itemImg.imgScreenShot) {\n                                                    setShowPopupImage({\n                                                        img: item.imgScreenShot || '',\n                                                        isDisplay: true,\n                                                    });\n                                                }\n                                            }}\n                                            item={item}\n                                            onDelete={crudCompany.onConfirm}\n                                            onEdit={crudCompany.onShowPopup}\n                                            onSeeDetail={(item) => {\n                                                history.push(`/progress-order/${item.id}`);\n                                            }}\n                                        />\n                                    </Grid>\n                                </Zoom>\n                            ))}\n                        </ListGrid>\n                    </Grid>\n                    <Grid container className={clsx(globalStyle.pt2, globalStyle.pb2)}>\n                        <Pagination\n                            count={crudCompany.pagingList.totalPages || 1}\n                            page={crudCompany.pagingList.page || 1}\n                            onChange={(e, page) => {\n                                crudCompany.setQuery({\n                                    ...crudCompany.query,\n                                    page: page,\n                                });\n                            }}\n                            color=\"primary\"\n                        />\n                    </Grid>\n                    <BaseDialog\n                        isDisplay={isDisplayQuickCreateOrder}\n                        labelConfirmBtn={\"Tạo nhanh\"}\n                        onCancel={() => {\n                            setIsDisplayQuickCreateOrder(false);\n                            crudCompany.onShowPopup({});\n                        }}\n                        title=\"Tạo nhanh đơn hàng\"\n                        onClickConfirm={() => {\n                            crudCompany.onShowPopup(quickOrder);\n                            setIsDisplayQuickCreateOrder(false);\n                        }}\n                    >\n                        <Grid>\n                            <TextField\n                                onChange={(e) => {\n                                    const [\n                                        id,\n                                        orderStatus,\n                                        assigned,\n                                        note,\n                                        emailCheckout,\n                                        username,\n                                        password,\n                                        firstName,\n                                        lastName,\n                                        phone,\n                                        address,\n                                        address2,\n                                        town,\n                                        postcode,\n                                        verifiedQuantity,\n                                        verifiedAmount,\n                                    ] = e.target.value.split('\\t')\n                                    setQuickOrder({\n                                        emailCheckout: normalizeData(emailCheckout),\n                                        username: normalizeData(username),\n                                        password: normalizeData(password),\n                                        firstName: normalizeData(firstName),\n                                        lastName: normalizeData(lastName),\n                                        phone: normalizePhone(phone),\n                                        address2: normalizeData(address2).replaceAll(/\\(.*\\)/g, ''),\n                                        address: normalizeData(address).replaceAll(/\\(.*\\)/g, ''),\n                                        town: normalizeData(town),\n                                        postcode: normalizeData(postcode),\n                                        extraInfor: {\n                                            verifiedQuantity: Number((verifiedQuantity || \"\").replaceAll(',', '.')),\n                                            verifiedAmount: Number((verifiedAmount || \"\").replaceAll(',', '.')),\n                                        },\n                                    });\n                                }}\n                                multiline={true}\n                                minRows={3}\n                                fullWidth\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                label=\"Copy nguyên dòng trong file excel\"\n                            ></TextField>\n                        </Grid>\n                    </BaseDialog>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(UserHmManager);\n","import { OrderTracking, ProductOrder } from 'src/afi-manager-base-model/model/OrderTracking';\nimport { mathCeilWithRound } from './NumberUtils';\nimport { StringUtil } from './StringUtil';\n\nexport enum OrderStatus {\n    completed = 'Completed',\n    error = 'Error',\n}\n\nexport const calcBuyPrice = (price: number) =>\n    price > 12\n        ? Math.round((price - 3 - price * 0.25) * 100) / 100\n        : (price >= 7 && price <=12 )\n        ? Math.round((price - 6) * 100) / 100\n        : price >= 5.99\n        ? Math.round((price - 3 - price * 0.25) * 100) / 100\n        : price > 5\n        ? Math.round((price - 3 - (price - 3) * 0.25) * 100) / 100\n        : price >= 4\n        ? Math.round((price - 3) * 100) / 100\n        : price;\n\nexport const getProductStatus = (product: ProductOrder, order: OrderTracking): OrderStatus => {\n    return StringUtil.nullOrEmpty(order.orderId)\n        ? OrderStatus.error\n        : StringUtil.nullOrEmpty(order.errorDesc)\n        ? OrderStatus.completed\n        : (order.productOrder?.length || 0) <= 1\n        ? OrderStatus.completed\n        : order.errorDesc?.includes(`${product.productId}: ${product.size}`)\n        ? OrderStatus.error\n        : OrderStatus.completed;\n};\n\nexport const calcBuyPriceOrder = (products: ProductOrder[]) => {\n    // let totalPrice = products.map((p) => p.price || 0).reduce((p, sum) => (sum = sum + p), 0);    \n    // if (totalPrice <= 5) return calcBuyPrice(totalPrice);\n\n    products = products\n        .map((p) => Array.from(new Array(p.quantity)).map((i) => p))\n        .reduce((arr, sumArr) => sumArr.concat(arr), []);\n\n    if (!products || products.length === 0) return 0;\n    if (products.length === 1) return calcBuyPrice(products[0].price || 0);\n    \n    if (products.length === 2) {\n        const priceP1 = products[0].price || 0;\n        const priceP2 = products[1].price || 0;\n\n        if(priceP1+priceP2 >= 7 && priceP1 + priceP2< 12) \n            return calcBuyPrice(products.map((p) => p.price || 0).reduce((item, sum) => sum + item, 0));\n\n        let result = mathCeilWithRound((priceP1+priceP2>5)?Math.min(priceP1 * 0.75 + priceP2 - 3, priceP2 * 0.75 + priceP1 - 3):(priceP1+priceP2-3), 2);\n        console.log({ priceP1, priceP2, result });\n        return result;\n    }\n    return calcBuyPrice(products.map((p) => p.price || 0).reduce((item, sum) => sum + item, 0));\n};\n\nexport const countProduct = (orders: OrderTracking[]) =>\n    orders\n        ?.map((r) => r.productOrder?.map((p) => p.quantity || 1).reduce((i, sum) => (sum += i), 0))\n        .reduce((i, sum) => (sum = (sum || 0) + (i || 0)), 0) || 0;\n\nexport const countBoughtProduct = (orders: OrderTracking[]) =>\n    orders\n        ?.filter((r) => r.orderId != null && r.orderId.length > 0)\n        .map((r) => {\n            const countProd = r.productOrder?.map((p) => p.quantity || 1).reduce((i, sum) => (sum += i), 0) || 1;\n            if (r.errorDesc != null && r.errorDesc.length > 0) return countProd - 1;\n            return countProd;\n        })\n        .reduce((i, sum) => (sum = (sum || 0) + (i || 0)), 0) || 0;\n\nexport const totalCompletedAmount = (orders: OrderTracking[]) => {\n    return mathCeilWithRound(\n        orders\n            ?.filter((i) => i.orderId != null && i.orderId.length > 0)\n            .map(\n                (o) =>\n                    o.productOrder\n                        ?.map((p) => Array.from(new Array(p.quantity || 1)).map((_) => ({ ...p, quantity: 1 })))\n                        .reduce((p, arr) => (arr = arr.concat(p)), [])\n                        ?.map((p) => {\n                            let status = getProductStatus(p, o);\n                            if (status === OrderStatus.completed) return p.price || 0;\n                            return 0;\n                        })\n                        .reduce((price, total) => (total += price), 0) || 0,\n            )\n            .reduce((price, total) => (total += price), 0) || 0,\n        2,\n    );\n};\n\nexport const totalAmount = (orders: OrderTracking[]) => {\n    return mathCeilWithRound(\n        orders?.map((r) => r.totalPrice || 0).reduce((price, total) => (total += price), 0) || 0,\n        2,\n    );\n};\n","export const mathCeilWithRound = (n: number, decimal: number) => {\n    return Math.ceil(n * Math.pow(10, decimal)) / Math.pow(10, decimal);\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { Button, Card, Chip, Grid, makeStyles, Paper, Popover, Tooltip, Typography } from '@material-ui/core';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { IoCopyOutline, IoCreateOutline } from 'react-icons/io5';\nimport { IconButton } from '@material-ui/core';\nimport TextDesc from '../common/TextDesc';\nimport { OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\nimport theme from 'src/theme/MuiTheme';\nimport { checkoutCode, checkoutCodeAle } from 'src/constants/IMacros';\nimport { dispatch } from '../../rematch/store';\nimport { Giftcard } from '../../container/hm-manager/ProgressAutoOrder';\nimport { calcBuyPrice, calcBuyPriceOrder } from 'src/helper/CalculatorHmPrice';\nimport { cssInfo } from 'src/constants/Other';\nimport { GiTwoCoins } from 'react-icons/gi';\nimport { RiAccountPinCircleFill } from 'react-icons/ri';\nimport { BiKey } from 'react-icons/bi';\nimport { mathCeilWithRound } from 'src/helper/NumberUtils';\nimport { AiOutlineSplitCells } from 'react-icons/ai';\nimport { isDangerousPrice } from 'src/helper/CheckBestOptionForOrder';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\ntype Props = {\n    item: OrderTracking;\n    userHm: UserHm;\n    giftCard: Giftcard;\n    updateOrderId: (item: OrderTracking) => void;\n    onSplitOrder?: (item: OrderTracking) => void;\n};\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(2),\n    },\n    rootItem: {\n        borderRadius: theme.spacing(1),\n        border: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(1),\n    },\n    frCoin: {\n        color: cssInfo.colorCoin,\n    },\n    frCoinBuy: {\n        color: theme.palette.error.main,\n    },\n    frCoinBought: {\n        color: theme.palette.primary.main,\n    },\n    icon: {\n        fontSize: '1.5rem',\n        paddingRight: theme.spacing(1),\n    },\n    coin: {\n        fontSize: '1.5rem',\n        paddingRight: theme.spacing(1),\n    },\n    popoverRoot: {\n        padding: theme.spacing(1),\n    },\n}));\nfunction ProgressHmItemList(props: Props) {\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n\n    const [state, setState] = useState<{\n        isOpenMoreInfo: boolean;\n        isCanSplit: boolean;\n    }>({\n        isOpenMoreInfo: false,\n        isCanSplit: false,\n    });\n\n    const refChipInfo = useRef(null);\n\n    const getChipStatus = (item: OrderTracking): React.ReactElement => {\n        if (item.orderId) {\n            return (\n                <Chip\n                    style={{\n                        background: theme.palette.success.light,\n                    }}\n                    color=\"primary\"\n                    label={item.orderId}\n                />\n            );\n        }\n\n        if (item.isOrder) {\n            return <Chip label={'Added to cart'} />;\n        }\n\n        if (item.isRegister && !item.isOrder) {\n            return <Chip label={'Registed'} />;\n        }\n\n        if (!item.isRegister) {\n            return <Chip label={'Created'} />;\n        }\n\n        return <></>;\n    };\n\n    const getStatusText = (item: OrderTracking): string => {\n        if (!item.isRegister) {\n            return 'Created';\n        }\n        if (item.isRegister && !item.isOrder) {\n            return 'Registed';\n        }\n        if (item.isOrder && item.orderId) {\n            return item.orderId || '';\n        }\n        if (item.isOrder) {\n            return 'Added to cart';\n        }\n        return '';\n    };\n\n    const handleCopyToolMarcro = () => {\n        if (props.item.isOrder || props.item.errorDesc) {\n            navigator.clipboard.writeText(\n                checkoutCodeAle(\n                    props.item.email || 'email@gmail.com',\n                    props.item.userHM?.password || '123456a@',\n                    props.giftCard.serialNumber,\n                    props.giftCard.pin,\n                    Number(props.item.totalPrice || '0'),\n                ),\n            );\n            dispatch.notification.success('Copy thành công nà  !!!');\n        } else {\n            dispatch.notificationPopup.success({\n                message: 'Cái này chưa chạy tool xong mà, không copy đươc đâu ',\n                title: 'Gì zạ, cái gì zạ !!',\n            });\n        }\n    };\n\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    const checkIsCanSplit = (item: OrderTracking): boolean => {\n        const orderHm = props.item;\n        let isCanSplit = false;\n        if (orderHm.errorDesc) {\n            if ((orderHm.productOrder?.length || 0) >= 2) {\n                isCanSplit = true;\n            }\n            if (\n                orderHm.productOrder &&\n                orderHm.productOrder.length > 0 &&\n                (orderHm.productOrder[0].quantity || 0) >= 2\n            ) {\n                isCanSplit = true;\n            }\n        }\n        return isCanSplit;\n    };\n\n    return (\n        <Grid\n            className={classes.root}\n            style={{ border: isDangerousPrice(props.item.totalPrice || 0, props.userHm) ? '1px solid red' : '' }}\n        >\n            <Grid container justify=\"space-between\">\n                <Grid xs={6} container item>\n                    <Popover\n                        id={props.item.id || ''}\n                        open={state.isOpenMoreInfo}\n                        anchorEl={refChipInfo.current}\n                        onClose={() => {\n                            setState({ ...state, isOpenMoreInfo: false });\n                        }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                    >\n                        <Grid className={classes.popoverRoot}>\n                            <Typography>Đăng kí bởi: {props.item.registerByName}</Typography>\n                            <Typography>Checkout bởi : {props.item.dataFirebase?.username}</Typography>\n                        </Grid>\n                    </Popover>\n                    <Grid onClick={() => setState({ ...state, isOpenMoreInfo: true })} ref={refChipInfo}>\n                        <Grid container alignItems=\"center\">\n                            {props.item.errorDesc && (\n                                <Chip\n                                    style={{\n                                        background: theme.palette.error.light,\n                                        marginRight: '5px',\n                                    }}\n                                    color=\"primary\"\n                                    label={props.item.errorDesc}\n                                />\n                            )}\n                            {getChipStatus(props.item)}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"flex-end\" xs={6}>\n                    <Grid>\n                        <IconButton\n                            onClick={() => {\n                                handleCopyToolMarcro();\n                            }}\n                            size=\"small\"\n                        >\n                            <IoCopyOutline />\n                        </IconButton>\n\n                        {checkIsCanSplit(props.item) && (\n                            <IconButton\n                                onClick={() => {\n                                    props.onSplitOrder && props.onSplitOrder(props.item);\n                                }}\n                                size=\"small\"\n                            >\n                                <AiOutlineSplitCells />\n                            </IconButton>\n                        )}\n\n                        <IconButton\n                            onClick={() => {\n                                props.updateOrderId(props.item);\n                            }}\n                            size=\"small\"\n                            color=\"primary\"\n                        >\n                            <IoCreateOutline />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid className={clsx(globalStyle.mt1, globalStyle.mb1)}>\n                <Grid container alignItems=\"center\">\n                    <Grid className={classes.icon}>\n                        <RiAccountPinCircleFill />\n                    </Grid>\n                    <Grid>\n                        <Typography variant=\"h6\">{props.item.email}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid container alignItems=\"center\">\n                    <Grid className={globalStyle.pr1}>\n                        <BiKey />\n                    </Grid>\n                    <Grid>\n                        <Typography variant=\"caption\">{props.item.userHM?.password}</Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n\n                // style={{\n                //     minHeight: 80,\n                // }}\n            >\n                {props.item?.productOrder?.map((product) => {\n                    return (\n                        <Grid xs={6}>\n                            <Grid container className={clsx(globalStyle.pt1, globalStyle.pb1)} wrap=\"nowrap\">\n                                <Grid\n                                    container\n                                    alignItems=\"center\"\n                                    style={{\n                                        width: 50,\n                                    }}\n                                >\n                                    <a\n                                        href={`https://www2.hm.com/en_gb/productpage.${product.productId}.html`}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <img\n                                            src={\n                                                product.img ||\n                                                'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTi0T_mmYmCbAvnqj89zuDtPvOta_zEUQjSLg&usqp=CAU'\n                                            }\n                                            alt=\"\"\n                                            style={{\n                                                width: 50,\n                                                // border: '1px solid #dddddd',\n                                            }}\n                                        />\n                                    </a>\n                                </Grid>\n                                <Grid className={globalStyle.pp1}>\n                                    <Grid container justify=\"space-between\">\n                                        <Grid container>\n                                            <Grid container alignContent=\"center\">\n                                                <Typography>{product.productId}</Typography>\n                                                <Typography\n                                                    variant=\"caption\"\n                                                    color=\"textSecondary\"\n                                                >{`(${product.quantity})`}</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container>\n                                            <Typography variant=\"caption\">Size:{product.size}</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n            <Grid container className={clsx(globalStyle.pt1)} justifyContent=\"center\">\n                <Grid xs={4}>\n                    <Grid\n                        className={clsx(globalStyle.pr1, classes.frCoin)}\n                        style={{\n                            color:\n                                props.item.totalPrice && props.item.totalPrice > 5\n                                    ? undefined\n                                    : theme.palette.success.main,\n                        }}\n                    >\n                        <Grid container alignItems=\"center\" className={classes.rootItem} justify=\"center\">\n                            <Grid className={clsx(classes.coin)}>\n                                <GiTwoCoins />\n                            </Grid>\n                            <Grid>\n                                <Typography variant=\"body2\">\n                                    {mathCeilWithRound(props.item.totalPrice || 0, 2)} (Gốc)\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid xs={4}>\n                    <Grid className={clsx(globalStyle.pr1, classes.frCoinBuy)}>\n                        <Grid container alignItems=\"center\" className={classes.rootItem} justify=\"center\">\n                            <Grid className={clsx(classes.coin)}>\n                                <GiTwoCoins />\n                            </Grid>\n                            <Grid>\n                                <Typography variant=\"body2\">\n                                    {`${calcBuyPriceOrder(props.item.productOrder || [])}`} (Cần trả)\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {props.item.orderId && props.item.orderId.length > 0 && (\n                    <Grid xs={4}>\n                        <Grid className={clsx(globalStyle.pr1, classes.frCoinBought)}>\n                            <Grid container alignItems=\"center\" className={classes.rootItem} justify=\"center\">\n                                <Grid className={clsx(classes.coin)}>\n                                    <GiTwoCoins />\n                                </Grid>\n                                <Grid>\n                                    <Typography variant=\"body2\">\n                                        {props.item.dataFirebase && props.item.dataFirebase?.total\n                                            ? props.item.dataFirebase?.total + ' (Đã trả)'\n                                            : 'Check tay nha :(('}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                )}\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default ProgressHmItemList;\n","export const checkoutCodeAle = (\n    email: string,\n    password: string,\n    cardNumber: string,\n    cardPin: string,\n    orderPrice: number,\n) => `VERSION BUILD=1011 RECORDER=CR\nURL GOTO=https://www2.hm.com/en_gb/logout\nwait seconds=2\nURL GOTO=https://www2.hm.com/en_gb/login\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:email CONTENT=${email}\nTAG POS=1 TYPE=INPUT:PASSWORD FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:password CONTENT=${password}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=TXT:Sign<SP>in<SP>/<SP>Join\nwait seconds=5\nURL GOTO=https://www2.hm.com/en_gb/checkout-r\nwait seconds=2\nURL GOTO=https://www2.hm.com/en_gb/checkout-r\nwait seconds=10\nTAG POS=2 TYPE=SPAN ATTR=TXT:Add<SP>gift<SP>cards\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=ID:cardNumber CONTENT=${cardNumber\n    .replaceAll(' ', '')\n    .trim()}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=ID:cardPin CONTENT=${cardPin}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:ADD\nWait seconds=2\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:SAVE\nWait seconds=3`;\n\nexport const checkoutLoopAle = (\n    email: string,\n    password: string,\n    cardNumber: string,\n    cardPin: string,\n) => `VERSION BUILD=1011 RECORDER=CR\nset !var1 ${email}+hm\nadd !var1 {{!loop}}\nURL GOTO=https://www2.hm.com/en_gb/logout\nwait seconds=2\nURL GOTO=https://www2.hm.com/en_gb/login\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:email CONTENT={{!var1}}@gmail.com\nTAG POS=1 TYPE=INPUT:PASSWORD FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:password CONTENT=${password}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=TXT:Sign<SP>in<SP>/<SP>Join\nwait seconds=5\nURL GOTO=https://www2.hm.com/en_gb/checkout-r\nwait seconds=5\nURL GOTO=https://www2.hm.com/en_gb/checkout-r\nwait seconds=10\nTAG POS=2 TYPE=SPAN ATTR=TXT:Add<SP>gift<SP>cards\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=ID:cardNumber CONTENT=${cardNumber}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=ID:cardPin CONTENT=${cardPin}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:ADD\nWait seconds=2\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:SAVE\nwait seconds=5\nTAG POS=1 TYPE=SPAN ATTR=TXT:COMPLETE<SP>PURCHASE\nWait seconds=20`;\n\nexport const checkoutCode = (\n    email: string,\n    password: string,\n    cardNumber: string,\n    cardPin: string,\n    orderPrice: number,\n) => `VERSION BUILD=1011 RECORDER=CR\nURL GOTO=https://www2.hm.com/en_gb/logout\nwait seconds=2\nURL GOTO=https://www2.hm.com/en_gb/login\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:email CONTENT=${email}\nTAG POS=1 TYPE=INPUT:PASSWORD FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:password CONTENT=${password}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=TXT:Sign<SP>in<SP>/<SP>Join\nwait seconds=5\nURL GOTO=https://www2.hm.com/en_gb/checkout-r\nwait seconds=10\n${\n    orderPrice <= 5\n        ? 'TAG POS=1 TYPE=DIV ATTR=TXT:Add<SP>code<SP>£3'\n        : 'TAG POS=1 TYPE=SPAN ATTR=TXT:PICK<SP>A<SP>DISCOUNT'\n}\nwait seconds=10\nTAG POS=2 TYPE=SPAN ATTR=TXT:Add<SP>gift<SP>cards\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=ID:cardNumber CONTENT=${cardNumber\n    .replaceAll(' ', '')\n    .trim()}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=ID:cardPin CONTENT=${cardPin}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:ADD\nWait seconds=2\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:SAVE\nWait seconds=3`;\n\nexport const addAddressAndCheckout = (\n    email: string,\n    password: string,\n    cardNumber: string,\n    cardPin: string,\n    orderPrice: number,\n    info: {\n        firstName: string;\n        lastName: string;\n        lineAddress: string;\n        flatHouse: string;\n        town: string;\n        postCode: string;\n        phonenumber: string;\n    },\n) => `URL GOTO=https://www2.hm.com/en_gb/logout\nwait seconds=2\nURL GOTO=https://www2.hm.com/en_gb/login\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:email CONTENT=${email}\nTAG POS=1 TYPE=INPUT:PASSWORD FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:password CONTENT=${password}\nTAG POS=1 TYPE=SPAN ATTR=TXT:Sign<SP>in<SP>/<SP>Join\nWait seconds=10\n\nURL GOTO=https://www2.hm.com/en_gb/account/settings/\nTAG POS=1 TYPE=A ATTR=TXT:Edit\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:firstName CONTENT=${info.firstName.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:lastName CONTENT=${info.lastName.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:cellPhone CONTENT=${info.phonenumber.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=SELECT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:gender CONTENT=%FEMALE\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:postalCode CONTENT=${info.postCode.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=TXT:SAVE\n\n\nURL GOTO=https://www2.hm.com/en_gb/account/settings/addressbook\nTAG POS=1 TYPE=SPAN ATTR=TXT:add<SP>new<SP>address\n \nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:line1 CONTENT=${info.lineAddress.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:line2 CONTENT=${info.flatHouse.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:town CONTENT=${info.town.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:postalCode CONTENT=${info.postCode.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=TXT:SAVE\nwait seconds = 6\nTAG POS=2 TYPE=BUTTON ATTR=TXT:SAVE\nWait seconds=6\nTAG POS=1 TYPE=BUTTON ATTR=TXT:add<SP>new<SP>address\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:firstName CONTENT=${info.firstName.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:lastName CONTENT=${info.lastName.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:line1 CONTENT=${info.lineAddress.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:line2 CONTENT=${info.flatHouse.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:town CONTENT=${info.town.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:postalCode CONTENT=${info.postCode.replaceAll(\n    ' ',\n    '<SP>',\n)}\nTAG POS=1 TYPE=SPAN ATTR=TXT:Use<SP>as<SP>default\nTAG POS=1 TYPE=INPUT:CHECKBOX FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:addressDefault CONTENT=YES\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=TXT:SAVE\nwait seconds = 6\nTAG POS=2 TYPE=BUTTON ATTR=TXT:SAVE\nWait seconds=6\nURL GOTO=https://www2.hm.com/en_gb/checkout-r\nwait seconds=10\n${\n    orderPrice <= 5\n        ? 'TAG POS=1 TYPE=DIV ATTR=TXT:Add<SP>code<SP>£3'\n        : 'TAG POS=1 TYPE=SPAN ATTR=TXT:PICK<SP>A<SP>DISCOUNT'\n}\nwait seconds=10\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:CONTINUE\nwait seconds=3\nTAG POS=2 TYPE=SPAN ATTR=TXT:Add<SP>gift<SP>cards\nwait seconds=4\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=ID:cardNumber CONTENT=${cardNumber\n    .replaceAll(' ', '')\n    .trim()}\nTAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=ID:cardPin CONTENT=${cardPin}\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:ADD\nWait seconds=4\nTAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/checkout-r ATTR=TXT:SAVE\nWait seconds=3\n\n`;\n\nexport const addAddress = (\n    emailCheckout: string,\n    password: string,\n    info: {\n        firstName: string;\n        lastName: string;\n        lineAddress: string;\n        flatHouse: string;\n        town: string;\n        postCode: string;\n        phonenumber: string;\n    },\n) => {\n    return `URL GOTO=https://www2.hm.com/en_gb/logout\n    wait seconds=2\n    URL GOTO=https://www2.hm.com/en_gb/login\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:email CONTENT=${emailCheckout}+hm{{!loop}}@gmail.com\n    TAG POS=1 TYPE=INPUT:PASSWORD FORM=ACTION:https://www2.hm.com/en_gb/login ATTR=ID:password CONTENT=${password}\n    TAG POS=1 TYPE=SPAN ATTR=TXT:Sign<SP>in<SP>/<SP>Join\n    Wait seconds=5\n    \n    URL GOTO=https://www2.hm.com/en_gb/account/settings/\n    TAG POS=1 TYPE=A ATTR=TXT:Edit\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:firstName CONTENT=${info.firstName.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:lastName CONTENT=${info.lastName.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:cellPhone CONTENT=${info.phonenumber.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=SELECT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:gender CONTENT=%FEMALE\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=ID:postalCode CONTENT=${info.postCode.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/account/settings/personal-details ATTR=TXT:SAVE\n    \n    \n    URL GOTO=https://www2.hm.com/en_gb/account/settings/addressbook\n    TAG POS=1 TYPE=SPAN ATTR=TXT:add<SP>new<SP>address\n     \n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:line1 CONTENT=${info.lineAddress.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:line2 CONTENT=${info.flatHouse.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:town CONTENT=${info.town.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:postalCode CONTENT=${info.postCode.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=TXT:SAVE\n    wait seconds = 4\n    TAG POS=2 TYPE=BUTTON ATTR=TXT:SAVE\n    Wait seconds=6\n    TAG POS=1 TYPE=BUTTON ATTR=TXT:add<SP>new<SP>address\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:firstName CONTENT=${info.firstName.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:lastName CONTENT=${info.lastName.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:line1 CONTENT=${info.lineAddress.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:line2 CONTENT=${info.flatHouse.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:town CONTENT=${info.town.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=INPUT:TEXT FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:postalCode CONTENT=${info.postCode.replaceAll(\n        ' ',\n        '<SP>',\n    )}\n    TAG POS=1 TYPE=SPAN ATTR=TXT:Use<SP>as<SP>default\n    TAG POS=1 TYPE=INPUT:CHECKBOX FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=ID:addressDefault CONTENT=YES\n    TAG POS=1 TYPE=BUTTON FORM=ACTION:https://www2.hm.com/en_gb/account/settings/addressbook ATTR=TXT:SAVE\n    wait seconds = 4\n    TAG POS=2 TYPE=BUTTON ATTR=TXT:SAVE\n    Wait seconds=6`;\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Divider,\n    Grid,\n    makeStyles,\n    TextField,\n    Switch,\n    Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport React, { useCallback, useEffect } from 'react';\nimport { hMController } from 'src/controller';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport * as Yup from 'yup';\nimport { OrderTracking, EStatusOrderTracking } from '../../afi-manager-base-model/model/OrderTracking';\n\nimport BaseDialog from '../common/BaseDialog';\nimport PrettoSlider from '../common/PrettoSlider';\nimport moment from 'moment';\nimport { BiErrorCircle } from 'react-icons/bi';\nimport theme from 'src/theme/MuiTheme';\nimport { TrackingHMHelper } from 'src/helper/TrackingHMHelper';\nconst CKEditor = require('ckeditor4-react');\n\ntype Props = {\n    isReadyBuyAll: boolean;\n    isDisplay: boolean;\n    item: OrderTracking;\n    onEdit: (item: OrderTracking) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({\n    orderId: Yup.string()\n        .max(100, 'Chữ không được quá 100 kí tự')\n        .min(11, 'ID của HM có trên 11 kí tự')\n        .trim()\n        .nullable(),\n});\n\nconst useStyle = makeStyles((theme) => ({\n    containerDetail: {\n        background: '#fff',\n        position: 'relative',\n        border: `1px solid ${theme.palette.grey[400]}`,\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(1),\n        boxShadow: 'none',\n        width: '100%',\n    },\n    iconDelete: {\n        color: theme.palette.error.main,\n        margin: 0,\n        padding: 4,\n    },\n    iconEdit: {\n        color: theme.palette.primary.main,\n        margin: 0,\n        padding: 4,\n    },\n}));\nexport default function PopupEditProgressAutoOrder(props: Props) {\n    const classes = useStyle();\n    const globalsStyle = useGlobalStyles();\n    const formik = useFormik<OrderTracking>({\n        initialValues: {},\n        validationSchema: validate,\n        onSubmit: () => {\n            // .filter((item) => Boolean(item))\n            props.onEdit({\n                ...formik.values,\n                errorDesc: formik.values.errorDesc && formik.values.errorDesc.length>0?formik.values.errorDesc : null as any as string,\n                orderId: formik.values.orderId && formik.values.orderId.length>0?formik.values.orderId: null as any as string,\n                productLink: formik.values?.productLink?.filter((item) => Boolean(item)),\n            });\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        formik.setTouched(_.mapValues(new OrderTracking(), () => true));\n    };\n\n    useEffect(() => {\n        if (props.isDisplay) {\n            formik.setValues(\n                _.cloneDeep({\n                    ...props.item,\n                    status: props.item.status || EStatusOrderTracking.FLOWING,\n                }),\n            );\n            formik.setTouched(_.mapValues(new OrderTracking(), () => false));\n        }\n    }, [props]);\n\n    useEffect(() => {\n        getDataOrderTracking(formik.values.orderId || '', formik.values);\n    }, [formik.values.orderId]);\n\n    const getDataOrderTracking = useCallback(\n        _.debounce((id: string, values) => {\n            return hMController\n                .getTrackingByOrderNo({\n                    orderNo: id,\n                })\n                .then((res) => {\n                    const firstData = res.body && res.body[0];\n                    formik.setValues({\n                        ...values,\n                        infoHM: res,\n                        orderId: values.orderId,\n                        trackingId: res?.header?.tracking_number,\n                        lastTimeTracking: new Date(firstData?.timestamp || new Date()),\n                        status:\n                            res.header?.last_delivery_status.code == 'Delivered'\n                                ? EStatusOrderTracking.COMPLETED\n                                : EStatusOrderTracking.FLOWING,\n                    });\n                })\n                .catch((err) => {\n                    formik.setValues({\n                        ...values,\n                        infoHM: undefined as any,\n                        orderId: values.orderId,\n                        trackingId: undefined as any,\n                    });\n                });\n        }, 400),\n        [],\n    );\n\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title=\"Add Error\"\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    <Grid>\n                        <TextField\n                            value={formik.values.errorDesc}\n                            helperText={formik.touched.errorDesc && formik.errors.errorDesc}\n                            name=\"errorDesc\"\n                            onChange={(e) => {\n                                if (e.target.value) {\n                                    formik.setValues({\n                                        ...formik.values,\n                                        errorDesc: e.target.value,\n                                    });\n                                } else {\n                                    formik.setValues({\n                                        ...formik.values,\n                                        errorDesc: null as any,\n                                    });\n                                }\n                            }}\n                            onBlur={formik.handleBlur}\n                            fullWidth\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Error desciption\"\n                        ></TextField>\n                    </Grid>\n\n                    {\n                        // (formik.values.isOrder||formik.values.isRegister) && (\n                        <Grid container>\n                            <Grid container>\n                                <TextField\n                                    value={formik.values.orderId}\n                                    helperText={formik.touched.orderId && formik.errors.orderId}\n                                    name=\"orderId\"\n                                    onChange={formik.handleChange}\n                                    // disabled={Boolean(formik.values.dataFirebase)&&!formik.values.errorDesc}\n                                    onBlur={formik.handleBlur}\n                                    fullWidth\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                                    label=\"OrderID\"\n                                    rows={4}\n                                ></TextField>\n                            </Grid>\n                            {!formik.values.infoHM ? (\n                                <Grid container justify=\"center\" className={clsx(globalsStyle.pp1)}>\n                                    <Grid container justify=\"center\">\n                                        <BiErrorCircle\n                                            style={{\n                                                fontSize: '6rem',\n                                                color: theme.palette.error.main,\n                                                fontWeight: 200,\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid container justify=\"center\">\n                                        <Typography\n                                            variant=\"h4\"\n                                            align=\"center\"\n                                        // color=\"textPrimary\"\n                                        >\n                                            {'Order Error'}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            ) : (\n                                <Accordion className={classes.containerDetail}>\n                                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                                        <Grid container>\n                                            <Grid container justify=\"space-between\" alignItems=\"center\">\n                                                <Typography variant=\"body2\">{'#' + formik.values.orderId}</Typography>\n                                            </Grid>\n                                            {/* <Divider className={clsx(globalsStyle.mt1, globalsStyle.mb1)} /> */}\n                                            <Grid container>\n                                                <PrettoSlider\n                                                    value={TrackingHMHelper.getOrderProcess(\n                                                        formik.values.infoHM?.header?.last_delivery_status.code || '',\n                                                    )}\n                                                />\n                                                <Grid container justify=\"space-between\">\n                                                    <Typography variant=\"subtitle1\">In Warehouse</Typography>\n                                                    <Typography color=\"secondary\">\n                                                        {formik.values.infoHM?.header?.last_delivery_status.status}\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid container direction=\"column\" justify=\"space-around\">\n                                                <Grid>\n                                                    <Typography>\n                                                        {formik.values.infoHM?.header?.tracking_number}\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                        <Grid container>\n                                            {formik.values?.infoHM?.body?.map((item) => (\n                                                <Grid\n                                                    style={{\n                                                        width: '100%',\n                                                    }}\n                                                >\n                                                    <Divider className={clsx(globalsStyle.mt1, globalsStyle.mb1)} />\n                                                    <Grid>\n                                                        <Typography>\n                                                            {moment(item.timestamp).format('DD/MM/YYYY, hh:mm')}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid>\n                                                        <Typography variant=\"body2\">{item.status_text}</Typography>\n                                                    </Grid>\n                                                    <Grid>\n                                                        <Typography>{item.status_details}</Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            ))}\n                                        </Grid>\n                                    </AccordionDetails>\n                                </Accordion>\n                            )}\n                        </Grid>\n                        // )\n                    }\n                    <Grid></Grid>\n                </Grid>\n            </BaseDialog>\n        </Grid>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    FormControlLabel,\n    FormLabel,\n    Grid,\n    IconButton,\n    Radio,\n    RadioGroup,\n    Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { OrderTracking, ProductOrder } from 'src/afi-manager-base-model/model/OrderTracking';\nimport { mathCeilWithRound } from 'src/helper/NumberUtils';\nimport * as Yup from 'yup';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { v4 as uuid } from 'uuid';\nimport theme from 'src/theme/MuiTheme';\n\ntype Props = {\n    isDisplay: boolean;\n    item: OrderTracking;\n    onSplitWithMerge: (params: {\n        orderTrackingOld: OrderTracking;\n        orderTrackingNew: OrderTracking;\n        productOrder: ProductOrder;\n    }) => void;\n    onSplitWithNew: (params: { orderTrackingOld: OrderTracking; productOrder: ProductOrder }) => void;\n    orderTrackings: OrderTracking[];\n    onCancel: () => void;\n};\nexport default function PopupSplitOrder(props: Props) {\n    const [state, setState] = useState<{\n        flatItemProductOrder: ProductOrder[];\n        productSelected: ProductOrder;\n        orderWillSplitTo?: OrderTracking;\n    }>({\n        flatItemProductOrder: [],\n        productSelected: {},\n    });\n    useEffect(() => {\n        if (props.isDisplay) {\n            const flatProduct: ProductOrder[] = [];\n            props.item.productOrder?.forEach((item) => {\n                for (let i = 0; i < (item?.quantity || 0); i++) {\n                    flatProduct.push({\n                        ...item,\n                        quantity: 1,\n                        id: uuid(),\n                    });\n                }\n            });\n            setState({\n                ...state,\n                flatItemProductOrder: flatProduct,\n                productSelected: flatProduct[0],\n                orderWillSplitTo: checkOrderCanMerge(props.orderTrackings),\n            });\n        }\n    }, [props]);\n\n    const checkOrderCanMerge = (orderTrackings: OrderTracking[]): OrderTracking | undefined => {\n        let orderSelected: OrderTracking | undefined = undefined;\n        orderTrackings.forEach((item) => {\n            if (!item.orderId && item.id != props.item.id) {\n                if (!orderSelected) {\n                    orderSelected = item;\n                }\n                if (mathCeilWithRound(item.totalPrice || 0, 2) < mathCeilWithRound(orderSelected.totalPrice || 0, 2)) {\n                    orderSelected = item;\n                }\n            }\n        });\n        return orderSelected;\n    };\n\n    const handleClickSplitNewOrder = () => {\n        props.onSplitWithNew({\n            orderTrackingOld: props.item,\n            productOrder: state.productSelected,\n        });\n    };\n\n    const handleClickSplitWithMergeOrder = () => {\n        props.onSplitWithMerge({\n            orderTrackingOld: props.item,\n            productOrder: state.productSelected,\n            orderTrackingNew: state.orderWillSplitTo || {},\n        });\n    };\n\n    const globalStyles = useGlobalStyles();\n    return (\n        <Dialog open={props.isDisplay} fullWidth>\n            <Grid className={clsx(globalStyles.pp3)}>\n                <Grid>\n                    <DialogTitle>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h5\" color={'primary'} align={'center'}>\n                                Tách order\n                            </Typography>\n                        </Grid>\n                        <Box\n                            style={{\n                                position: 'absolute',\n                                top: '1.5rem',\n                                right: '1.5rem',\n                            }}\n                        >\n                            <IconButton aria-label=\"close\" onClick={props.onCancel}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Box>\n                    </DialogTitle>\n                </Grid>\n                <DialogContent>\n                    <Grid container xs={12} direction=\"column\" className={clsx(globalStyles.mt1)}>\n                        <Grid className={clsx(globalStyles.mt1, globalStyles.mb2)}>\n                            <Typography variant=\"h6\" color=\"error\">\n                                Lưu ý (Đọc kỹ trước mỗi lần sử dụng)\n                            </Typography>\n                            <Typography>\n                                * Cả 2 sản phẩm có trở lại không (nếu có hãy thực hiện checkout không cần tách)\n                            </Typography>\n                            <Typography>* Sản phẩm cần tách đã thực sự có lại chưa (Kiểm tra cả size)</Typography>\n                            <Typography>* Sau khi tách hãy gọi đội chạy tool để chạy lại cho đơn hàng này</Typography>\n                            <Typography color=\"error\">\n                                * Sau khi tách đơn không thể trở lại ban đầu,vui lòng cân nhắc khi sử dụng\n                            </Typography>\n                        </Grid>\n                        <Grid>\n                            <FormControl>\n                                <FormLabel>Chọn sản phẩm cần tách</FormLabel>\n                                <RadioGroup\n                                    value={JSON.stringify(state.productSelected)}\n                                    onChange={(e, value) => {\n                                        if (value) {\n                                            setState({\n                                                ...state,\n                                                productSelected: JSON.parse(value),\n                                            });\n                                        }\n                                    }}\n                                >\n                                    {state.flatItemProductOrder.map((item) => {\n                                        return (\n                                            <FormControlLabel\n                                                value={JSON.stringify(item)}\n                                                control={<Radio />}\n                                                label={`${item.productId} - Size: ${item.size}`}\n                                            />\n                                        );\n                                    })}\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                        <Grid>\n                            {!state.orderWillSplitTo && (\n                                <Grid>\n                                    <Typography>Không tìm thấy order đủ điều kiện để merge vào</Typography>\n                                </Grid>\n                            )}\n                            {state.orderWillSplitTo && (\n                                <Grid className={clsx(globalStyles.pt1, globalStyles.pb1)}>\n                                    <Typography color=\"secondary\">\n                                        Hệ thống sẽ tách tới : {state.orderWillSplitTo.email}\n                                    </Typography>\n                                    <Typography variant=\"caption\">(Nếu chọn chuyển sang order khác)</Typography>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <Grid className={clsx(globalStyles.ml2, globalStyles.mr2)}>\n                    <DialogActions>\n                        <Grid item container xs={12} justify={'space-between'}>\n                            <Grid item container xs={5} justify={'center'} alignItems={'center'}>\n                                <Button\n                                    startIcon={<CloseIcon />}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    onClick={() => {\n                                        handleClickSplitNewOrder();\n                                    }}\n                                >\n                                    Tạo mới một order\n                                </Button>\n                            </Grid>\n                            <Grid item container xs={5} justify={'center'} alignItems={'center'}>\n                                <Button\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    disabled={!state.orderWillSplitTo}\n                                    fullWidth\n                                    startIcon={<SaveIcon />}\n                                    type={'submit'}\n                                    onClick={() => {\n                                        handleClickSplitWithMergeOrder();\n                                    }}\n                                    color=\"primary\"\n                                >\n                                    Tách sang order khác\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </DialogActions>\n                </Grid>\n            </Grid>\n        </Dialog>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Avatar, Box, Button, ClickAwayListener, Grid, makeStyles, MenuItem, Select, Tooltip, Typography, Zoom } from '@material-ui/core';\nimport TextField from '../../component/common/TextFiled';\nimport ListGrid from '../../component/common/ListGrid';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { useCrudHook } from '../../hook/useCrudHook';\nimport { Alert, Pagination } from '@material-ui/lab';\nimport { useParams } from 'react-router-dom';\nimport { orderTrackingController, userHmController } from 'src/controller';\nimport theme from 'src/theme/MuiTheme';\nimport { DataFirebaseHm, OrderTracking, ProductOrder } from 'src/afi-manager-base-model/model/OrderTracking';\nimport ProgressHmItemList from 'src/component/AutoOrderHm/ProgressHmItemList';\nimport PopupAddOrderId from 'src/component/AutoOrderHm/PopupEditProgressAutoOrder';\nimport { ListFilter } from 'luong-base-model/lib';\nimport { mathCeilWithRound } from 'src/helper/NumberUtils';\nimport { IconButton } from '@material-ui/core';\nimport { IoCopyOutline } from 'react-icons/io5';\nimport { dispatch } from '../../rematch/store';\nimport { calcBuyPriceOrder, countBoughtProduct, countProduct } from 'src/helper/CalculatorHmPrice';\nimport _ from 'lodash';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport { addAddress, checkoutLoopAle } from 'src/constants/IMacros';\nimport PopupSplitOrder from 'src/component/AutoOrderHm/PopupSplitOrder';\nimport { handleWithPopupHook } from 'src/hook/HandleWithPopupHook';\nimport { aleFirebaseConfig } from 'src/constants/AleFirebaseConfig';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { isCorrectCode, isDangerousPrice } from 'src/helper/CheckBestOptionForOrder';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    statuses: {\n        '& p': {\n            padding: 10,\n            paddingTop: 5,\n            paddingBottom: 5,\n        },\n    },\n    giftCardForm: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 200px',\n        alignItems: \"center\",\n        gridGap: 16,\n        '& .MuiFormControl-fullWidth': {\n            marginTop: 16,\n        },\n        '& .MuiButton-root': {\n            marginTop: 16,\n        }\n    },\n    popperTootip: {\n        pointerEvents: 'auto'\n    },\n    tooltipPlacementBottom: {\n        margin: '5px 0'\n    },\n    tooltip: {\n        backgroundColor: theme.palette.primary.main\n    },\n    icon: {\n        position: \"fixed\",\n        bottom: 80,\n        right: 80,\n        cursor: \"pointer\"\n    },\n    notify: {\n        backgroundColor: \"rgb(252, 239, 238)\",\n        padding: \"16px 16px\",\n        borderEadius: \"4px\",\n        color: \"red\"\n    }\n}))\n\nexport enum OrderStatus {\n    none = 'none',\n    initial = 'initial',\n    created = 'created',\n    addedToCard = 'addedToCard',\n    done = 'done',\n    error = 'error',\n    errorPrice = 'errPrice'\n}\nfunction ProgressAutoOrder(props: Props) {\n    const { userHmId } = useParams<{ userHmId: string }>();\n    const [userHm, setUserHm] = useState<UserHm>({} as UserHm);\n    const [isConfirmed, setIsConfirmed] = useState(false)\n    const [selectedStatus, setSelectedStatus] = useState<OrderStatus>(OrderStatus.none);\n    const [isOpenNote, setIsOpenNote] = useState(false)\n    const [giftCard, setGiftCard] = useState<Giftcard>({\n        serialNumber: localStorage.getItem('serialNumber') || '',\n        pin: localStorage.getItem('pin') || '',\n    });\n\n    const [state, setState] = useState<{ isListening: boolean }>({\n        isListening: false,\n    });\n\n    const handleWithPopupSplit = handleWithPopupHook<OrderTracking>({});\n\n    const crudTrackingHM = useCrudHook<OrderTracking, ListFilter<OrderTracking>>({\n        controller: orderTrackingController,\n        listController: orderTrackingController.listForProgress,\n        initQuery: {\n            searchFields: ['orderId', 'trackingId', 'customerName', 'email'],\n            sort: ['totalPrice', 'email'],\n            pageSize: 1000,\n            filter: {\n                userHMId: userHmId,\n            },\n        },\n        onAfterQuery: () => {\n            if (state.isListening == false) {\n                onListeningNotication();\n            }\n        },\n    });\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n\n\n    const onListeningNotication = () => {\n        var getDos = aleFirebaseConfig.firestore().collection('notication_order_update').doc(userHmId.toString());\n        console.log({\n            userHmId,\n        });\n        getDos.onSnapshot(\n            {\n                includeMetadataChanges: true,\n            },\n            function (doc) {\n                setState({\n                    ...state,\n                    isListening: true,\n                });\n                if (doc.data()) {\n                    const dataFromFirbase: DataFirebaseHm | undefined = doc.data();\n                    const checkItem = crudTrackingHM.pagingList.rows?.find((item) => {\n                        return item.orderId == dataFromFirbase?.orderId;\n                    });\n\n                    if (!checkItem) {\n                        dispatch.notification.success(\n                            `Cập nhật orderId thành công ${dataFromFirbase?.orderId} - ${dataFromFirbase?.email}`,\n                        );\n                    }\n                    crudTrackingHM.onRefreshList();\n                }\n            },\n        );\n    };\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        userHmController.list({ filter: { id: userHmId } }).then((paging) => {\n            if (paging && paging.rows && paging.rows.length > 0) {\n                setUserHm(paging.rows[0]);\n            }\n        });\n    }, []);\n\n    // useEffect(() => {\n    //     onChagngeGiftCard(giftCard);\n    // }, [giftCard]);\n\n    const filterByStatus = (rows: OrderTracking[]): OrderTracking[] => {\n        return rows?.filter((r) => {\n            let isValid = false;\n            switch (selectedStatus) {\n                case OrderStatus.errorPrice:\n                    isValid = (!r.dataFirebase || (r.dataFirebase?.total && (Number(r.dataFirebase?.total || 0) - calcBuyPriceOrder(r.productOrder || [])) <= 0.1)) ? false : true\n                    if (userHm.extraInfor?.codeOff == \"DEALMIX\" && isDangerousPrice(r.totalPrice || 0, userHm))\n                        isValid = true\n                    break;\n                case OrderStatus.done:\n                    isValid = r.orderId != null && r.orderId.length > 0;\n                    break;\n                case OrderStatus.error:\n                    isValid = r.errorDesc != null && r.errorDesc.length > 0;\n                    break;\n                case OrderStatus.addedToCard:\n                    isValid =\n                        (r.orderId == null || r.orderId.length === 0) &&\n                            (r.errorDesc == null || r.errorDesc.length === 0) &&\n                            r.isOrder\n                            ? r.isOrder\n                            : false;\n                    break;\n                case OrderStatus.created:\n                    isValid =\n                        (r.orderId == null || r.orderId.length === 0) &&\n                            (r.errorDesc == null || r.errorDesc.length === 0) &&\n                            (r.isOrder == null || r.isOrder === false) &&\n                            r.isRegister\n                            ? r.isRegister\n                            : false;\n                    break;\n                case OrderStatus.initial:\n                    isValid =\n                        (r.orderId == null || r.orderId.length === 0) &&\n                            (r.errorDesc == null || r.errorDesc.length === 0) &&\n                            (r.isOrder == null || r.isOrder === false) &&\n                            (r.isRegister == null || r.isRegister === false)\n                            ? true\n                            : false;\n                    break;\n                default:\n                    isValid = true;\n                    break;\n            }\n            return isValid;\n        });\n    };\n    const hasWrongBuyPrice = (rows: OrderTracking[]) => {\n        return rows?.filter((r) => {\n            let isValid = false;\n            isValid = (!r.dataFirebase || (r.dataFirebase?.total && (Number(r.dataFirebase?.total || 0) - calcBuyPriceOrder(r.productOrder || [])) <= 0.1)) ? false : true\n            if (userHm.extraInfor?.codeOff == \"DEALMIX\" && isDangerousPrice(r.totalPrice || 0, userHm))\n                isValid = true\n            return isValid\n        }).length > 0 ? true : false\n    }\n    const renderOrderStatusSummary = () => {\n        return (\n            <Grid container className={classes.statuses} justify=\"center\">\n                <Typography>Tổng: {crudTrackingHM.pagingList?.rows?.length}</Typography>\n                <Typography>\n                    Đã tạo tài khoản: {crudTrackingHM.pagingList?.rows?.filter((i) => i.isRegister).length}\n                </Typography>\n                <Typography>\n                    Đã thêm vào giỏ hàng: {crudTrackingHM.pagingList?.rows?.filter((i) => i.isOrder).length}\n                </Typography>\n                <Typography>Hoàn thành: {crudTrackingHM.pagingList?.rows?.filter((i) => i.orderId).length}</Typography>\n                <Typography>\n                    Lỗi: {crudTrackingHM.pagingList?.rows?.filter((i) => i.errorDesc).length}\n                </Typography>\n            </Grid>\n        );\n    };\n\n    const renderPaymentStatusSummary = () => {\n        return (\n            <Grid container className={classes.statuses} justify=\"center\">\n                <Typography>\n                    Tổng tiền:{' '}\n                    {renderComparedData(\"amount\").data}\n                    {renderComparedData(\"amount\").difference > 0.1 &&\n                        <span style={{ color: theme.palette.error.main }}>{' '} (Lệch: {renderComparedData(\"amount\").difference})</span>\n                    }\n                </Typography>\n\n                <Typography>Tổng món: {' '}\n                    {renderComparedData(\"quantity\").data}\n                    {renderComparedData(\"quantity\").difference > 0.1 &&\n                        <span style={{ color: theme.palette.error.main }}>{' '}(Lệch: {renderComparedData(\"quantity\").difference})</span>\n                    }</Typography>\n\n                <Typography>\n                    Tổng tiền checkout:{' '}\n                    {mathCeilWithRound(\n                        crudTrackingHM.pagingList?.rows\n                            ?.filter((i) => i.orderId != null && i.orderId.length > 0)\n                            .map((r) => r.totalPrice || 0)\n                            .reduce((price, total) => (total += price), 0) || 0,\n                        2,\n                    )}\n                </Typography>\n\n                <Typography>{`Tổng món đã mua: ${countBoughtProduct(crudTrackingHM.pagingList?.rows || [])}`} <b style={{ color: \"red\" }}>{`- còn ${crudTrackingHM.pagingList?.rows?.filter(r => (!r.errorDesc && !r.orderId)).length}`}</b></Typography>\n                <IconButton\n                    color=\"secondary\"\n                    onClick={() => {\n                        let exportdata = {\n                            buyItems: `Tổng tiền checkout: ${mathCeilWithRound(\n                                crudTrackingHM.pagingList?.rows\n                                    ?.filter((i) => i.orderId != null && i.orderId.length > 0)\n                                    .map((r) => r.totalPrice || 0)\n                                    .reduce((price, total) => (total += price), 0) || 0,\n                                2,\n                            )} - Tổng món đã mua: ${countBoughtProduct(crudTrackingHM.pagingList?.rows || [])}`,\n                            err: `Lỗi: ${countProduct(crudTrackingHM.pagingList?.rows || []) -\n                                countBoughtProduct(crudTrackingHM.pagingList?.rows || []) +\n                                renderComparedData(\"quantity\").difference\n                                } món : ${crudTrackingHM.pagingList?.rows\n                                    ?.filter((i) => i.errorDesc != null && i.errorDesc.length > 0)\n                                    .map(\n                                        (r) =>\n                                            `[${r.productOrder?.map((p) => p.productId).join(',')}]: ${r.errorDesc\n                                            }`,\n                                    )\n                                || ''\n                                }`,\n                            imgBag: `${userHm.imgScreenShot}`\n                        }\n                        navigator.clipboard.writeText(`${exportdata.buyItems}\\t${exportdata.err}\\t${exportdata.imgBag}`);\n                        dispatch.notification.success('Đã copy thông tin checkout');\n                    }}\n                    size=\"small\"\n                >\n                    <IoCopyOutline />\n                </IconButton>\n            </Grid>\n        );\n    };\n    const renderWarningPrice = () => {\n        let gt20 = crudTrackingHM.pagingList?.rows?.filter(i => (i.totalPrice && i.totalPrice > 20)).length\n        let gt15 = crudTrackingHM.pagingList?.rows?.filter(i => (i.totalPrice && i.totalPrice > 15)).length\n        return (\n            gt15 ?\n                <Typography style={{ display: \"inline\", marginLeft: \"5px\" }} color=\"error\">\n                    {' (Có '}\n                    {gt20 && gt20 > 0 ? `${gt20} món giá >20  & ` : \"\"}\n                    {gt15 && gt15 > 0 ? `${gt15} món giá >15` : \"\"}\n                    {')'}\n                </Typography>\n                : \"\"\n        )\n    }\n    const renderPriceNote = () => {\n        return (\n            <Box mr={1}>\n                <Tooltip title={\n                    <ClickAwayListener onClickAway={() => setIsOpenNote(false)}>\n                        <Box margin=\"10px 5px\" style={{ display: \"grid\", gridRowGap: \"10px\" }}>\n                            {'* Mai Linh, Elisa, Amy: Nếu giá SP > 20 => KHÔNG MUA'}\n                            <br />\n                            <br />\n                            {'* PLE - Deal 1M: giá >10 hoặc có SP khác nhau => Báo Leader NGAY & K CHECKOUT CẢ ĐƠN'}\n                            <br />\n                            {'* PLE - OFF40: giá >20 => Báo Leader NGAY & K CHECKOUT CẢ ĐƠN'}\n                            <br />\n                            {'* PLE - còn lại: giá >15 => Báo Leader NGAY & K CHECKOUT món đó'}\n                            <Button variant=\"contained\" size=\"small\" onClick={() => setIsOpenNote(false)}>OK, Không check sai đâu ^^</Button>\n                        </Box>\n                    </ClickAwayListener>\n                }\n                    classes={{ popper: classes.popperTootip, tooltipPlacementBottom: classes.tooltipPlacementBottom, tooltip: classes.tooltip }}\n                    open={isOpenNote}\n                >\n                    <HelpIcon color=\"primary\" fontSize=\"small\" onClick={() => setIsOpenNote(!isOpenNote)}></HelpIcon>\n                </Tooltip>\n            </Box>\n        )\n    }\n    const renderScrollIcon = () => {\n        return (\n            <Avatar variant=\"square\" className={classes.icon} onClick={() => window.scrollTo(0, 0)}>\n                <ExpandLessIcon></ExpandLessIcon>\n            </Avatar>\n        )\n    }\n    const handleClickSplitOrder = (item: OrderTracking) => {\n        handleWithPopupSplit.handleShowPopup(item);\n    };\n\n    const onSplitWithMerge = (params: {\n        orderTrackingOld: OrderTracking;\n        orderTrackingNew: OrderTracking;\n        productOrder: ProductOrder;\n    }) => {\n        orderTrackingController.splitOrderWithMerge(params).then((res) => {\n            crudTrackingHM.onRefreshList();\n            handleWithPopupSplit.handleClosePopup();\n        });\n    };\n\n    const onSplitOrderWithNew = (params: { orderTrackingOld: OrderTracking; productOrder: ProductOrder }) => {\n        orderTrackingController.splitOrderWithNew(params).then((res) => {\n            crudTrackingHM.onRefreshList();\n            handleWithPopupSplit.handleClosePopup();\n        });\n    };\n    const renderComparedData = (type: \"amount\" | \"quantity\") => {\n        let createdData = { data: 0, difference: 0 }\n        switch (type) {\n            case \"amount\":\n                let amount = mathCeilWithRound(\n                    crudTrackingHM.pagingList?.rows\n                        ?.map((r) => r.totalPrice || 0)\n                        .reduce((price, total) => (total += price), 0) || 0,\n                    2,\n                )\n                createdData = {\n                    data: amount,\n                    difference: mathCeilWithRound(Math.abs(amount - (userHm?.extraInfor?.verifiedAmount || amount)), 2)\n                };\n                break;\n            case \"quantity\":\n                let quantity = countProduct(crudTrackingHM.pagingList?.rows || [])\n                createdData = {\n                    data: quantity,\n                    difference: mathCeilWithRound(Math.abs(quantity - (userHm?.extraInfor?.verifiedQuantity || quantity)), 2)\n                };\n                break;\n            default: break\n        }\n        return createdData\n    }\n\n    return (crudTrackingHM.pagingList?.rows?.length || 0) > 0 ? (\n        <Grid\n            container\n            style={{\n                minHeight: '100vh',\n                background: 'white',\n                padding: theme.spacing(1),\n            }}\n        >\n            {renderScrollIcon()}\n            <PopupSplitOrder\n                isDisplay={handleWithPopupSplit.isDisplayPopup}\n                item={handleWithPopupSplit.itemSelected}\n                onCancel={handleWithPopupSplit.handleClosePopup}\n                orderTrackings={crudTrackingHM.pagingList?.rows || []}\n                onSplitWithMerge={onSplitWithMerge}\n                onSplitWithNew={onSplitOrderWithNew}\n            />\n            <PopupAddOrderId\n                isReadyBuyAll={crudTrackingHM.pagingList?.rows?.findIndex(i => !i.isOrder) === -1}\n                isDisplay={crudTrackingHM.isShowPopup}\n                item={crudTrackingHM.itemSelected}\n                onCancel={crudTrackingHM.onCancelPopup}\n                onEdit={crudTrackingHM.onSave}\n            />\n            <Grid container justify=\"center\" className={clsx(globalStyle.pp2)}>\n                <Grid>\n                    <Grid container justify=\"center\">\n                        <Typography align=\"center\" variant=\"h4\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                            Chi tiết đơn hàng\n                            {renderWarningPrice()}\n                            <IconButton\n                                onClick={() => {\n                                    navigator.clipboard.writeText(\n                                        addAddress(userHm.emailCheckout || 'email', userHm.password || '123456a@', {\n                                            lineAddress: userHm.address || '',\n                                            flatHouse: userHm.address2 || '',\n                                            town: userHm.town || '',\n                                            postCode: userHm.postcode || '',\n                                            firstName: userHm.firstName || '',\n                                            lastName: userHm.lastName || '',\n                                            phonenumber: userHm.phone || '',\n                                        }),\n                                    );\n                                    dispatch.notification.success('Copy to clipboard successfully!');\n                                }}\n                                size=\"small\"\n                            >\n                                <IoCopyOutline />\n                            </IconButton>\n                        </Typography>\n                        {renderOrderStatusSummary()}\n                        {renderPaymentStatusSummary()}\n                    </Grid>\n                    {crudTrackingHM.pagingList?.rows && hasWrongBuyPrice(crudTrackingHM.pagingList?.rows)\n                        &&\n                        <Grid container className={classes.notify} alignItems=\"center\" justifyContent=\"center\">\n                            <Typography variant=\"h6\" align=\"center\"> Có món mua sai giá!!!</Typography>\n                            <Button style={{ marginLeft: 10 }} onClick={() => setSelectedStatus(OrderStatus.errorPrice)}>\n                                Xem ngay!</Button>\n                        </Grid>\n                    }\n\n                    {/* Todo: Confirm before checkout in case of wrong price */}\n                    {Boolean(crudTrackingHM.pagingList?.rows?.findIndex(r => r.orderId) == -1\n                        && !isConfirmed) &&\n                        Boolean(!isCorrectCode(userHm, crudTrackingHM.pagingList?.rows || [])\n                            || renderComparedData(\"amount\").difference > 0.1\n                            || renderComparedData(\"quantity\").difference > 0.1)\n                        ?\n                        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n                            <img src=\"https://i.pinimg.com/originals/ee/84/8f/ee848f864ebdf8d48351e5b8b8ba50bd.png\" />\n                            <Typography variant=\"h5\" className={globalStyle.mt2}>\n                                {Boolean(!isCorrectCode(userHm, crudTrackingHM.pagingList?.rows || [])) &&\n                                    \"Mã giảm không phù hợp :((\"}\n                            </Typography>\n                            <Typography variant=\"h5\" className={globalStyle.mt2}>\n                                {Boolean(renderComparedData(\"amount\").difference > 0.1 || renderComparedData(\"quantity\").difference > 0.1) && \"Tiền bị lệch!\"}\n                            </Typography>\n\n                            <Typography variant=\"h5\" className={clsx(globalStyle.mt2, globalStyle.mb2)}>\n                                Vui lòng xác nhận lại với kho trước khi mua hàng!\n                            </Typography>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={() => setIsConfirmed(true)}>Đã xác nhận!</Button>\n                        </Grid>\n                        : (\n                            <>\n                                <Grid>\n                                    <Select\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        value={selectedStatus}\n                                        className={globalStyle.mt3}\n                                        onChange={(e) => {\n                                            setSelectedStatus(e.target.value as OrderStatus);\n                                        }}\n                                    >\n                                        <MenuItem value={OrderStatus.none}>Tất cả</MenuItem>\n                                        <MenuItem value={OrderStatus.initial}>Khởi tạo</MenuItem>\n                                        <MenuItem value={OrderStatus.created}>Đã tạo tài khoản</MenuItem>\n                                        <MenuItem value={OrderStatus.addedToCard}>Đã thêm vào giỏ hàng</MenuItem>\n                                        <MenuItem value={OrderStatus.done}>Đã thanh toán</MenuItem>\n                                        <MenuItem value={OrderStatus.error}>Lỗi</MenuItem>\n                                        <MenuItem value={OrderStatus.errorPrice}>Lỗi sai giá</MenuItem>\n                                    </Select>\n                                </Grid>\n                                <div className={classes.giftCardForm}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        label=\"Serial number\"\n                                        size=\"medium\"\n                                        value={giftCard.serialNumber}\n                                        onChange={(e) => {\n                                            setGiftCard({\n                                                ...giftCard,\n                                                serialNumber: e.target.value,\n                                            });\n                                            localStorage.setItem('serialNumber', e.target.value);\n                                        }}\n                                    />\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        label=\"Pin\"\n                                        size=\"medium\"\n                                        value={giftCard.pin}\n                                        onChange={(e) => {\n                                            setGiftCard({\n                                                ...giftCard,\n                                                pin: e.target.value,\n                                            });\n                                            localStorage.setItem('pin', e.target.value);\n                                        }}\n                                    />\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        onClick={() => {\n                                            navigator.clipboard.writeText(\n                                                `${checkoutLoopAle(userHm.emailCheckout || \"\", userHm.password || \"\", giftCard.serialNumber, giftCard.pin)}`\n                                            );\n                                            dispatch.notification.success('Copy code thành công!');\n                                        }}\n                                        disabled={(giftCard.serialNumber.length == 0 || giftCard.pin.length == 0)}\n                                        size=\"small\"\n                                    >\n                                        <IoCopyOutline style={{ marginRight: 5 }} /> Code checkout loop\n                                    </Button>\n                                </div>\n\n                                <Grid container className={clsx(globalStyle.pt2, globalStyle.pb2)}>\n                                    <ListGrid minWidthItem={'450px'} gridGap={20}>\n                                        {filterByStatus(crudTrackingHM.pagingList?.rows || []).map((item, index) => (\n                                            <Zoom in={true} timeout={index * 50}>\n                                                <Grid>\n                                                    <ProgressHmItemList\n                                                        giftCard={giftCard}\n                                                        onSplitOrder={handleClickSplitOrder}\n                                                        item={item}\n                                                        updateOrderId={crudTrackingHM.onShowPopup}\n                                                        userHm={{ ...userHm }}\n                                                    />\n                                                </Grid>\n                                            </Zoom>\n                                        ))}\n                                    </ListGrid>\n                                </Grid>\n                                <Grid container justify=\"center\" className={clsx(globalStyle.pt2, globalStyle.pb2)}>\n                                    <Pagination\n                                        count={crudTrackingHM.pagingList.totalPages || 1}\n                                        page={crudTrackingHM.pagingList.page || 1}\n                                        variant=\"outlined\"\n                                        shape=\"rounded\"\n                                        onChange={(e, page) => {\n                                            crudTrackingHM.setQuery({\n                                                ...crudTrackingHM.query,\n                                                page: page,\n                                            });\n                                        }}\n                                        color=\"primary\"\n                                    />\n                                </Grid>\n                            </>)}\n                </Grid>\n            </Grid>\n        </Grid>\n    ) : (\n        <Grid container justify=\"center\" style={{ height: \"100vh\" }}>\n            <Typography variant=\"h5\">Tài khoản này chưa tiến hành lấy order hoặc order bị trống</Typography>\n        </Grid>\n    );\n}\n\nexport interface Giftcard {\n    serialNumber: string;\n    pin: string;\n}\n\nexport default React.memo(ProgressAutoOrder);\n","import firebaseApp from 'firebase';\n\nconst firebaseConfigData = {\n    apiKey: \"AIzaSyBqJ8OtdU1q2wYkMYVV3JxaIbZ-bHvCJes\",\n    authDomain: \"hm-extension.firebaseapp.com\",\n    databaseURL: \"https://hm-extension-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"hm-extension\",\n    storageBucket: \"hm-extension.appspot.com\",\n    messagingSenderId: \"818404420837\",\n    appId: \"1:818404420837:web:ff0e2d62362cff6680380c\",\n    measurementId: \"G-YQ3ECSP6RP\"\n};\n\nexport const aleFirebaseConfig = firebaseApp.initializeApp(firebaseConfigData,'ale-hm-extension');\n","import { Box, TextField } from '@material-ui/core';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap';\n// import \"../../styles/bootstrap.css\";\n\nexport default function DatePicker(props: Props) {\n    moment.defaultFormat = 'DD/MM/YYYY';\n    const [date, setDate] = useState<string>(\n        `${moment(props.initStartDate || new Date()).format('DD/MM/YYYY')} - ${moment(\n            props.initEndDate || new Date(),\n        ).format('DD/MM/YYYY')}`,\n    );\n\n    const getDefaultString = () => {};\n\n    useEffect(() => {\n        setDate(\n            `${moment(props.initStartDate || new Date()).format('DD/MM/YYYY')} - ${moment(\n                props.initEndDate || new Date(),\n            ).format('DD/MM/YYYY')}`,\n        );\n        console.log(props);\n    }, [props.initEndDate, props.initStartDate]);\n\n    return (\n        <Box>\n            <DateRangePicker\n                onApply={(e, picker) => {\n                    // setDate(\n                    // \tmoment(picker.startDate._d).format(\"L\") +\n                    // \t\t\"  -  \" +\n                    // \t\tmoment(picker.endDate._d).format(\"L\")\n                    // );\n                    setDate(\n                        String(picker.chosenLabel).toLowerCase() === 'today' ||\n                            String(picker.chosenLabel).toLowerCase() === 'yesterday'\n                            ? picker.chosenLabel + `:   ${moment(picker.startDate).format()}`\n                            : String(picker.chosenLabel).toLowerCase() === 'all'\n                            ? picker.chosenLabel\n                            : picker.chosenLabel +\n                              ':   ' +\n                              moment(picker.startDate).format() +\n                              ' - ' +\n                              moment(picker.endDate).format(),\n                    );\n                    props.onChangeDateRange({\n                        startDate: picker.chosenLabel === 'All' ? undefined : picker.startDate._d,\n                        endDate: picker.chosenLabel === 'All' ? undefined : picker.endDate._d,\n                    });\n                }}\n                initialSettings={{\n                    startDate: moment(props.initStartDate || new Date()),\n                    endDate: moment(props.initEndDate || new Date()),\n                    ranges: {\n                        Today: [moment(), moment()],\n                        Yesterday: [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n                        'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n                        'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n                        'This Month': [moment().startOf('month'), moment().endOf('month')],\n                        'Last Month': [\n                            moment().subtract(1, 'month').startOf('month'),\n                            moment().subtract(1, 'month').endOf('month'),\n                        ],\n                        // All: [moment().startOf('month'), moment().startOf('month')],\n                    },\n                    opens: 'left',\n                    locale: {\n                        format: 'DD/MM/YYYY',\n                    },\n                    // showCustomRangeLabel: false,\n                    // alwaysShowCalendars: true,\n                    // locale: {\n                    // \tcustomRangeLabel: \"df\",\n                    // }\n                }}\n            >\n                <TextField\n                    // type=\"date\"\n                    label={props.label}\n                    InputLabelProps={{ shrink: true }}\n                    variant=\"outlined\"\n                    value={date}\n                    style={{ minWidth: '315px' }}\n                    // onClickCapture={() => setOpen(!open)}\n                ></TextField>\n            </DateRangePicker>\n            {/* <DateRangePicker\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\ttoggle={() => setOpen(!open)}\n\t\t\t\t\t\t\tonChange={handleChangeDateRange}\n\t\t\t\t\t\t\tchildren\n\t\t\t\t\t\t/> */}\n        </Box>\n    );\n}\n\ntype Props = {\n    onChangeDateRange(dateRange: DateRange): void;\n    label: string;\n    isHiddenAll?: string;\n    initStartDate?: Date;\n    initEndDate?: Date;\n};\n\nexport interface DateRange {\n    startDate: Date | undefined;\n    endDate: Date | undefined;\n}\n","import {\n    Grid,\n    makeStyles,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport clsx from 'clsx';\nimport { Parser } from 'json2csv';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { ExportOrderTracking, PropsExportData } from 'src/afi-manager-base-model/controllers/IOrderTrackingController';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport DatePicker from 'src/component/common/DatePicker';\nimport SelectBox from 'src/component/common/SelectBox';\nimport { orderTrackingController, userHmController } from 'src/controller';\nimport theme from 'src/theme/MuiTheme';\nimport Button from '../../component/common/Button';\nimport TextField from '../../component/common/TextFiled';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\n\nconst fileDownload = require('js-file-download');\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100vh',\n        background: 'white',\n        paddingTop: theme.spacing(2),\n    },\n    rootInputPass: {\n        width: '100%',\n        height: '100vh',\n        background: 'white',\n    },\n    rootOption: {\n        padding: theme.spacing(3),\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(2),\n    },\n    container: {\n        maxHeight: 640,\n    },\n    styleLinkToProduct: {\n        color: theme.palette.primary.main,\n    },\n}));\ntype State = {\n    userHm: Map<string, UserHm>;\n    optionFilter: PropsExportData;\n    dataExport: ExportOrderTracking[];\n};\n\ninterface Column {\n    id: keyof ExportOrderTracking;\n    label: string;\n    minWidth?: number;\n    align?: 'right' | 'left' | 'center';\n    format?: (value: number) => string;\n}\n\nconst columns: Column[] = [\n    { id: 'mailParent', label: 'Email Partent', align: 'left' },\n    { id: 'emailLogin', label: 'Email Login' },\n    { id: 'passwordLogin', label: 'Password Login' },\n    {\n        id: 'totalPrice',\n        label: 'Total Price',\n    },\n    {\n        id: 'orderId',\n        label: 'Order number',\n    },\n    {\n        id: 'isOrder',\n        label: 'Is order',\n    },\n    {\n        id: 'isRegister',\n        label: 'Is regieter',\n    },\n    {\n        id: 'priceBuy',\n        label: 'Price Buy',\n    },\n    {\n        id: 'errorDesc',\n        label: 'Error',\n    },\n];\n\nfunction ExportExcel(props: Props) {\n    const { userHmId } = useParams<{ userHmId: string }>();\n    const history = useHistory();\n\n    const [security, setSecurity] = useState<{\n        password: string;\n        isComfirm: boolean;\n    }>({\n        isComfirm: true,\n        password: '',\n    });\n\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState<State>({\n        userHm: new Map(),\n        optionFilter: {\n            from: new Date(),\n            to: new Date(),\n            isError: undefined,\n            isOrder: undefined,\n            isRegiter: undefined,\n            userHmId: [],\n        },\n        dataExport: [],\n    });\n\n    const onLogin = () => {\n        if (security.password == 'minhhoang123') {\n            setSecurity({\n                password: '',\n                isComfirm: true,\n            });\n        }\n    };\n    useEffect(() => {\n        userHmController.find({}).then((res) => {\n            setState({\n                ...state,\n                userHm: new Map<string, UserHm>(res.map((item) => [item.id || '', item])),\n            });\n        });\n        return () => {};\n    }, []);\n\n    const onChangeOrderOption = (value: boolean | 'null') => {\n        let statusOrder: any = value;\n        if (value == 'null') {\n            statusOrder = undefined;\n        }\n        setState({\n            ...state,\n            optionFilter: {\n                ...state.optionFilter,\n                isOrder: statusOrder,\n            },\n        });\n    };\n\n    const onChangeRegisterOption = (value: boolean | 'null') => {\n        let statusError: any = value;\n        if (value == 'null') {\n            statusError = undefined;\n        }\n        setState({\n            ...state,\n            optionFilter: {\n                ...state.optionFilter,\n                isRegiter: statusError,\n            },\n        });\n    };\n    const onChangeErrorOption = (value: boolean | 'null') => {\n        let statusError: any = value;\n        if (value == 'null') {\n            statusError = undefined;\n        }\n        setState({\n            ...state,\n            optionFilter: {\n                ...state.optionFilter,\n                isError: statusError,\n            },\n        });\n    };\n\n    const handleGetData = () => {\n        orderTrackingController\n            .exportData({\n                ...state.optionFilter,\n            })\n            .then((res) => {\n                setState({\n                    ...state,\n                    dataExport: res,\n                });\n            });\n    };\n\n    const exportExcel = () => {\n        const json2csvParser = new Parser({\n            fields: Object.keys(state.dataExport[0]),\n            header: true,\n        });\n        const csv = json2csvParser.parse(state.dataExport);\n        fileDownload(csv, `data-hm-${new Date().toString()}.csv`);\n    };\n\n    return security.isComfirm ? (\n        <Grid container className={classes.root}>\n            <Grid\n                style={{\n                    width: '100%',\n                }}\n            >\n                <Grid className={classes.rootOption} container justify=\"space-around\">\n                    <Grid className={clsx(globalStyle.pp2)}>\n                        <DatePicker\n                            onChangeDateRange={(date) => {\n                                setState({\n                                    ...state,\n                                    optionFilter: {\n                                        ...state.optionFilter,\n                                        from: date.startDate || new Date(0),\n                                        to: date.endDate || new Date(),\n                                    },\n                                });\n                            }}\n                            label={'Chọn ngày'}\n                        />\n                    </Grid>\n                    <Grid className={clsx(globalStyle.pp2)}>\n                        <Autocomplete\n                            options={[\n                                {\n                                    username: 'All',\n                                    id: 'all',\n                                },\n                            ].concat(Array.from(state.userHm.values()) as any)}\n                            getOptionLabel={(option) => option.username || ''}\n                            onChange={(e, value) => {\n                                if (!value || value.id == 'all') {\n                                    setState({\n                                        ...state,\n                                        optionFilter: {\n                                            ...state.optionFilter,\n                                            userHmId: [],\n                                        },\n                                    });\n                                } else {\n                                    setState({\n                                        ...state,\n                                        optionFilter: {\n                                            ...state.optionFilter,\n                                            userHmId: [value.id],\n                                        },\n                                    });\n                                }\n                            }}\n                            style={{ width: 300 }}\n                            renderInput={(params: any) => (\n                                <TextField {...params} label=\"Select user\" variant=\"outlined\" />\n                            )}\n                        />\n                    </Grid>\n                    <Grid className={clsx(globalStyle.pp2)}>\n                        <SelectBox\n                            variant=\"outlined\"\n                            value={state.optionFilter.isRegiter === undefined ? 'null' : state.optionFilter.isRegiter}\n                            data={[true, false, 'null']}\n                            label=\"Option Register\"\n                            style={{\n                                minWidth: 150,\n                            }}\n                            labelOption={(value) => {\n                                if (value === true) {\n                                    return 'Chỉ lấy order đã register';\n                                }\n                                if (value === false) {\n                                    return 'Chỉ lấy order chưa register';\n                                }\n                                return 'Tất cả';\n                            }}\n                            onChange={(e: any) => {\n                                onChangeRegisterOption(e);\n                            }}\n                            valueOption={(value) => value}\n                        />\n                    </Grid>\n                    <Grid className={clsx(globalStyle.pp2)}>\n                        <SelectBox\n                            style={{\n                                minWidth: 150,\n                            }}\n                            variant=\"outlined\"\n                            value={state.optionFilter.isOrder === undefined ? 'null' : state.optionFilter.isOrder}\n                            data={[true, false, 'null']}\n                            label=\"Option order\"\n                            labelOption={(value) => {\n                                if (value === true) {\n                                    return 'Chỉ lấy order rồi';\n                                }\n                                if (value === false) {\n                                    return 'Chỉ lấy order chưa order';\n                                }\n                                return 'Tất cả';\n                            }}\n                            onChange={(e: any) => onChangeOrderOption(e as any)}\n                            valueOption={(value) => value}\n                        />\n                    </Grid>\n\n                    <Grid className={clsx(globalStyle.pp2)}>\n                        <SelectBox\n                            style={{\n                                minWidth: 150,\n                            }}\n                            variant=\"outlined\"\n                            value={state.optionFilter.isError === undefined ? 'null' : state.optionFilter.isError}\n                            data={[true, false, 'null']}\n                            label=\"Option Error\"\n                            labelOption={(value) => {\n                                if (value === true) {\n                                    return 'Chỉ lấy order bị lỗi';\n                                }\n                                if (value === false) {\n                                    return 'Chỉ lấy order không lỗi';\n                                }\n                                return 'Tất cả';\n                            }}\n                            onChange={(e: any) => {\n                                onChangeErrorOption(e);\n                            }}\n                            valueOption={(value) => value}\n                        />\n                    </Grid>\n                    <Grid className={clsx(globalStyle.pp2)}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleGetData()}>\n                            Lấy dữ liệu\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid\n                    container\n                    justify=\"space-between\"\n                    className={globalStyle.mt2}\n                    alignContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid>\n                        <Typography color=\"primary\">Tổng : {state.dataExport.length}</Typography>\n                    </Grid>\n                    <Grid>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={exportExcel}\n                            disabled={state.dataExport.length == 0}\n                        >\n                            Export Excel\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid\n                    className={clsx(classes.rootOption, globalStyle.mt2)}\n                    container\n                    style={{\n                        width: '100%',\n                    }}\n                >\n                    <TableContainer className={classes.container}>\n                        <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                    {columns.map((column) => (\n                                        <TableCell\n                                            key={column.id}\n                                            align={column.align}\n                                            style={{ minWidth: column.minWidth }}\n                                        >\n                                            {column.label}\n                                        </TableCell>\n                                    ))}\n                                    <TableCell align={'center'}>Product 1</TableCell>\n                                    <TableCell align={'center'}>Product 2</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {state.dataExport.map((row) => {\n                                    return (\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1}>\n                                            {columns.map((column) => {\n                                                const value = row[column.id];\n                                                return (\n                                                    <TableCell key={column.id} align={column.align || 'center'}>\n                                                        {column.format && typeof value === 'number'\n                                                            ? column.format(value)\n                                                            : value?.toString()}\n                                                    </TableCell>\n                                                );\n                                            })}\n                                            <TableCell align={'center'}>\n                                                <a\n                                                    target=\"_blank\"\n                                                    className={classes.styleLinkToProduct}\n                                                    href={row.linkProduct1}\n                                                >\n                                                    <a\n                                                        target=\"_blank\"\n                                                        className={classes.styleLinkToProduct}\n                                                        href={row.linkProduct1}\n                                                    >\n                                                        <p>\n                                                            {row.productId1} <span>(SL:{row.quantityProduct1})</span>\n                                                        </p>\n                                                        <span style={{ color: theme.palette.error.main }}>\n                                                            £{row.priceProduct1}\n                                                        </span>\n                                                        <span style={{ color: theme.palette.warning.main }}>\n                                                            - size: {row.sizeProduct1}\n                                                        </span>\n                                                    </a>\n                                                </a>\n                                            </TableCell>\n                                            <TableCell align={'center'}>\n                                                {row.productId2 && (\n                                                    <a\n                                                        target=\"_blank\"\n                                                        className={classes.styleLinkToProduct}\n                                                        href={row.linkProduct2}\n                                                    >\n                                                        <p>\n                                                            {row.productId2} <span>(SL:{row.quantityProduct2})</span>{' '}\n                                                        </p>\n                                                        <span style={{ color: theme.palette.error.main }}>\n                                                            £{row.priceProduct2}\n                                                        </span>\n                                                        <span style={{ color: theme.palette.warning.main }}>\n                                                            - size: {row.sizeProduct2}\n                                                        </span>\n                                                    </a>\n                                                )}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Grid>\n        </Grid>\n    ) : (\n        <Grid container className={classes.rootInputPass} justify=\"center\" alignItems=\"center\">\n            <TextField\n                variant=\"outlined\"\n                label=\"Input password\"\n                value={security.password}\n                onChange={(e) => {\n                    setSecurity({\n                        ...security,\n                        password: e.target.value,\n                    });\n                }}\n            ></TextField>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={globalStyle.ml2}\n                size=\"medium\"\n                onClick={() => {\n                    onLogin();\n                }}\n            >\n                Login\n            </Button>\n        </Grid>\n    );\n}\n\nexport default React.memo(ExportExcel);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Grid,\n    IconButton,\n    makeStyles,\n    MenuItem,\n    Popover,\n    Popper,\n    Select,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport { Pagination } from '@material-ui/lab';\nimport _ from 'lodash';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { BsLayoutThreeColumns } from 'react-icons/bs';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiArrowUnsorted } from 'react-icons/ti';\nimport { createNonNullExpression } from 'typescript';\nimport { localStoryController } from '../../controller';\nimport { Paging, ListFilter, BaseModel } from 'luong-base-model';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport theme from '../../theme/MuiTheme';\n\nconst useStyle = makeStyles((theme) => ({\n    cell: {\n        flex: 1,\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignContent: 'center',\n        alignItems: 'center',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    buttonHeader: {\n        color: theme.palette.primary.main,\n        paddingLeft: 0,\n        alignItems: 'left',\n        display: 'flex',\n        fontSize: '1.1rem',\n        textTransform: 'none',\n        background: 'none',\n        '&:active': {\n            background: 'none',\n        },\n        '& *': {\n            background: 'none !important',\n        },\n        // borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    popupShowColumn: {\n        // background: theme.palette.background.paper,\n        border: `1px solid ${theme.palette.divider}`,\n        // borderRadius: theme.spacing(1),\n    },\n    frPaging: {\n        padding: theme.spacing(6),\n    },\n    headerNotSort: {\n        // color: theme.palette.primary.main,\n    },\n    textAutoHidden: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        wordBreak: 'break-word',\n        display: '-webkit-box',\n        WebkitBoxOrient: 'vertical',\n    },\n}));\nexport class ColumnTable<T extends { [key: string]: any }> {\n    id: keyof T = '';\n    label: string = '';\n    isDisplay?: boolean = true;\n    isSort?: boolean = false;\n    acceptSearch?: boolean = false;\n}\nexport type ColumnElement<T extends { [key: string]: any }> = {\n    [P in keyof T]: React.ReactElement | string | any;\n};\nexport type PropsTable<T> = {\n    id?: string;\n    column: ColumnTable<T>[];\n    isShowHighlightText?: boolean;\n    data: Paging<T & { action?: any }>;\n    onQuery: (query: ListFilter<T>) => void;\n    query: ListFilter<T>;\n    onChangeColumn?: (column: ColumnTable<T>[]) => void;\n    onCustomerCell?: (item: T) => ColumnElement<T>;\n    otherFilter?: React.ReactElement;\n    pageSize?: number[];\n};\nexport default function TableCrud<T extends BaseModel>(props: PropsTable<T>) {\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [datas, setData] = useState<any>(props.data.rows);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(Boolean(anchorEl) ? null : event.currentTarget);\n    };\n\n    const changeSort = (column: string) => {\n        column = column.toString();\n        let sort: string[] = (props.query.sort as []) || [];\n        const getColumnIndex: number = sort.findIndex((item) => _.snakeCase(item) === _.snakeCase(column));\n        if (getColumnIndex < 0) sort = [column];\n        else {\n            const getColumn: string = sort[getColumnIndex];\n            if (getColumn.startsWith('-')) {\n                sort.splice(getColumnIndex, 1);\n            } else {\n                sort[getColumnIndex] = `-${column}`;\n            }\n        }\n        props.onQuery({\n            ...props.query,\n            sort,\n        });\n    };\n\n    const onDisplayColumn = (column: string) => {\n        // const newColumns =\n        let columnDisplay: string[] = [];\n        props.column.map((item) => {\n            if (item.id === column) item.isDisplay = !item.isDisplay;\n            if (item.isDisplay) columnDisplay.push(item.id as string);\n            return item;\n        });\n        const searchField = changeSearchFiledByChangeColumn();\n        props.onQuery({ ...props.query, searchFields: searchField });\n        if (props.id) {\n            localStoryController.setSettingColumnTable({\n                idTable: props.id,\n                column: columnDisplay,\n            });\n        }\n        props.onChangeColumn && props.onChangeColumn(props.column);\n    };\n\n    const open = Boolean(anchorEl);\n\n    const componentSort = (column: string) => {\n        let sort: string[] = (props.query.sort as []) || [];\n        const getColumnIndex: number = sort.findIndex((item) => _.snakeCase(item) === _.snakeCase(column));\n        if (getColumnIndex < 0) return <TiArrowUnsorted />;\n        else {\n            const getColumn: string = sort[getColumnIndex];\n            if (getColumn.startsWith('-')) {\n                return <TiArrowSortedDown />;\n            } else {\n                return <TiArrowSortedUp />;\n            }\n        }\n    };\n\n    const onQueryChanged = useCallback(\n        _.debounce((value: string) => {\n            const searchField = changeSearchFiledByChangeColumn();\n            props.onQuery({\n                ...props.query,\n                search: value,\n                page: 1,\n                searchFields: searchField,\n            });\n        }, 400),\n        [],\n    );\n\n    useEffect(() => {\n        let getData: any[] = props.data.rows || [];\n        if (props.onCustomerCell) {\n            getData = getData.map((item) => {\n                let newItem = _.cloneDeep(item);\n                if (props.onCustomerCell) {\n                    newItem = props.onCustomerCell(newItem);\n                }\n                let newItemClone = _.cloneDeep(newItem);\n                // eslint-disable-next-line array-callback-return\n                props.column.map((key) => {\n                    _.set(\n                        newItemClone,\n                        key.id,\n                        <Typography className={classes.textAutoHidden}>{_.get(newItemClone, key.id)}</Typography>,\n                    );\n                });\n                return newItem;\n            });\n        }\n        setData(getData);\n    }, [props]);\n\n    const changeSearchFiledByChangeColumn = () => {\n        const searchField: string[] = [];\n        // eslint-disable-next-line array-callback-return\n        props.column.map((column) => {\n            if (column.isDisplay == undefined || column.isDisplay == null) column.isDisplay = true;\n            if (column.acceptSearch && column.isDisplay) {\n                searchField.push(column.id as string);\n            }\n        });\n        return searchField;\n    };\n\n    useEffect(() => {\n        let getColumnDisplay: Map<string, string> | null = null;\n        if (props.id) {\n            let getFromLocal = localStoryController.getSettingColumnTable(props.id);\n\n            if (getFromLocal && getFromLocal.length > 0) {\n                getColumnDisplay = new Map(getFromLocal.map((item) => [item, item]));\n            }\n        }\n        let columnDisplay: string[] = [];\n        props.column.map((column) => {\n            if (getColumnDisplay) {\n                column.isDisplay = getColumnDisplay.get(column.id as string) ? true : false;\n            }\n            if (column.isDisplay == undefined || column.isDisplay == null) column.isDisplay = true;\n            if (props.id && column.isDisplay == true) {\n                columnDisplay.push(column.id as string);\n            }\n        });\n        if (props.id) {\n            localStoryController.setSettingColumnTable({\n                idTable: props.id as string,\n                column: columnDisplay,\n            });\n        }\n    }, [props.column]);\n\n    return (\n        <Grid container spacing={2}>\n            <Grid xs={12} item container justify=\"space-between\" direction=\"row\">\n                <Grid>\n                    <TextField label=\"Tìm kiếm\" onChange={(e) => onQueryChanged(e.target.value)}></TextField>\n                </Grid>\n                <Grid>\n                    <IconButton onClick={handleClick}>\n                        <BsLayoutThreeColumns />\n                    </IconButton>\n                    <Popover\n                        open={open}\n                        anchorEl={anchorEl}\n                        onClose={(e) => handleClick(e as any)}\n                        className={classes.popupShowColumn}\n                    >\n                        <FormControl className={globalStyle.pp3}>\n                            <Grid className={globalStyle.pp1}>Cột hiển thị</Grid>\n                            <FormGroup>\n                                {props.column.map((column) => (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                color={'primary'}\n                                                checked={column.isDisplay}\n                                                onClick={(e) => onDisplayColumn(column.id as string)}\n                                            />\n                                        }\n                                        label={column.label}\n                                    />\n                                ))}\n                            </FormGroup>\n                        </FormControl>\n                    </Popover>\n                </Grid>\n            </Grid>\n            {props.otherFilter && (\n                <Grid\n                    xs={12}\n                    item\n                    style={{\n                        padding: theme.spacing(3),\n                        paddingLeft: theme.spacing(1),\n                    }}\n                >\n                    {props.otherFilter}\n                </Grid>\n            )}\n            {/*  */}\n            <Grid\n                container\n                style={{\n                    overflow: 'auto',\n                }}\n            >\n                <TableContainer\n                    style={{\n                        overflow: 'auto',\n                    }}\n                >\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                {props.column.map((item) =>\n                                    item.isDisplay ? (\n                                        <TableCell>\n                                            {item.isSort ? (\n                                                <Button\n                                                    className={classes.buttonHeader}\n                                                    onClick={(e) => changeSort(item.id as string)}\n                                                >\n                                                    {item.label}\n                                                    {componentSort(item.id as string)}\n                                                </Button>\n                                            ) : (\n                                                <Grid className={classes.headerNotSort}>\n                                                    <Typography variant=\"button\" className={classes.buttonHeader}>\n                                                        {item.label}\n                                                    </Typography>\n                                                </Grid>\n                                            )}\n                                        </TableCell>\n                                    ) : null,\n                                )}\n                            </TableRow>\n                        </TableHead>\n\n                        <TableBody>\n                            {datas.map((data: any) => (\n                                <TableRow>\n                                    {props.column.map((item) =>\n                                        item.isDisplay ? (\n                                            <TableCell\n                                                style={{\n                                                    whiteSpace: 'nowrap',\n                                                    minWidth: 50,\n                                                    background: 'none',\n                                                }}\n                                            >\n                                                {_.get(data, item.id)}\n                                            </TableCell>\n                                        ) : null,\n                                    )}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n            {/*  */}\n            <Grid className={classes.frPaging} justify=\"flex-end\" container alignItems=\"center\">\n                <FormControl>\n                    <Select\n                        onChange={(e) => {\n                            console.log('on change');\n\n                            props.onQuery({\n                                ...props.query,\n                                pageSize: (e.target.value as number) || 5,\n                            });\n                        }}\n                        value={props.query.pageSize || 5}\n                    >\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                        <MenuItem value={15}>15</MenuItem>\n                        {props.pageSize &&\n                            props.pageSize.length > 0 &&\n                            props.pageSize.map((item) => <MenuItem value={item}>{item}</MenuItem>)}\n                    </Select>\n                </FormControl>\n                <Pagination\n                    style={{\n                        paddingLeft: theme.spacing(3),\n                    }}\n                    count={props.data.totalPages}\n                    onChange={(e, page) => {\n                        props.onQuery({\n                            ...props.query,\n                            page: page,\n                        });\n                    }}\n                    color=\"primary\"\n                />\n            </Grid>\n        </Grid>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { Button, FormControlLabel, FormGroup, Grid, Switch, TextField } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport SelectBox from '../common/SelectBox';\nimport * as Yup from 'yup';\nimport BaseDialog from '../common/BaseDialog';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport { User } from 'src/afi-manager-base-model/model/User';\nimport { userController } from 'src/controller';\nimport { Autocomplete } from '@material-ui/lab';\n\ntype Props = {\n    isDisplay: boolean;\n    item: { userHmId?: string; userId?: string };\n    onEdit: (item: { userHmId?: string; userId?: string }) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({});\n\nexport default function PopupMergeToUser(props: Props) {\n    const formik = useFormik<{ userHmId?: string; userId?: string }>({\n        initialValues: {},\n        validationSchema: validate,\n        onSubmit: () => {\n            props.onEdit({\n                ...formik.values,\n            });\n        },\n    });\n    const [user, setUser] = useState<Map<string, User>>(new Map<string, User>());\n    const onSubmit = () => {\n        formik.handleSubmit();\n    };\n\n    useEffect(() => {\n        if (props.isDisplay) {\n            userController.find({}).then((res) => {\n                setUser(new Map(res.map((item) => [item.id || '', item])));\n                formik.setValues(\n                    _.cloneDeep({\n                        ...props.item,\n                    }),\n                );\n            });\n        }\n    }, [props]);\n\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title=\"Merge to user\"\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    <Grid>\n                        <Autocomplete\n                            options={Array.from(user.values())}\n                            value={user.get(props.item?.userId || '') || null}\n                            getOptionLabel={(option) => option.email || 'Lỗi email'}\n                            onChange={(e, value) => {\n                                formik.setValues({\n                                    ...formik.values,\n                                    userId: value?.id,\n                                });\n                            }}\n                            renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n                        />\n                    </Grid>\n                </Grid>\n            </BaseDialog>\n        </Grid>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport theme from '../../theme/MuiTheme';\n\ntype Props = {\n    title: string;\n    desc: string;\n    pp?: number;\n};\nconst useStyle = makeStyles((theme) => ({}));\nfunction TextDesc(props: Props) {\n    const classes = useStyle();\n    const [state, setState] = useState();\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    return (\n        <Grid\n            container\n            style={{\n                padding: theme.spacing(props.pp || 1),\n            }}\n            justify=\"space-between\"\n            alignItems=\"center\"\n            alignContent=\"center\"\n        >\n            <Grid>\n                <Typography\n                    style={{\n                        color: 'rgba(0, 0, 0, 0.54)',\n                        fontWeight: 400,\n                    }}\n                    variant=\"subtitle1\"\n                >\n                    {props.title}\n                </Typography>\n            </Grid>\n            <Grid>\n                <Typography>{props.desc}</Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(TextDesc);\n","import { FormControlLabel, Grid, makeStyles, Switch, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\nimport Button from '../../component/common/Button';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\n\ntype Props = {\n    item: OrderTracking;\n    updateOrder: (item: OrderTracking) => void;\n};\ntype State = {\n    isDisable: boolean;\n    orderTracking?: OrderTracking;\n};\nconst useStyle = makeStyles((theme) => ({}));\nfunction FixSwithUpdateOrder(props: Props) {\n    const history = useHistory();\n\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState<State>({\n        isDisable: true,\n        orderTracking: undefined,\n    });\n    const [isDisable, setDisble] = useState<boolean>(true);\n\n    const updateDisable = (item: OrderTracking) => {\n        setDisble(false);\n    };\n\n    useEffect(() => {\n        setState({\n            ...state,\n            orderTracking: props.item,\n        });\n        setDisble(true);\n        setTimeout(updateDisable, 6000);\n        return () => {};\n    }, []);\n\n    return (\n        <Grid container>\n            <Grid container justify=\"space-around\" alignItems=\"center\">\n                {\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={state.orderTracking?.isRegister || false}\n                                onChange={(e) =>\n                                    setState({\n                                        ...state,\n                                        orderTracking: {\n                                            ...state.orderTracking,\n                                            isRegister: e.target.checked,\n                                            isOrder: e.target.checked == true ? state.orderTracking?.isOrder : false,\n                                        },\n                                    })\n                                }\n                            />\n                        }\n                        label=\"Is register\"\n                    />\n                }\n                {\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={state.orderTracking?.isOrder || false}\n                                onChange={(e) =>\n                                    setState({\n                                        ...state,\n                                        orderTracking: {\n                                            ...state.orderTracking,\n                                            isOrder: e.target.checked,\n                                        },\n                                    })\n                                }\n                            />\n                        }\n                        label=\"Is order\"\n                    />\n                }\n\n                <Button\n                    variant=\"outlined\"\n                    onClick={() => {\n                        state.orderTracking && props.updateOrder(state.orderTracking);\n                    }}\n                    color=\"secondary\"\n                    disabled={isDisable}\n                >\n                    {isDisable ? 'Vui lòng kiểm tra kĩ' : 'Update'}\n                </Button>\n            </Grid>\n            <Grid className={globalStyle.pp3}>\n                <Typography>* Because data anh hưởng to all system, Please check kỹ cái này </Typography>\n                <Typography>* Please, kiểm tra lại chính xác data trước khi update</Typography>\n                <Typography>* You will chịu trách nhiệm cho mọi action của you </Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default FixSwithUpdateOrder;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport TextField from '../../component/common/TextFiled';\nimport Button from '../../component/common/Button';\nimport ListGrid from '../../component/common/ListGrid';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { useCrudHook } from '../../hook/useCrudHook';\nimport { Pagination } from '@material-ui/lab';\nimport PopUpConfirm from '../../component/common/PopupConfirm';\nimport { useHistory } from 'react-router-dom';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport { orderTrackingController, userHmController } from 'src/controller';\nimport UserHmItemList from 'src/component/AutoOrderHm/UserHmItemList';\nimport PopupInsertUser from 'src/component/AutoOrderHm/PopupInsertUser';\nimport theme from 'src/theme/MuiTheme';\nimport { handleWithPopupHook } from 'src/hook/HandleWithPopupHook';\nimport PopupMergeToUser from 'src/component/AutoOrderHm/PopupMergeToUser';\nimport { OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\nimport SelectBox from 'src/component/common/SelectBox';\nimport { dispatch, RootState } from 'src/rematch/store';\nimport TextDesc from 'src/component/common/TextDesc';\nimport { calcBuyPrice, calcBuyPriceOrder } from 'src/helper/CalculatorHmPrice';\nimport FixSwithUpdateOrder from 'src/component/AutoOrderHm/FixSwithUpdateOrder';\nimport { useSelector } from 'react-redux';\n\ntype Props = {};\ntype State = {\n    inputSearch: string;\n    orderTracking?: OrderTracking;\n};\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        border: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(2),\n        minWidth: 500,\n        borderRadius: theme.spacing(1),\n    },\n    frInfo: {\n        padding: theme.spacing(2),\n    },\n}));\nfunction FixDataTool(props: Props) {\n    const history = useHistory();\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState<State>({\n        inputSearch: '',\n        orderTracking: undefined,\n    });\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    const search = () => {\n        orderTrackingController\n            .findOne({\n                search: state.inputSearch,\n                searchFields: ['email'],\n            })\n            .then((res) => {\n                if (!res) {\n                    dispatch.notification.error('Cannot find order');\n                }\n                setState({\n                    ...state,\n                    orderTracking: res,\n                });\n            });\n    };\n\n    const authen = useSelector((state: RootState) => state.authen);\n    const upateData = (item: OrderTracking) => {\n        orderTrackingController.save({\n            ...item,\n            updatedBy: authen.info.id,\n        });\n    };\n\n    return (\n        <Grid\n            container\n            style={{\n                minHeight: '100vh',\n                background: 'white',\n                padding: theme.spacing(2),\n            }}\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid className={classes.root}>\n                <Grid container justify=\"center\">\n                    <Typography variant=\"h5\">Update data</Typography>\n                </Grid>\n                <Grid container alignItems=\"center\">\n                    <Grid className={clsx(globalStyle.flex1, globalStyle.mm1)}>\n                        <TextField\n                            variant=\"outlined\"\n                            label=\"Input Id or Email\"\n                            onChange={(e) => {\n                                setState({\n                                    ...state,\n                                    inputSearch: e.target.value || '',\n                                });\n                            }}\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid className={clsx(globalStyle.mm1)}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                search();\n                            }}\n                        >\n                            Search\n                        </Button>\n                    </Grid>\n                </Grid>\n                {state.orderTracking && (\n                    <Grid container>\n                        <Grid container className={clsx(classes.frInfo)}>\n                            {state.orderTracking.errorDesc && (\n                                <Grid\n                                    container\n                                    style={{\n                                        color: theme.palette.error.main,\n                                    }}\n                                >\n                                    <TextDesc title={'Lỗi'} desc={state.orderTracking.errorDesc || ''} />\n                                </Grid>\n                            )}\n                            <TextDesc\n                                title={'OrderId'}\n                                desc={\n                                    state.orderTracking.orderId == '1' ? 'Rỗng' : state.orderTracking.orderId || '   '\n                                }\n                            />\n                            <TextDesc title={'Tổng giá'} desc={`${state.orderTracking.totalPrice}` || ''} />\n                            <TextDesc\n                                title={'Phải trả'}\n                                desc={`${calcBuyPriceOrder(state.orderTracking.productOrder || [])}` || ''}\n                            />\n                            <TextDesc title={'Email'} desc={state.orderTracking.email || ''} />\n                            {/* <TextDesc title={'Password'} desc={state.orderTracking.userHM?.password || ''} /> */}\n                        </Grid>\n                        {state.orderTracking.productOrder &&\n                            state.orderTracking.productOrder.map((item) => (\n                                <Grid container className={clsx(classes.frInfo)}>\n                                    <TextDesc title={'Id sản phẩm'} desc={item.productId || ''} />\n                                    {(item.quantity || 0) > 1 && (\n                                        <TextDesc title={'Số lượng'} desc={item.quantity?.toString() || ''} />\n                                    )}\n                                    <TextDesc title={'Size'} desc={item.size || ''} />\n                                    <TextDesc title={'Giá gốc'} desc={item.price?.toString() || ''} />\n                                    <TextDesc title={'Giá mua'} desc={calcBuyPrice(item.price || 0).toString() || ''} />\n                                </Grid>\n                            ))}\n                        <FixSwithUpdateOrder\n                            item={state.orderTracking}\n                            updateOrder={(item) => {\n                                upateData(item);\n                            }}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(FixDataTool);\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { Button, FormControlLabel, FormGroup, Grid, Switch, TextField } from '@material-ui/core';\nimport { Permission } from 'luong-base-model';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport SelectBox from '../common/SelectBox';\nimport * as Yup from 'yup';\nimport BaseDialog from '../common/BaseDialog';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\n\nexport enum EMethodPermission {\n    POST = 'POST',\n    GET = 'GET',\n    PATH = 'PATH',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n}\n\ntype Props = {\n    isDisplay: boolean;\n    item: Permission;\n    onEdit: (item: Permission) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({\n    path: Yup.string()\n        .max(100, 'Value must be less than 100 characters')\n        .required(\"Can't be left blank !!\")\n        .trim()\n        .nullable(),\n    name: Yup.string()\n        .max(100, 'Value must be less than 100 characters')\n        .required(\"Can't be left blank !!\")\n        .trim()\n        .nullable(),\n});\n\nexport default function PopupPermssion(props: Props) {\n    const formik = useFormik<Permission>({\n        initialValues: {} as Permission,\n        validationSchema: validate,\n        onSubmit: () => {\n            props.onEdit({\n                ...formik.values,\n            });\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        const touch = {\n            ..._.mapValues(new UserHm(), () => true),\n        };\n        formik.setTouched(touch);\n    };\n\n    useEffect(() => {\n        if (props.isDisplay) {\n            formik.setValues(\n                _.cloneDeep({\n                    ...props.item,\n                    method: props.item.method || EMethodPermission?.GET,\n                }),\n            );\n            formik.setTouched(_.mapValues(new UserHm(), () => false));\n        }\n    }, [props]);\n\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title=\"Permission\"\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    <Grid>\n                        <TextField\n                            value={formik.values.name}\n                            helperText={formik.touched.name && formik.errors.name}\n                            name=\"name\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt2, globalStyles.mb2)}\n                            label=\"Name\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            value={formik.values.path}\n                            helperText={formik.touched.path && formik.errors.path}\n                            name=\"path\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt2, globalStyles.mb2)}\n                            label=\"Path\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <SelectBox\n                            fullWidth\n                            label=\"Method\"\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt2, globalStyles.mb2)}\n                            value={formik.values.method}\n                            data={Object.values(EMethodPermission || {}) || []}\n                            labelOption={(label) => label}\n                            onChange={(value: any) => {\n                                formik.setValues({\n                                    ...formik.values,\n                                    method: value,\n                                });\n                            }}\n                            valueOption={(value) => value}\n                        />\n                    </Grid>\n                </Grid>\n            </BaseDialog>\n        </Grid>\n    );\n}\n","import { Checkbox, FormControlLabel, Grid, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartGoogle } from 'react-google-charts';\nimport {\n    FilterStatistic,\n    IntervalCheckoutHmTeamAle,\n} from 'src/afi-manager-base-model/controllers/IOrderTrackingController';\nimport DatePicker from 'src/component/common/DatePicker';\nimport { orderTrackingController } from 'src/controller';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport theme from 'src/theme/MuiTheme';\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        padding: 10,\n    },\n    statisticLeft: {\n        background: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        padding: theme.spacing(3),\n    },\n    chart: {\n        background: theme.palette.background.paper,\n        // borderRadius: theme.spacing(1),\n        // marginTop: theme.spacing(2),\n        width: '100%',\n    },\n    frChart: {\n        background: 'white',\n        padding: theme.spacing(5),\n    },\n}));\n\nexport default function StatisticAleTeam() {\n    const globalStyle = useGlobalStyles();\n    const [stateDate, setStateDate] = useState<FilterStatistic>({\n        interval: 'day',\n        from: moment().startOf('month').toDate(),\n        to: moment().endOf('month').toDate(),\n    });\n    const [statisticAleTeam, setStatisticAleTeam] = useState<{\n        intervalRegisterTeam?: IntervalCheckoutHmTeamAle[][];\n        intervalCheckoutTeam?: IntervalCheckoutHmTeamAle[][];\n        nameOfTeamRegister?: string[];\n        nameOfTeamCheckout?: string[];\n        nameOfTeamRegisterSelect?: Map<string, string>;\n        nameOfTeamCheckoutSelect?: Map<string, string>;\n    }>({\n        nameOfTeamCheckoutSelect: new Map(),\n        nameOfTeamRegisterSelect: new Map(),\n    });\n    const classes = useStyle();\n    const getData = (filter: FilterStatistic) => {\n        Promise.all([\n            orderTrackingController.intervalTeamCheckout(filter), //\n            orderTrackingController.intervalTeamRegister(filter), //\n        ]).then((_res) => {\n            const nameAllTeamCheckout: string[] = _res[0].map((item) => item[0].nameUser);\n            const nameAllTeamRegister: string[] = _res[1].map((item) => item[0].nameUser);\n\n            console.log({ res: _res[0] });\n\n            setStatisticAleTeam({\n                ...statisticAleTeam,\n                intervalCheckoutTeam: _res[0],\n                intervalRegisterTeam: _res[1],\n                nameOfTeamCheckout: nameAllTeamCheckout,\n                nameOfTeamRegister: nameAllTeamRegister,\n                nameOfTeamCheckoutSelect:\n                    statisticAleTeam?.nameOfTeamCheckoutSelect?.size == 0\n                        ? new Map(nameAllTeamCheckout.map((item) => [item, item]))\n                        : statisticAleTeam?.nameOfTeamCheckoutSelect,\n                nameOfTeamRegisterSelect:\n                    statisticAleTeam?.nameOfTeamRegisterSelect?.size == 0\n                        ? new Map(nameAllTeamRegister.map((item) => [item, item]))\n                        : statisticAleTeam?.nameOfTeamRegisterSelect,\n            });\n        });\n    };\n\n    const getIntervalChart = (params: { nameOfTeam: string[]; interval: IntervalCheckoutHmTeamAle[][] }) => {\n        if (params.nameOfTeam.length == 0 || params.interval.length == 0) {\n            return [['x'], [1]];\n        }\n        const nameAllTeamCheckout: string[] = params.nameOfTeam;\n\n        const mapNameUserCheckout = new Map<string, IntervalCheckoutHmTeamAle>();\n\n        params.interval.forEach((item) => {\n            item.forEach((user) => {\n                mapNameUserCheckout.set(`${moment(user.date).format('DD-MM-YYYY')} - ${user.nameUser}`, user);\n            });\n        });\n        const intervalCheckoutTeam: any = [['x', ...nameAllTeamCheckout]].concat(\n            params.interval[0].map((item) => [\n                moment(item.date).format('DD-MM-YYYY'),\n                ...(nameAllTeamCheckout.map((user) => {\n                    return Number(\n                        mapNameUserCheckout.get(`${moment(item.date).format('DD-MM-YYYY')} - ${user}`)?.total || 0,\n                    );\n                }) as any),\n            ]),\n        );\n        console.log({intervalCheckoutTeam});\n        \n        return intervalCheckoutTeam;\n    };\n\n    useEffect(() => {\n        getData(stateDate);\n    }, [stateDate]);\n    return (\n        <Grid\n            container\n            style={{\n                padding: theme.spacing(1),\n            }}\n        >\n            <Grid container justify=\"flex-end\">\n                <Grid\n                    container\n                    justify=\"flex-end\"\n                    style={{\n                        top: theme.spacing(1),\n                        background: 'white',\n                        marginBottom: theme.spacing(1),\n                        padding: theme.spacing(3),\n                    }}\n                >\n                    <DatePicker\n                        onChangeDateRange={(date) => {\n                            setStateDate({\n                                ...stateDate,\n                                from: date.startDate,\n                                to: date.endDate,\n                            });\n                        }}\n                        initEndDate={stateDate.to}\n                        initStartDate={stateDate.from}\n                        label={'Chọn ngày'}\n                    />\n                </Grid>\n            </Grid>\n            {/* <Typography variant={\"h4\"} gutterBottom>\n\t\t\t\tDashboard\n\t\t\t</Typography> */}\n            <Grid container spacing={3}>\n                <Grid item xl={12} lg={12} md={12}>\n                    <Grid item>\n                        <Grid container spacing={3}>\n                            <Grid item lg={12} md={12}>\n                                {/* <RecentGriftCard /> */}\n                                <Grid className={classes.frChart}>\n                                    <Grid style={{marginTop: 24}} xs={12} container>\n                                        <Autocomplete\n                                            multiple\n                                            fullWidth\n                                            id=\"tags-outlined\"\n                                            options={statisticAleTeam.nameOfTeamCheckout || []}\n                                            getOptionLabel={(option) => option}\n                                            value={(statisticAleTeam.nameOfTeamCheckout || []).filter(n => !!statisticAleTeam.nameOfTeamCheckoutSelect?.get(n))}\n                                            defaultValue={statisticAleTeam.nameOfTeamCheckout || []}\n                                            onChange={(e, values) => {\n                                                setStatisticAleTeam({\n                                                    ...statisticAleTeam,\n                                                    nameOfTeamCheckoutSelect: values && values.length>0\n                                                    ?new Map(values.map(v => [v,v])): new Map()\n                                                })\n                                            }}\n                                            \n                                            filterSelectedOptions\n                                            renderInput={(params) => (\n                                            <TextField\n                                                {...params}\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                label=\"Nhân viên\"\n                                                placeholder=\"Favorites\"\n                                            />\n                                            )}\n                                        />\n                                        {/* {statisticAleTeam.nameOfTeamCheckout?.map((item) => (\n                                            <Grid className={clsx(globalStyle.pp0)}>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={Boolean(\n                                                                statisticAleTeam?.nameOfTeamCheckoutSelect?.get(item),\n                                                            )}\n                                                            onChange={(e, checked) => {\n                                                                const getChecked =\n                                                                    statisticAleTeam?.nameOfTeamCheckoutSelect;\n                                                                if ((getChecked?.size || 0) <= 1 && !checked) {\n                                                                    return;\n                                                                }\n                                                                if (checked) {\n                                                                    getChecked?.set(item, item);\n                                                                } else {\n                                                                    getChecked?.delete(item);\n                                                                }\n                                                                setStatisticAleTeam({\n                                                                    ...statisticAleTeam,\n                                                                    nameOfTeamCheckoutSelect: getChecked,\n                                                                });\n                                                            }}\n                                                        />\n                                                    }\n                                                    label={item}\n                                                /> \n                                            </Grid>\n                                        ))} */}\n                                    </Grid>\n                                    <ChartGoogle\n                                        width={'95%'}\n                                        height={'600px'}\n                                        chartType=\"BarChart\"\n                                        loader={<div>Loading Chart</div>}\n                                        data={getIntervalChart({\n                                            interval: statisticAleTeam?.intervalCheckoutTeam || [],\n                                            nameOfTeam:\n                                                Array.from(\n                                                    statisticAleTeam?.nameOfTeamCheckoutSelect?.values() || [],\n                                                ) || [],\n                                        })}\n                                        options={{\n                                            isStacked: true,\n                                            animation: {\n                                                duration: 500,\n                                                easing: 'out',\n                                                startup: true,\n                                            },\n                                        }}\n                                        rootProps={{ 'data-testid': '2' }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {/* <Grid item lg={12} md={12}>\n                                <Grid className={classes.frChart}>\n                                    <Grid>\n                                        <Typography variant=\"h5\">Team Regsiter</Typography>\n                                    </Grid>\n                                    <Grid container>\n                                        {statisticAleTeam.nameOfTeamRegister?.map((item) => (\n                                            <Grid className={clsx(globalStyle.pp0)}>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={Boolean(\n                                                                statisticAleTeam?.nameOfTeamRegisterSelect?.get(item),\n                                                            )}\n                                                            onChange={(e, checked) => {\n                                                                const getChecked =\n                                                                    statisticAleTeam?.nameOfTeamRegisterSelect;\n                                                                if ((getChecked?.size || 0) <= 1 && !checked) {\n                                                                    return;\n                                                                }\n                                                                if (checked) {\n                                                                    getChecked?.set(item, item);\n                                                                } else {\n                                                                    getChecked?.delete(item);\n                                                                }\n                                                                setStatisticAleTeam({\n                                                                    ...statisticAleTeam,\n                                                                    nameOfTeamRegisterSelect: getChecked,\n                                                                });\n                                                            }}\n                                                        />\n                                                    }\n                                                    label={item}\n                                                />\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                    <ChartGoogle\n                                        height={'900px'}\n                                        width={'95%'}\n                                        chartType=\"LineChart\"\n                                        loader={<div>Loading Chart</div>}\n                                        data={getIntervalChart({\n                                            interval: statisticAleTeam?.intervalRegisterTeam || [],\n                                            nameOfTeam:\n                                                Array.from(\n                                                    statisticAleTeam?.nameOfTeamRegisterSelect?.values() || [],\n                                                ) || [],\n                                        })}\n                                        options={{\n                                            animation: {\n                                                duration: 500,\n                                                easing: 'out',\n                                                startup: true,\n                                            },\n                                        }}\n                                        rootProps={{ 'data-testid': '2' }}\n                                    />\n                                </Grid>\n                            </Grid> */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","import { makeStyles, Grid, Typography, IconButton } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { useHistory } from 'react-router-dom';\nimport Button from 'src/component/common/Button';\nimport ListGrid from 'src/component/common/ListGrid';\nimport PopUpConfirm from 'src/component/common/PopupConfirm';\nimport TextField from 'src/component/common/TextFiled';\nimport PopupPermssion from 'src/component/permssion/PopupPermssion';\nimport { permssionController } from 'src/controller';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\n\nconst fileDownload = require('js-file-download');\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    rootPermissionItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n    },\n}));\ntype State = {};\n\nfunction PermissionContainer(props: Props) {\n    const history = useHistory();\n    const crudPermission = useCrudHook({\n        controller: permssionController,\n        initQuery: {\n            pageSize: 100,\n            searchFields: ['name', 'path'],\n        },\n    });\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState<State>();\n\n    useEffect(() => {}, []);\n\n    return (\n        <Grid container className={globalStyle.pp2}>\n            <PopupPermssion\n                isDisplay={crudPermission.isShowPopup}\n                item={crudPermission.itemSelected}\n                onCancel={crudPermission.onCancelPopup}\n                onEdit={crudPermission.onSave}\n            />\n            <PopUpConfirm\n                isDisplay={crudPermission.isShowConfirm}\n                onCancel={crudPermission.onCancelConfirm}\n                onConfirm={() => crudPermission.onDelete(crudPermission.itemSelected)}\n            />\n            <Grid container justify=\"center\" className={globalStyle.pp2}>\n                <Typography variant=\"h3\">Permssion</Typography>\n            </Grid>\n            <Grid container justify=\"space-between\">\n                <Grid className={globalStyle.pp2}>\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"Search\"\n                        onChange={(e) => {\n                            crudPermission.onQueryChanged(e.target.value);\n                        }}\n                    />\n                </Grid>\n                <Grid className={globalStyle.pp2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => crudPermission.onShowPopup({})}>\n                        New Permssion\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid container className={globalStyle.pp2}>\n                <ListGrid gridGap={20} minWidthItem=\"300px\">\n                    {crudPermission.pagingList.rows?.map((item) => (\n                        <Grid className={classes.rootPermissionItem}>\n                            <Grid container justify=\"space-between\">\n                                <Grid>\n                                    <Typography>{item.method}</Typography>\n                                </Grid>\n                                <Grid>\n                                    <IconButton color=\"primary\" onClick={() => crudPermission.onShowPopup(item)}>\n                                        <AiOutlineEdit />\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => {\n                                            crudPermission.onConfirm(item);\n                                        }}\n                                    >\n                                        <IoCloseOutline />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                            <Typography color=\"primary\">{item.name}</Typography>\n                            <Typography variant=\"caption\">{item.path}</Typography>\n                        </Grid>\n                    ))}\n                </ListGrid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(PermissionContainer);\n","import { makeStyles, Grid, Typography, IconButton } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { useHistory } from 'react-router-dom';\nimport Button from 'src/component/common/Button';\nimport ListGrid from 'src/component/common/ListGrid';\nimport PopUpConfirm from 'src/component/common/PopupConfirm';\nimport TextField from 'src/component/common/TextFiled';\nimport PopupPermssion from 'src/component/permssion/PopupPermssion';\nimport { permssionController, roleController } from 'src/controller';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\n\nconst fileDownload = require('js-file-download');\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    rootPermissionItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n    },\n}));\ntype State = {};\n\nfunction RoleContainer(props: Props) {\n    const history = useHistory();\n    const crudRole = useCrudHook({\n        controller: roleController,\n        initQuery: {\n            pageSize: 100,\n        },\n    });\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState<State>();\n\n    useEffect(() => {}, []);\n\n    return (\n        <Grid container className={globalStyle.pp2}>\n            <PopUpConfirm\n                isDisplay={crudRole.isShowConfirm}\n                onCancel={crudRole.onCancelConfirm}\n                onConfirm={() => crudRole.onDelete(crudRole.itemSelected)}\n            />\n            <Grid container justify=\"center\">\n                <Typography variant=\"h5\">Role</Typography>\n            </Grid>\n            <Grid container justify=\"space-between\">\n                <Grid className={globalStyle.pp2}>\n                    <TextField variant=\"outlined\" label=\"Search\" />\n                </Grid>\n                <Grid className={globalStyle.pp2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(`role/create`)}>\n                        New Role\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid container className={globalStyle.pp2}>\n                <ListGrid gridGap={20} minWidthItem=\"300px\">\n                    {crudRole.pagingList.rows?.map((item) => (\n                        <Grid className={classes.rootPermissionItem}>\n                            <Grid container justify=\"space-between\" alignItems=\"center\">\n                                <Grid>\n                                    <Typography variant=\"h6\">{item.name}</Typography>\n                                </Grid>\n                                <Grid>\n                                    <IconButton color=\"primary\" onClick={() => history.push(`role/${item.id}`)}>\n                                        <AiOutlineEdit />\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => {\n                                            crudRole.onConfirm(item);\n                                        }}\n                                    >\n                                        <IoCloseOutline />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    ))}\n                </ListGrid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(RoleContainer);\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, Grid, Typography, IconButton, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Button from 'src/component/common/Button';\nimport ListGrid from 'src/component/common/ListGrid';\nimport PopUpConfirm from 'src/component/common/PopupConfirm';\nimport TextField from 'src/component/common/TextFiled';\nimport PopupPermssion from 'src/component/permssion/PopupPermssion';\nimport { menuTeamplateController, permssionController, roleController } from 'src/controller';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport clsx from 'clsx';\nimport { Permission, Role } from 'luong-base-model/lib';\nimport { validate as validateUuid } from 'uuid';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport { MetaDataRole } from 'src/afi-manager-base-model/model/MetaDataRolePermision';\nimport { MenuTemplate } from 'src/afi-manager-base-model/model/MenuTemplate';\nimport SelectBox from 'src/component/common/SelectBox';\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    rootPermissionItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n    },\n}));\ntype State = {\n    permssion: Permission[];\n    menu: Map<string, MenuTemplate>;\n};\n\nconst validate = Yup.object({\n    name: Yup.string()\n        .max(100, 'Value must be less than 100 characters')\n        .required(\"Can't be left blank !!\")\n        .trim()\n        .nullable(),\n    redirect: Yup.string().required(\"Can't be left blank !!\").trim().nullable(),\n    menuTemplateId: Yup.string().required('Please, Select menu for role'),\n});\n\nfunction SetupRoleContainer(props: Props) {\n    const { id } = useParams<{ id: string }>();\n\n    const formik = useFormik<Role<MetaDataRole> & MetaDataRole>({\n        initialValues: {} as Permission,\n        validationSchema: validate,\n        onSubmit: () => {\n            roleController\n                .save({\n                    ...formik.values,\n                    permission: Array.from(role.roleSelect.values()),\n                    metaData: {\n                        ...formik.values.metaData,\n                        redirect: formik.values.redirect,\n                        menuTemplateId: formik.values.menuTemplateId,\n                    },\n                })\n                .then((res) => {\n                    history.push(`/role/${res.id}`);\n                });\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        formik.setTouched({\n            name: true,\n            menuTemplateId: true,\n            redirect: true,\n        });\n    };\n\n    const history = useHistory();\n    const [role, setRole] = useState<{\n        role: Role;\n        roleSelect: Map<string, Permission>;\n    }>({\n        role: {},\n        roleSelect: new Map(),\n    });\n    const crudPermission = useCrudHook({\n        controller: permssionController,\n        initQuery: {\n            pageSize: 100,\n        },\n    });\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState<State>({\n        permssion: [],\n        menu: new Map(),\n    });\n\n    useEffect(() => {\n        if (validateUuid(id)) {\n            roleController\n                .getById({\n                    id,\n                })\n                .then((res) => {\n                    if (res) {\n                        setRole({\n                            ...role,\n                            role: res || {},\n                            roleSelect: new Map<string, Permission>(\n                                res && res.permission?.map((item) => [item.id || '', item]),\n                            ),\n                        });\n                        formik.setValues({\n                            ...res,\n                            redirect: res.metaData?.redirect,\n                            menuTemplateId: res.metaData?.menuTemplateId,\n                        });\n                    }\n                });\n        }\n        Promise.all([permssionController.find({}), menuTeamplateController.find({})]).then((res) => {\n            setState({\n                ...state,\n                permssion: res[0],\n                menu: new Map<string, MenuTemplate>(res[1].map((item) => [item.id || '', item])),\n            });\n        });\n    }, []);\n\n    return (\n        <Grid container className={globalStyle.pp2}>\n            <Grid container justify=\"center\" className={globalStyle.pp2}>\n                <Typography variant=\"h5\">Setup Role</Typography>\n            </Grid>\n            <Grid container justify=\"flex-end\" className={globalStyle.pb2}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                        onSubmit();\n                    }}\n                >\n                    Save\n                </Button>\n            </Grid>\n            <Grid container justify=\"space-between\">\n                <Grid xs={4}>\n                    <Grid className={globalStyle.pp1}>\n                        <TextField\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            fullWidth\n                            label=\"Name Role\"\n                            name=\"name\"\n                            value={role.role.name}\n                            error={Boolean(formik.touched.name && formik.errors.name)}\n                            helperText={formik.touched.name && formik.errors.name}\n                            onChange={formik.handleChange}\n                            InputLabelProps={{ shrink: true }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid xs={4}>\n                    <Grid className={globalStyle.pp1}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            color=\"primary\"\n                            label=\"Path redirect\"\n                            name=\"redirect\"\n                            value={formik.values.redirect}\n                            error={Boolean(formik.touched.redirect && formik.errors.redirect)}\n                            helperText={formik.touched.redirect && formik.errors.redirect}\n                            onChange={formik.handleChange}\n                            InputLabelProps={{ shrink: true }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid xs={4}>\n                    <Grid className={globalStyle.pp1}>\n                        <SelectBox\n                            label=\"Menu\"\n                            fullWidth\n                            variant=\"outlined\"\n                            error={Boolean(formik.touched.menuTemplateId && formik.errors.menuTemplateId)}\n                            helperText={(formik.touched.menuTemplateId && formik.errors.menuTemplateId) || ''}\n                            data={(state.menu.values() && Array.from(state.menu.values())) || []}\n                            labelOption={(label) => label.name}\n                            value={state.menu.get(formik.values.menuTemplateId || '')?.id || ''}\n                            valueOption={(option) => option.id}\n                            onChange={(value: any) => {\n                                if (value) {\n                                    formik.setValues({\n                                        ...formik.values,\n                                        menuTemplateId: value,\n                                    });\n                                }\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid container className={clsx(globalStyle.pp2, globalStyle.pt5)}>\n                <ListGrid minWidthItem=\"200px\" heightItem={'100px'} gridGap={20}>\n                    {state.permssion.map((item) => (\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={Boolean(role.roleSelect.get(item.id || ''))}\n                                    onChange={(e, checked) => {\n                                        const getNowSelect = role.roleSelect;\n                                        if (checked) {\n                                            getNowSelect.set(item.id || '', item);\n                                        } else {\n                                            getNowSelect.delete(item.id || '');\n                                        }\n                                        setRole({\n                                            ...role,\n                                            roleSelect: getNowSelect,\n                                        });\n                                    }}\n                                />\n                            }\n                            label={`${item.method} - ${item.name}`}\n                        />\n                    ))}\n                </ListGrid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(SetupRoleContainer);\n","import { BaseModel, Role } from 'luong-base-model/lib';\n\nexport class User extends BaseModel {\n    fullName?: string;\n\n    accountId?: string;\n\n    phoneNumber?: string;\n\n    email?: string;\n\n    description?: string;\n\n    avt?: string\n}\n\nexport class UserAccount extends User {\n    username?: string;\n    password?: string;\n    roleId?: string[];\n    role?: Role[];\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport { Role } from 'luong-base-model/lib';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { UserAccount } from 'src/afi-manager-base-model/model/User';\nimport { roleController } from 'src/controller';\nimport { authen } from 'src/rematch/Authen';\nimport { RootState } from 'src/rematch/store';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport * as Yup from 'yup';\nimport BaseDialog from '../common/BaseDialog';\nimport SelectBox from '../common/SelectBox';\n\ntype Props = {\n    isDisplay: boolean;\n    item: UserAccount;\n    onEdit: (item: UserAccount) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({\n    fullName: Yup.string()\n        .max(100, 'Chữ không được quá 100 kí tự')\n        .required('Không được để trống !!')\n        .trim()\n        .nullable(),\n    username: Yup.string()\n        .max(100, 'Chữ không được quá 100 kí tự')\n        .required('Không được để trống !!')\n        .trim()\n        .nullable(),\n});\n\nfunction PopupUserAccount(props: Props) {\n    const formik = useFormik<UserAccount>({\n        initialValues: {} as UserAccount,\n        validationSchema: validate,\n        onSubmit: () => {\n            props.onEdit({\n                ...formik.values,\n            });\n        },\n    });\n\n    const authen = useSelector((state: RootState) => state.authen);\n\n    const [role, setRole] = useState<{ roleMap: Map<string, Role> }>({\n        roleMap: new Map(),\n    });\n\n    const onSubmit = () => {\n        formik.handleSubmit();\n        const touch = {\n            ..._.mapValues(new UserAccount(), () => true),\n        };\n        formik.setTouched(touch);\n    };\n\n    const createPassword = () => {\n        return [...Array(10)].map((i) => (~~(Math.random() * 36)).toString(36)).join('');\n    };\n    useEffect(() => {\n        if (props.isDisplay) {\n            roleController.list({ pageSize: 1000 }).then((res) => {\n                formik.setValues(\n                    _.cloneDeep({\n                        ...props.item,\n                        password: props.item?.password || createPassword(),\n                    }),\n                );\n                formik.setTouched(_.mapValues(new UserAccount(), () => false));\n                setRole({\n                    roleMap: new Map<string, Role>(\n                        res.rows\n                            ?.filter((item) => {\n                                // eb9fedec-3a2d-4e01-8ef5-2109303dc8a1\n                                if (\n                                    item.id == '08298207-265c-4533-8029-de480a211808' &&\n                                    authen.info?.accountId != 'eb9fedec-3a2d-4e01-8ef5-2109303dc8a1'\n                                ) {\n                                    return false;\n                                }\n                                return true;\n                            })\n                            ?.map((item) => [item.id || '', item]),\n                    ),\n                });\n            });\n        }\n    }, [props.isDisplay]);\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title=\"Khách hàng\"\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    <Grid>\n                        <TextField\n                            value={formik.values.fullName}\n                            helperText={formik.touched.fullName && formik.errors.fullName}\n                            name=\"fullName\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Họ & Tên\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            value={formik.values.email}\n                            helperText={formik.touched.email && formik.errors.email}\n                            variant=\"outlined\"\n                            name=\"email\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            className={clsx(globalStyles.mt2, globalStyles.mb2)}\n                            label=\"Địa chỉ email\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            value={formik.values.username}\n                            helperText={formik.touched.username && formik.errors.username}\n                            variant=\"outlined\"\n                            name=\"username\"\n                            disabled={Boolean(props.item.username)}\n                            onChange={formik.handleChange}\n                            fullWidth\n                            className={clsx(globalStyles.mt2, globalStyles.mb2)}\n                            label=\"Username\"\n                        ></TextField>\n                    </Grid>\n                    <Grid>\n                        <TextField\n                            value={formik.values.password}\n                            // helperText={\n                            // \tformik.touched[`username` as any] && formik.errors.user['username']\n                            // }\n                            onChange={formik.handleChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            className={clsx(globalStyles.mt2, globalStyles.mb2)}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            name=\"password\"\n                            InputProps={{\n                                endAdornment: (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={(e) => {\n                                            formik.setValues({\n                                                ...formik.values,\n                                                password: createPassword(),\n                                            });\n                                        }}\n                                    >\n                                        {' '}\n                                        Reset\n                                    </Button>\n                                ),\n                            }}\n                            label=\"Mật khẩu\"\n                        ></TextField>\n                    </Grid>\n\n                    <Grid>\n                        <SelectBox\n                            className={clsx(globalStyles.mt2, globalStyles.mb4)}\n                            shrink={true}\n                            variant=\"outlined\"\n                            fullWidth\n                            label=\"Role\"\n                            disabled={props.item?.id == 'f84cde4d-075d-4efd-b851-514ffefb43b6'}\n                            value={\n                                (formik.values &&\n                                    formik.values.role &&\n                                    formik.values.role[0] &&\n                                    role.roleMap.get(formik.values.role[0].id || '')) ||\n                                (null as any)\n                            }\n                            data={Array.from(role.roleMap.values()) || []}\n                            onChange={(value: any) => {\n                                if (value) {\n                                    formik.setValues({\n                                        ...formik.values,\n                                        role: [value],\n                                        roleId: [value?.id || ''],\n                                    });\n                                }\n                            }}\n                            labelOption={(role: Role) => role.name || ''}\n                            valueOption={(value) => value}\n                        />\n                    </Grid>\n                </Grid>\n            </BaseDialog>\n        </Grid>\n    );\n}\nexport default React.memo(PopupUserAccount);\n","import React from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\n\nconst useStyle = makeStyles((theme) => ({\n    rootItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction InnerQuoteList(props: any) {\n    const classes = useStyle();\n    return props.quotes.map((quote: any, index: any) => (\n        <Draggable key={quote.id} draggableId={quote.id} index={index}>\n            {(dragProvided, dragSnapshot) => (\n                <Grid\n                    ref={dragProvided.innerRef}\n                    {...{ isDragging: dragSnapshot.isDragging, isGroupedOver: Boolean(dragSnapshot.combineTargetFor) }}\n                    {...dragProvided.draggableProps}\n                    {...dragProvided.dragHandleProps}\n                >\n                    {props.renderItem(quote)}\n                </Grid>\n            )}\n        </Draggable>\n    ));\n}\n\nexport default function QuoteList(props: any) {\n    return (\n        <Droppable\n            droppableId={props.listId}\n            type={props.listType}\n            ignoreContainerClipping={props.ignoreContainerClipping}\n            isDropDisabled={props.isDropDisabled}\n            isCombineEnabled={props.isCombineEnabled}\n        >\n            {(dropProvided) => (\n                <div {...dropProvided.droppableProps}>\n                    <Grid>\n                        <Grid ref={dropProvided.innerRef}>\n                            <InnerQuoteList quotes={props.quotes} renderItem={props.renderItem} />\n                            {dropProvided.placeholder}\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </Droppable>\n    );\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Grid, IconButton, makeStyles, Typography } from '@material-ui/core';\nimport QuoteList from '../../container/permission/InnerQuoteList';\nimport { RouteComponent } from 'src/component/common/NavBar';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { AiOutlineEdit } from 'react-icons/ai';\n\ntype PropsColum = {\n    item: RouteComponent;\n    index: number;\n    onDelete: (item: RouteComponent) => void;\n    onEdit: (item: RouteComponent) => void;\n    renderItem?: (item: RouteComponent) => React.ReactElement;\n};\nconst useStyle = makeStyles((theme) => ({\n    listDrag: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n        margin: theme.spacing(1),\n        minWidth: 150,\n        position: 'relative',\n        minHeight: 100,\n    },\n}));\nexport default function ColumnMenu<T = any>(props: PropsColum) {\n    const classes = useStyle();\n    return (\n        <Draggable draggableId={props.item.id || ''} index={props.index} disableInteractiveElementBlocking={true}>\n            {(provided, snapshot) => {\n                return (\n                    <Grid>\n                        <Grid ref={provided.innerRef} {...provided.draggableProps} className={classes.listDrag}>\n                            <Grid {...provided.dragHandleProps}>\n                                <Grid container justify=\"space-between\" alignItems=\"center\">\n                                    <Grid>\n                                        <Typography color=\"primary\">{props.item.label}</Typography>\n                                    </Grid>\n                                    <Grid>\n                                        <IconButton onClick={() => props.onEdit(props.item)}>\n                                            <AiOutlineEdit />\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={() => {\n                                                props.onDelete(props.item);\n                                            }}\n                                        >\n                                            <IoCloseOutline />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <QuoteList\n                                listId={props.item.id}\n                                listType=\"QUOTE\"\n                                quotes={props.item.subMenu}\n                                isCombineEnabled={true}\n                                renderItem={props.renderItem}\n                            />\n                        </Grid>\n                    </Grid>\n                );\n            }}\n        </Draggable>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { Button, FormControlLabel, FormGroup, Grid, Switch, TextField } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport SelectBox from '../common/SelectBox';\nimport * as Yup from 'yup';\nimport BaseDialog from '../common/BaseDialog';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport { RouteComponent } from '../common/NavBar';\n\ntype Props = {\n    isDisplay: boolean;\n    item: RouteComponent;\n    onEdit: (item: RouteComponent) => void;\n    onCancel: () => void;\n};\nconst validate = Yup.object({\n    label: Yup.string()\n        .max(100, 'Value must be less than 100 characters')\n        .required(\"Can't be left blank !!\")\n        .trim()\n        .nullable(),\n});\n\nexport default function PopupEditRouteMenu(props: Props) {\n    const formik = useFormik<RouteComponent>({\n        initialValues: {} as RouteComponent,\n        validationSchema: validate,\n        onSubmit: () => {\n            props.onEdit({\n                ...formik.values,\n            });\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        formik.setTouched({\n            label: true,\n        });\n    };\n\n    useEffect(() => {\n        if (props.isDisplay) {\n            formik.setValues(\n                _.cloneDeep({\n                    ...props.item,\n                }),\n            );\n            formik.setTouched(_.mapValues(new UserHm(), () => false));\n        }\n    }, [props]);\n\n    const globalStyles = useGlobalStyles();\n    return (\n        <Grid>\n            <BaseDialog\n                isDisplay={props.isDisplay}\n                onCancel={props.onCancel}\n                onClickConfirm={() => {\n                    onSubmit();\n                }}\n                title=\"User HM\"\n            >\n                <Grid container direction=\"column\" justify=\"space-around\">\n                    <Grid>\n                        <TextField\n                            value={formik.values.label}\n                            helperText={formik.touched.label && formik.errors.label}\n                            name=\"label\"\n                            onChange={formik.handleChange}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={clsx(globalStyles.mt1, globalStyles.mb2)}\n                            label=\"Label\"\n                        ></TextField>\n                    </Grid>\n                </Grid>\n            </BaseDialog>\n        </Grid>\n    );\n}\n","import {\n    Checkbox,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    Input,\n    makeStyles,\n    Typography,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { routers, routersMap } from 'src/constants/Route';\nimport { localStoryController, menuTeamplateController, roleController } from 'src/controller';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { GrDrag } from 'react-icons/gr';\nimport {\n    Combine,\n    DragDropContext,\n    DraggableLocation,\n    Droppable,\n    DropResult,\n    ResponderProvided,\n} from 'react-beautiful-dnd';\nimport Column from '../../component/permssion/ColumnMenu';\nimport { v4 as uuid } from 'uuid';\nimport { RouteComponent } from 'src/component/common/NavBar';\nimport Button from 'src/component/common/Button';\nimport { AiFillApple, AiFillDashboard, AiOutlineEdit } from 'react-icons/ai';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport theme from 'src/theme/MuiTheme';\nimport { handleWithPopupHook } from 'src/hook/HandleWithPopupHook';\nimport PopUpConfirm from 'src/component/common/PopupConfirm';\nimport PopupEditRouteMenu from 'src/component/permssion/PopupEditRouteMenu';\nimport ListGrid from 'src/component/common/ListGrid';\nimport TextField from 'src/component/common/TextFiled';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { MenuTemplate } from 'src/afi-manager-base-model/model/MenuTemplate';\nimport { MenuTemplateItem } from 'src/afi-manager-base-model/model/MenuTemplateItem';\nimport { validate as validateUuid } from 'uuid';\nimport SelectBox from 'src/component/common/SelectBox';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    rootPermissionItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n    },\n    listDrag: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n        margin: theme.spacing(1),\n        minWidth: 150,\n        position: 'relative',\n    },\n    itemMenuDrag: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n}));\n\ntype State = {\n    menuDrag: RouteComponent[];\n};\n\ninterface IOnDragEnd extends DropResult {\n    mode: 'FLUID';\n    reason: 'DROP';\n    source: { droppableId: string; index: number };\n    type: 'QUOTE' | 'COLUMN';\n    // destination?: (DraggableLocation & { draggableId?: string }) | undefined;\n    combine?: (Combine & { draggableId?: string }) | undefined;\n}\n\nconst validate = Yup.object({\n    name: Yup.string()\n        .max(100, 'Value must be less than 100 characters')\n        .required(\"Can't be left blank !!\")\n        .trim()\n        .nullable(),\n});\nfunction SetupMenu(props: Props) {\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n    const formik = useFormik<MenuTemplate>({\n        initialValues: {} as MenuTemplate,\n        validationSchema: validate,\n        onSubmit: () => {\n            menuTeamplateController\n                .save({\n                    ...formik.values,\n                    menu: state.menuDrag,\n                })\n                .then((res) => {\n                    history.push(`/setup-menu/${res.id}`);\n                });\n        },\n    });\n    const onSubmit = () => {\n        formik.handleSubmit();\n        formik.setTouched({\n            name: true,\n        });\n    };\n\n    const handleWithPopupMenu = handleWithPopupHook<RouteComponent>({\n        onConfirm: (menu) => {\n            if (menu) {\n                setState({\n                    ...state,\n                    menuDrag: state.menuDrag.filter((item) => item.id != menu.id),\n                });\n            }\n        },\n        onConfirmByPopup: (menu) => {\n            if (menu) {\n                const getMenuState = state.menuDrag || [];\n                const getIndexDefault = getMenuState.findIndex((item) => item.id === menu.id);\n                getMenuState[getIndexDefault] = menu;\n                setState({ ...state, menuDrag: getMenuState });\n            }\n        },\n    });\n    const handleWithPopupSubMenu = handleWithPopupHook<RouteComponent>({\n        onConfirm: (menu) => {\n            if (menu) {\n                const getStateMenu = state.menuDrag;\n                let isDelete = false;\n                getStateMenu.forEach((item, indexMenu) => {\n                    item.subMenu = item.subMenu || [];\n                    item.subMenu?.forEach((sub, indexSub) => {\n                        if (sub.id == menu.id) {\n                            getStateMenu[indexMenu].subMenu?.splice(indexSub, 1);\n                            isDelete = true;\n                            return;\n                        }\n                    });\n                    if (isDelete) return;\n                });\n                setState({ ...state, menuDrag: getStateMenu });\n            }\n        },\n        onConfirmByPopup: (menu) => {\n            if (menu) {\n                const getStateMenu = state.menuDrag || [];\n                let isEdit = false;\n                getStateMenu.forEach((item, indexMenu) => {\n                    item.subMenu = item.subMenu || [];\n                    item.subMenu?.forEach((sub, indexSub) => {\n                        if (sub.id == menu.id && getStateMenu[indexMenu] && getStateMenu[indexMenu].subMenu) {\n                            getStateMenu[indexMenu].subMenu = getStateMenu[indexMenu].subMenu || [];\n                            (getStateMenu[indexMenu] as any).subMenu[indexSub] = menu;\n                            isEdit = true;\n                            return;\n                        }\n                    });\n                    if (isEdit) return;\n                });\n                setState({ ...state, menuDrag: getStateMenu });\n            }\n        },\n    });\n\n    const [state, setState] = useState<State>({\n        menuDrag: [],\n    });\n\n    useEffect(() => {\n        if (validateUuid(id)) {\n            menuTeamplateController.getById({ id }).then((res) => {\n                if (res) {\n                    let menu = (res?.menu || [])\n                        .map((item) => {\n                            return getDefault(item);\n                        })\n                        .filter((item) => Boolean(item)) as any;\n\n                    setState({ ...state, menuDrag: menu || [] });\n                    formik.setValues({\n                        ...res,\n                        screenShowNavBar: res.screenShowNavBar || 'md',\n                    });\n                }\n            });\n        }\n    }, []);\n\n    const getDefault = (item: MenuTemplateItem): RouteComponent => {\n        const defaultLink = routersMap.get(item.link || '');\n        return {\n            ...item,\n            icon: defaultLink?.icon || <AiFillDashboard />,\n            link: defaultLink?.link || '',\n            label: item?.label || '',\n            subMenu: item.subMenu?.map((sub) => getDefault(sub)) || [],\n        };\n    };\n\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n\n    const onDragEnd = (result: IOnDragEnd, provided: ResponderProvided) => {\n        console.log(result);\n        const refData = [...state.menuDrag];\n        const dataMap = new Map<string, RouteComponent>(refData.map((item) => [item.id || '', item]));\n        if (result.type == 'QUOTE') {\n            if (!result.destination) {\n                setState({ ...state });\n                return;\n            }\n            if (result.draggableId) {\n                let getSource = dataMap.get(result.source.droppableId);\n                let getValueSelect: RouteComponent | undefined;\n                if (getSource && getSource.subMenu) {\n                    getValueSelect = getSource.subMenu[result.source.index];\n                } else {\n                    return;\n                }\n                getSource?.subMenu?.splice(Number(result.source.index), 1);\n                dataMap.set(getSource.id || '', getSource);\n                const getDestinaon = dataMap.get(result.destination?.droppableId || '');\n                if (getDestinaon && getDestinaon.subMenu) {\n                    const newSubItem: RouteComponent[] = [];\n                    getDestinaon.subMenu.forEach((item, index) => {\n                        if (index == result.destination?.index && getValueSelect) {\n                            newSubItem.push({ ...getValueSelect });\n                            getValueSelect = undefined;\n                        }\n                        newSubItem.push(item);\n                    });\n                    if (getValueSelect) {\n                        newSubItem.push(getValueSelect);\n                    }\n\n                    getDestinaon.subMenu = newSubItem;\n                    dataMap.set(getDestinaon.id || '', getDestinaon);\n                    // console.log(Array.from(dataMap.values()));\n\n                    setState({\n                        ...state,\n                        menuDrag: Array.from(dataMap.values()),\n                    });\n                }\n            }\n        }\n        if (result.type == 'COLUMN') {\n            if (result.source?.droppableId == 'board' && result.destination?.droppableId == 'board') {\n                let getRefSource: RouteComponent | undefined = refData[result.source.index];\n                refData.splice(result.source.index, 1);\n                const newData: RouteComponent[] = [];\n                refData.forEach((item, index) => {\n                    if (index == result.destination?.index && getRefSource) {\n                        newData.push({ ...getRefSource });\n                        getRefSource = undefined;\n                    }\n                    newData.push(item);\n                });\n                if (getRefSource) {\n                    newData.push(getRefSource);\n                }\n\n                setState({ ...state, menuDrag: newData });\n            } else if (result.source?.droppableId == 'board' && result.combine?.droppableId == 'board') {\n                let getSource = refData[result.source.index];\n\n                dataMap.delete(getSource.id || '');\n                const getCombine = dataMap.get(result.combine.draggableId);\n                if (getCombine && getSource) {\n                    getCombine.subMenu = getCombine.subMenu || [];\n                    getCombine.subMenu = [...getCombine.subMenu, ...(getSource.subMenu || [])];\n                    if (getSource.link) {\n                        delete getSource.subMenu;\n                        getCombine.subMenu.push(getSource);\n                    }\n                    dataMap.set(getCombine.id || '', getCombine);\n                }\n                setState({ ...state, menuDrag: Array.from(dataMap.values()) });\n            } else {\n                setState({ ...state });\n                return;\n            }\n        }\n    };\n\n    const onAddMenu = (item: RouteComponent) => {\n        setState({ ...state, menuDrag: [...state.menuDrag, { ...item, id: item.id || uuid(), subMenu: [] }] });\n    };\n\n    const onSaveMenu = (menu: RouteComponent[]) => {\n        localStoryController.addMenu(menu);\n    };\n\n    return (\n        <Grid container className={globalStyle.pp2}>\n            <PopupEditRouteMenu\n                isDisplay={handleWithPopupMenu.isDisplayPopup}\n                item={handleWithPopupMenu.itemSelected}\n                onCancel={handleWithPopupMenu.handleClosePopup}\n                onEdit={handleWithPopupMenu.handleConfirmByPopup}\n            />\n            <PopUpConfirm\n                isDisplay={handleWithPopupMenu.isDisplayConfirm}\n                onCancel={handleWithPopupMenu.handleClosePopup}\n                onConfirm={() => handleWithPopupMenu.handleConfirm(handleWithPopupMenu.itemSelected)}\n            />\n\n            <PopupEditRouteMenu\n                isDisplay={handleWithPopupSubMenu.isDisplayPopup}\n                item={handleWithPopupSubMenu.itemSelected}\n                onCancel={handleWithPopupSubMenu.handleClosePopup}\n                onEdit={handleWithPopupSubMenu.handleConfirmByPopup}\n            />\n            <PopUpConfirm\n                isDisplay={handleWithPopupSubMenu.isDisplayConfirm}\n                onCancel={handleWithPopupSubMenu.handleClosePopup}\n                onConfirm={() => handleWithPopupSubMenu.handleConfirm(handleWithPopupSubMenu.itemSelected)}\n            />\n\n            <Grid container className={globalStyle.pp2} justify=\"space-between\">\n                <TextField\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    label=\"Name Menu\"\n                    InputLabelProps={{ shrink: true }}\n                    name=\"name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    error={Boolean(formik.touched.name && formik.errors.name)}\n                    helperText={formik.touched.name && formik.errors.name}\n                />\n                {/* <FormControlLabel\n                    label=\"Is Hidden Menu\"\n                    control={\n                        <Checkbox\n                            onChange={(e) => formik.setValues({ ...formik.values, isHiddenTop: e.target.checked })}\n                            checked={formik.values.isHiddenTop || false}\n                            value={formik.values.isHiddenTop || false}\n                        />\n                    }\n                /> */}\n                <SelectBox\n                    minWidth={200}\n                    shrink={true}\n                    data={['md', 'sm', 'lg', 'xs']}\n                    value={formik.values.screenShowNavBar || (null as any)}\n                    variant=\"outlined\"\n                    // label=\"Screen\"\n                    labelOption={(label) => label}\n                    valueOption={(value) => value}\n                    onChange={(value: any) => formik.setValues({ ...formik.values, screenShowNavBar: value })}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                        onSubmit();\n                    }}\n                >\n                    Save\n                </Button>\n            </Grid>\n            <Grid\n                container\n                className={globalStyle.pp2}\n                style={{\n                    borderBottom: `1px solid ${theme.palette.divider}`,\n                }}\n            >\n                {routers.map((item) => {\n                    return (\n                        <Grid item className={globalStyle.pp1} onClick={() => onAddMenu(item)}>\n                            <Button variant=\"outlined\">{item.link}</Button>\n                        </Grid>\n                    );\n                })}\n                <Grid\n                    item\n                    className={globalStyle.pp1}\n                    onClick={() => onAddMenu({ icon: <AiFillApple />, label: 'New', id: uuid(), link: '' })}\n                >\n                    <Button variant=\"outlined\">Empty not link</Button>\n                </Grid>\n            </Grid>\n            <Grid>\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId=\"board\" type=\"COLUMN\" direction=\"horizontal\" isCombineEnabled={true}>\n                        {(provided) => (\n                            <Grid ref={provided.innerRef} {...provided.droppableProps} container>\n                                {state.menuDrag.map((item, index: number) => (\n                                    <Grid>\n                                        <Column\n                                            key={item.id}\n                                            item={item}\n                                            index={index}\n                                            onDelete={handleWithPopupMenu.handleShowConfirm}\n                                            onEdit={handleWithPopupMenu.handleShowPopup}\n                                            renderItem={(subMenu) => {\n                                                return (\n                                                    <Grid\n                                                        className={classes.itemMenuDrag}\n                                                        container\n                                                        alignItems=\"center\"\n                                                        alignContent=\"center\"\n                                                        justify=\"space-between\"\n                                                    >\n                                                        <Grid>\n                                                            <Grid>{`${subMenu.link} - ${subMenu.label}`}</Grid>\n                                                        </Grid>\n                                                        <Grid>\n                                                            <IconButton\n                                                                onClick={() => {\n                                                                    handleWithPopupSubMenu.handleShowPopup(subMenu);\n                                                                }}\n                                                            >\n                                                                <AiOutlineEdit />\n                                                            </IconButton>\n                                                            <IconButton\n                                                                onClick={() => {\n                                                                    handleWithPopupSubMenu.handleShowConfirm(subMenu);\n                                                                }}\n                                                            >\n                                                                <IoCloseOutline />\n                                                            </IconButton>\n                                                        </Grid>\n                                                    </Grid>\n                                                );\n                                            }}\n                                        />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(SetupMenu);\n","import { Divider, Grid, IconButton, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { routers, routersMap } from 'src/constants/Route';\nimport { localStoryController, menuTeamplateController, roleController } from 'src/controller';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { GrDrag } from 'react-icons/gr';\nimport {\n    Combine,\n    DragDropContext,\n    DraggableLocation,\n    Droppable,\n    DropResult,\n    ResponderProvided,\n} from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport { RouteComponent } from 'src/component/common/NavBar';\nimport Button from 'src/component/common/Button';\nimport { AiFillApple, AiOutlineEdit } from 'react-icons/ai';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport theme from 'src/theme/MuiTheme';\nimport { handleWithPopupHook } from 'src/hook/HandleWithPopupHook';\nimport PopUpConfirm from 'src/component/common/PopupConfirm';\nimport PopupEditRouteMenu from 'src/component/permssion/PopupEditRouteMenu';\nimport ListGrid from 'src/component/common/ListGrid';\nimport TextField from 'src/component/common/TextFiled';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    rootMenuItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(1),\n        padding: theme.spacing(2),\n    },\n}));\n\ntype State = {\n    menuDrag: RouteComponent[];\n};\n\nfunction SetupMenuContainer(props: Props) {\n    const history = useHistory();\n    const crudRole = useCrudHook({\n        controller: menuTeamplateController,\n        initQuery: {\n            pageSize: 100,\n        },\n    });\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const [state, setState] = useState<State>();\n\n    useEffect(() => {}, []);\n\n    return (\n        <Grid container className={globalStyle.pp2}>\n            <PopUpConfirm\n                isDisplay={crudRole.isShowConfirm}\n                onCancel={crudRole.onCancelConfirm}\n                onConfirm={() => crudRole.onDelete(crudRole.itemSelected)}\n            />\n            <Grid container justify=\"center\">\n                <Typography variant=\"h5\">Menu</Typography>\n            </Grid>\n            <Grid container justify=\"space-between\">\n                <Grid className={globalStyle.pp2}>\n                    <TextField variant=\"outlined\" label=\"Search\" />\n                </Grid>\n                <Grid className={globalStyle.pp2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(`/setup-menu/create`)}>\n                        New Menu\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid container className={globalStyle.pp2}>\n                <ListGrid gridGap={20} minWidthItem=\"300px\">\n                    {crudRole.pagingList.rows?.map((item) => (\n                        <Grid className={classes.rootMenuItem}>\n                            <Grid container justify=\"space-between\" alignItems=\"center\">\n                                <Grid>\n                                    <Typography variant=\"h6\">{item.name}</Typography>\n                                </Grid>\n                                <Grid>\n                                    <IconButton color=\"primary\" onClick={() => history.push(`/setup-menu/${item.id}`)}>\n                                        <AiOutlineEdit />\n                                    </IconButton>\n                                    <IconButton\n                                        onClick={() => {\n                                            crudRole.onConfirm(item);\n                                        }}\n                                    >\n                                        <IoCloseOutline />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    ))}\n                </ListGrid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(SetupMenuContainer);\n","import { Grid, makeStyles, Typography, Divider, withStyles } from '@material-ui/core';\nimport React from 'react';\nimport Button from '../component/common/Button';\nimport { FiSave } from 'react-icons/fi';\nimport TextField from '../component/common/TextFiled';\nimport SelectBox from '../component/common/SelectBox';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport NavBar from '../component/common/NavBar';\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        padding: 10,\n        margin: 10,\n    },\n    gridLayout: {\n        '& > *': {\n            margin: 10,\n        },\n    },\n}));\n\nconst MyGrid = withStyles((theme) => ({\n    root: {\n        padding: 10,\n    },\n}))(Grid);\nexport default function UiKit() {\n    const classes = useStyle();\n    return (\n        <MyGrid>\n            <MyGrid className={classes.root}>\n                <Typography variant=\"h3\" align=\"center\">\n                    Button\n                </Typography>\n                <MyGrid className={classes.gridLayout}>\n                    <Button>Normal</Button>\n                    <Button variant=\"contained\">Container</Button>\n                    <Button variant=\"outlined\">Container</Button>\n                    <Button color=\"primary\" variant=\"contained\">\n                        Container\n                    </Button>\n                    <Button color=\"primary\" variant=\"outlined\">\n                        Container\n                    </Button>\n                    <Button color=\"secondary\" variant=\"contained\">\n                        Container Sc\n                    </Button>\n                    <Button size=\"large\" color=\"primary\" variant=\"contained\">\n                        Container Large\n                    </Button>\n                    <Button size=\"medium\" color=\"primary\" variant=\"contained\">\n                        Container Medium\n                    </Button>\n                    <Button size=\"small\" color=\"primary\" variant=\"contained\">\n                        Container Small\n                    </Button>\n                    <Button color=\"primary\" variant=\"contained\" startIcon={<FiSave />}>\n                        Container Small\n                    </Button>\n                    <Button color=\"primary\" variant=\"contained\" endIcon={<FiSave />}>\n                        Container Small\n                    </Button>\n                </MyGrid>\n            </MyGrid>\n            <Divider></Divider>\n            <MyGrid className={classes.root}>\n                <Typography align=\"center\" variant=\"h3\">\n                    Input\n                </Typography>\n                <MyGrid className={classes.gridLayout}>\n                    <TextField label=\"Label\" />\n                    <TextField variant=\"outlined\" label=\"Label\" />\n                    <TextField variant=\"filled\" label=\"Label\" />\n                </MyGrid>\n            </MyGrid>\n            <Divider></Divider>\n            <MyGrid className={classes.root}>\n                <Typography align=\"center\" variant=\"h3\">\n                    Typography\n                </Typography>\n                <MyGrid className={classes.gridLayout}>\n                    <Typography variant=\"h1\">\n                        h1-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"h2\">\n                        h2-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"h3\">\n                        h3-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"h4\">\n                        h4-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"h5\">\n                        h5-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        h6-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography>\n                        normal-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"body1\">\n                        body1-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"body2\">\n                        body2-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"button\">\n                        button-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <br />\n                    <Typography variant=\"caption\">\n                        caption-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <br />\n                    <Typography variant=\"overline\">\n                        overline-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"srOnly\">\n                        srOnly-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"subtitle1\">\n                        subtitle1-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                    <Typography variant=\"subtitle2\">\n                        subtitle2-----Lorem ipsum dolor, sit amet consectetur adipisicing elit. Maxime, laudantium!\n                    </Typography>\n                </MyGrid>\n            </MyGrid>\n            <Divider></Divider>\n            <MyGrid className={classes.root}>\n                <Typography align=\"center\" variant=\"h3\">\n                    Input\n                </Typography>\n                <MyGrid className={classes.gridLayout}>\n                    <SelectBox\n                        data={[\n                            { value: 1, label: 'One' },\n                            { value: 2, label: 'Two' },\n                            { value: 3, label: 'Three' },\n                        ]}\n                        value={2}\n                        labelOption={(e) => e.label}\n                        onChange={(e: any) => {}}\n                        valueOption={(e) => e.value}\n                        variant={'outlined'}\n                    />\n                </MyGrid>\n            </MyGrid>\n            <Divider></Divider>\n            <MyGrid className={classes.root}>\n                <Typography align=\"center\" variant=\"h3\">\n                    Input\n                </Typography>\n                <MyGrid className={classes.gridLayout}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DateTimePicker\n                            label=\"DateTimePicker\"\n                            inputVariant=\"outlined\"\n                            value={new Date()}\n                            onChange={(e) => {}}\n                        />\n\n                        <DateTimePicker\n                            autoOk\n                            ampm={false}\n                            disableFuture\n                            value={new Date()}\n                            onChange={(e) => {}}\n                            label=\"24h clock\"\n                        />\n\n                        <DateTimePicker\n                            disablePast\n                            value={new Date()}\n                            onChange={(e) => {}}\n                            label=\"With Today Button\"\n                            showTodayButton\n                        />\n                    </MuiPickersUtilsProvider>\n                </MyGrid>\n            </MyGrid>\n            <Divider></Divider>\n\n            <MyGrid className={classes.root}>\n                <Typography align=\"center\" variant=\"h3\">\n                    Table\n                </Typography>\n                <MyGrid className={classes.gridLayout}>\n                    <TextField />\n                </MyGrid>\n            </MyGrid>\n            <Divider></Divider>\n        </MyGrid>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Chip, Grid, IconButton, makeStyles, Tooltip, Typography } from '@material-ui/core';\nimport TextField from 'src/component/common/TextFiled';\nimport Button from 'src/component/common/Button';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport ListGrid from 'src/component/common/ListGrid';\nimport { GiTwoCoins } from 'react-icons/gi';\nimport { RiBillLine } from 'react-icons/ri';\nimport { VscError } from 'react-icons/vsc';\nimport { cssInfo } from 'src/constants/Other';\nimport { StatisticByUserHm } from 'src/afi-manager-base-model/controllers/IOrderTrackingController';\nimport { ListFilter } from 'luong-base-model/lib';\nimport { orderTrackingController } from 'src/controller';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { StringUtil } from 'src/helper/StringUtil';\nimport { useHistory } from 'react-router-dom';\nimport { Pagination } from '@material-ui/lab';\nimport { FiImage } from 'react-icons/fi';\nimport DialogShowImage from '../hm-manager/DialogShowImage';\nimport _ from 'lodash';\nimport { OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    rootItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(1),\n    },\n    iconItem: {\n        fontSize: '1.5rem',\n        paddingRight: theme.spacing(1),\n    },\n    frInfoItem: {\n        border: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(1),\n        borderRadius: theme.spacing(1),\n    },\n    frInfoItemCoin: {\n        color: cssInfo.colorCoin,\n    },\n    infoItemError: {\n        color: theme.palette.error.main,\n    },\n}));\nfunction OrderHmWarehouse(props: Props) {\n    const history = useHistory();\n    const classes = useStyle();\n    const [state, setState] = useState();\n    const globalStyles = useGlobalStyles();\n    const [showPopupImage, setShowPopupImage] = useState<{\n        img: string;\n        isDisplay: boolean;\n    }>({\n        img: '',\n        isDisplay: false,\n    });\n    useEffect(() => {\n        return () => {};\n    }, []);\n    const crudOrderHm = useCrudHook<StatisticByUserHm, ListFilter<StatisticByUserHm>>({\n        controller: orderTrackingController as any,\n        listController: orderTrackingController.orderHmForWarehouse,\n        initQuery: {\n            pageSize: 50,\n            searchFields: ['username'],\n        },\n    });\n\n    return (\n        <Grid container>\n            <DialogShowImage\n                isDisplay={showPopupImage?.isDisplay}\n                linkImage={showPopupImage?.img}\n                onCancel={() => {\n                    setShowPopupImage({\n                        img: '',\n                        isDisplay: false,\n                    });\n                }}\n            />\n            <Grid container className={clsx(globalStyles.pt2, globalStyles.pb2)}>\n                <Typography variant=\"h4\">My Order</Typography>\n            </Grid>\n            <Grid container>\n                <Grid>\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"Search\"\n                        onChange={(e) =>\n                            crudOrderHm.setQuery({\n                                ...crudOrderHm.query,\n                                search: e.target.value,\n                                searchFields: ['username'],\n                            })\n                        }\n                    />\n                </Grid>\n            </Grid>\n            <Grid container className={globalStyles.pt2}>\n                <Grid style={{ margin: '16px 0' }}>\n                    <Pagination\n                        count={crudOrderHm.pagingList.totalPages || 1}\n                        page={crudOrderHm.pagingList.page || 1}\n                        variant=\"outlined\"\n                        shape=\"rounded\"\n                        onChange={(e, page) => {\n                            crudOrderHm.setQuery({\n                                ...crudOrderHm.query,\n                                page: page,\n                            });\n                        }}\n                        color=\"primary\"\n                    />\n                </Grid>\n\n                <ListGrid gridGap={10} minWidthItem=\"350px\">\n                    {crudOrderHm.pagingList?.rows?.map((item, index) => {\n                        return (\n                            <Grid className={classes.rootItem}>\n                                <Grid container justify=\"space-between\">\n                                    <Grid>\n                                        <Chip label={item.status} color=\"secondary\" />\n                                    </Grid>\n                                    <Grid>\n                                        <IconButton\n                                            disabled={!Boolean(item.imgScreenShot)}\n                                            onClick={() => {\n                                                setShowPopupImage({\n                                                    img: item.imgScreenShot || '',\n                                                    isDisplay: true,\n                                                });\n                                            }}\n                                            size=\"small\"\n                                        >\n                                            <FiImage />\n                                        </IconButton>\n                                    </Grid>\n                                    <Grid>\n                                        <Typography variant=\"caption\">\n                                            {item.totalOrder} order (\n                                            {StringUtil.formatterMoney.format(item.totalPrice || 0)})\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid className={globalStyles.pt2}>\n                                    <Typography variant=\"h6\">{item.username}</Typography>\n                                </Grid>\n                                <Grid container className={clsx(globalStyles.pt1)}>\n                                    <Grid xs={6}>\n                                        <Tooltip title=\"Total price done\">\n                                            <Grid className={clsx(globalStyles.pr1, classes.frInfoItemCoin)}>\n                                                <Grid container alignItems=\"center\" className={classes.frInfoItem}>\n                                                    <Grid className={clsx(classes.iconItem)}>\n                                                        <GiTwoCoins />\n                                                    </Grid>\n                                                    <Grid>\n                                                        <Typography>\n                                                            {StringUtil.formatterMoney.format(item.totalPriceDone || 0)}\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid xs={6}>\n                                        <Tooltip title=\"Total order done\">\n                                            <Grid className={globalStyles.pl1}>\n                                                <Grid container alignItems=\"center\" className={classes.frInfoItem}>\n                                                    <Grid className={clsx(classes.iconItem)}>\n                                                        <RiBillLine />\n                                                    </Grid>\n                                                    <Grid>\n                                                        <Typography>{item.totalDone} order</Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Tooltip>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container className={clsx(globalStyles.pt1)}>\n                                    <Tooltip title=\"Order and price error\">\n                                        <Grid\n                                            container\n                                            alignItems=\"center\"\n                                            className={clsx(classes.frInfoItem, classes.infoItemError)}\n                                            justify=\"center\"\n                                        >\n                                            <Grid className={clsx(classes.iconItem)}>\n                                                <VscError />\n                                            </Grid>\n                                            <Grid>\n                                                <Typography>{`${StringUtil.formatterMoney.format(\n                                                    item.totalPriceError || 0,\n                                                )} - ${item.totalError} order`}</Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Tooltip>\n                                </Grid>\n                                <Grid className={globalStyles.pt1}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                            history.push(`/order-hm-warehouse/${item.userHmId}`);\n                                        }}\n                                        size=\"small\"\n                                        fullWidth\n                                    >\n                                        See Detail\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        );\n                    })}\n                </ListGrid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(OrderHmWarehouse);\n","import React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { Button, Card, Chip, Grid, makeStyles, Paper, Popover, Tooltip, Typography } from '@material-ui/core';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { IoCopyOutline, IoCreateOutline } from 'react-icons/io5';\nimport { IconButton } from '@material-ui/core';\nimport TextDesc from '../common/TextDesc';\nimport { OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\nimport theme from 'src/theme/MuiTheme';\nimport { checkoutCode } from 'src/constants/IMacros';\nimport { dispatch } from '../../rematch/store';\nimport { Giftcard } from '../../container/hm-manager/ProgressAutoOrder';\nimport { cssInfo } from 'src/constants/Other';\nimport { GiTwoCoins } from 'react-icons/gi';\nimport { RiAccountPinCircleFill } from 'react-icons/ri';\nimport { BiKey } from 'react-icons/bi';\ntype Props = {\n    item: OrderTracking;\n};\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.spacing(2),\n    },\n    rootItem: {\n        borderRadius: theme.spacing(1),\n        border: `1px solid ${theme.palette.divider}`,\n        padding: theme.spacing(1),\n    },\n    frCoin: {\n        color: cssInfo.colorCoin,\n    },\n    frCoinBuy: {\n        color: theme.palette.error.main,\n    },\n    icon: {\n        fontSize: '1.5rem',\n        paddingRight: theme.spacing(1),\n    },\n    coin: {\n        fontSize: '1.5rem',\n        paddingRight: theme.spacing(1),\n    },\n    popoverRoot: {\n        padding: theme.spacing(1),\n    },\n}));\nfunction OrderHmDetailForWarehouseItemList(props: Props) {\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n\n    const [state, setState] = useState<{\n        isOpenMoreInfo: boolean;\n    }>({\n        isOpenMoreInfo: false,\n    });\n\n    const refChipInfo = useRef(null);\n\n    const getChipStatus = (item: OrderTracking): React.ReactElement => {\n        if (item.errorDesc) {\n            return (\n                <Chip\n                    style={{\n                        background: theme.palette.error.light,\n                    }}\n                    color=\"primary\"\n                    label={item.errorDesc}\n                />\n            );\n        }\n        if (item.isOrder && item.orderId) {\n            return (\n                <Chip\n                    style={{\n                        background: theme.palette.success.light,\n                    }}\n                    color=\"primary\"\n                    label={item.orderId}\n                />\n            );\n        }\n        if (item.isOrder) {\n            return <Chip label={'Added to cart'} />;\n        }\n        if (!item.isRegister) {\n            return <Chip label={'Created'} />;\n        }\n        if (item.isRegister && !item.isOrder) {\n            return <Chip label={'Registed'} />;\n        }\n        \n     \n        return <></>;\n    };\n\n    const getStatusText = (item: OrderTracking): string => {\n        if (!item.isRegister) {\n            return 'Created';\n        }\n        if (item.isRegister && !item.isOrder) {\n            return 'Registed';\n        }\n        if (item.isOrder && item.orderId) {\n            return item.orderId || '';\n        }\n        if (item.isOrder) {\n            return 'Added to cart';\n        }\n        return '';\n    };\n\n    useEffect(() => {\n        return () => {};\n    }, []);\n\n    return (\n        <Grid className={classes.root}>\n            <Grid container justify=\"space-between\">\n                <Grid>{getChipStatus(props.item)}</Grid>\n            </Grid>\n            <Grid className={clsx(globalStyle.mt1, globalStyle.mb1)}>\n                <Grid container alignItems=\"center\">\n                    <Grid className={classes.icon}>\n                        <RiAccountPinCircleFill />\n                    </Grid>\n                    <Grid>\n                        <Typography variant=\"h6\">{props.item.email}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid container alignItems=\"center\">\n                    <Grid className={globalStyle.pr1}>\n                        <BiKey />\n                    </Grid>\n                    <Grid>\n                        <Typography variant=\"caption\">{props.item.userHM?.password}</Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                className={clsx(globalStyle.pt1, globalStyle.pb1)}\n                style={{\n                    minHeight: 80,\n                }}\n            >\n                {props.item?.productOrder?.map((product) => {\n                    return (\n                        <Grid container>\n                            <Grid container justify=\"space-between\">\n                                <Grid>\n                                    <Grid container alignContent=\"center\">\n                                        <Typography>{product.productId}</Typography>\n                                        <Typography\n                                            variant=\"caption\"\n                                            color=\"textSecondary\"\n                                        >{`(${product.quantity})`}</Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid>\n                                    <Typography variant=\"caption\">Size:{product.size}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n            <Grid container className={clsx(globalStyle.pt1)}>\n                <Grid xs={12}>\n                    <Grid\n                        className={clsx(globalStyle.pr1, classes.frCoin)}\n                        // style={{\n                        //     color:\n                        //         props.item.totalPrice && props.item.totalPrice > 5\n                        //             ? undefined\n                        //             : theme.palette.success.main,\n                        // }}\n                    >\n                        <Grid container alignItems=\"center\" className={classes.rootItem} justify=\"center\">\n                            <Grid className={clsx(classes.coin)}>\n                                <GiTwoCoins />\n                            </Grid>\n                            <Grid>\n                                <Typography>{props.item.totalPrice} (Price)</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {/* <Grid xs={6}>\n                    <Grid className={clsx(globalStyle.pr1, classes.frCoinBuy)}>\n                        <Grid container alignItems=\"center\" className={classes.rootItem} justify=\"center\">\n                            <Grid className={clsx(classes.coin)}>\n                                <GiTwoCoins />\n                            </Grid>\n                            <Grid>\n                                <Typography>{`${calcBuyPrice(props.item.totalPrice || 0)}`} (Price Buy)</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid> */}\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default React.memo(OrderHmDetailForWarehouseItemList);\n","import firebaseApp from 'firebase';\n\nconst firebaseConfigData = {\n    apiKey: 'AIzaSyBIEj0PaA0EC-Ntbsr1SYHqICMXC7hZoK8',\n    authDomain: 'hmpartner-a9a0d.firebaseapp.com',\n    databaseURL: 'https://hmpartner-a9a0d-default-rtdb.europe-west1.firebasedatabase.app',\n    projectId: 'hmpartner-a9a0d',\n    storageBucket: 'hmpartner-a9a0d.appspot.com',\n    messagingSenderId: '526807548143',\n    appId: '1:526807548143:web:6e89ea73bd348feea91b1a',\n};\n\nexport const firebaseConfig = firebaseApp.initializeApp(firebaseConfigData,'hm-extension');\n","import moment from \"moment\";\n\nexport function downloadCSV<T>(arr: T[], fileName?: string) {\n    let csvData = jsonToCSV(arr);\n    var link = document.createElement('a');\n    link.setAttribute('href', 'data:text/csv;charset=utf-8,%EF%BB%BF' + encodeURI(csvData));\n    link.setAttribute('download', fileName? `${fileName}.csv`:`${moment(new Date()).format('HH:mm yyyy/MM/dd')}.csv`);\n    link.click();\n}\n\nexport function jsonToCSV<T>(arr: T[]) {\n    var array = typeof arr != 'object' ? JSON.parse(arr) : arr;\n    var str = '';\n    for (var i = 0; i < array.length; i++) {\n        var line = '';\n        for (var index in array[i]) {\n            if (line !== '') line += ',';\n            line += array[i][index];\n        }\n        str += line + '\\r\\n';\n    }\n    return str;\n}\n","import { OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\nimport {\n    countBoughtProduct,\n    countProduct,\n    getProductStatus,\n    OrderStatus,\n    totalAmount,\n    totalCompletedAmount,\n} from './CalculatorHmPrice';\nimport { downloadCSV } from './DownloadUtils';\n\nexport interface ExportOrderModel {\n    status: OrderStatus | string;\n    error: string;\n    productId: string;\n    size: string;\n    price: string;\n    orderId: string;\n}\n\nexport const orderToCSVModel = (orders: OrderTracking[]) => {\n    return orders\n        .map((o) =>\n            o.productOrder\n                ?.map((p) => Array.from(new Array(p.quantity || 1)).map((_) => ({ ...p, quantity: 1 })))\n                .reduce((p, arr) => (arr = arr.concat(p)), [])\n                .map((p) => {\n                    let status = getProductStatus(p, o);\n                    return {\n                        email: o.email,\n                        productId: p.productId,\n                        size: p.size,\n                        price: p.price || '',\n                        orderId: o.orderId || '',\n                        status,\n                        error: status === 'Error' && o.errorDesc ? o.errorDesc : '',\n                    } as ExportOrderModel;\n                })\n        )\n        .reduce((products, arr) => arr?.concat(products || []), [])?.reverse();\n};\n\nexport const downloadOrders = (orders: OrderTracking[]) => {\n    let orderCSV = orderToCSVModel(orders) || [];\n    let csv = [];\n    \n    csv.push({\n        label: 'Total items',\n        value: countProduct(orders),\n    });\n\n    csv.push({\n        label: 'Total completed items',\n        value: countBoughtProduct(orders),\n    });\n\n    csv.push({\n        label: 'Total amount',\n        value: totalAmount(orders),\n    });\n\n    csv.push({\n        label: 'Total completed amount',\n        value: totalCompletedAmount(orders),\n    });\n\n    csv.push({});\n\n    csv.push({\n        email:\"Email\",\n        productId: 'Variant / Product ID',\n        size: 'Size',\n        price: 'Price',\n        orderId: 'Order Number',\n        status: 'Status',\n        error: 'Note',\n    } as ExportOrderModel);\n\n    csv = csv.concat(orderCSV);\n\n    downloadCSV(csv, orders && orders.length > 0 && orders[0].userHM ? orders[0].userHM.username : undefined);\n};\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { Grid, makeStyles, MenuItem, Select, Typography, Zoom } from '@material-ui/core';\nimport ListGrid from '../../component/common/ListGrid';\nimport { useGlobalStyles } from '../../theme/GlobalStyle';\nimport { useParams } from 'react-router-dom';\nimport { orderTrackingController } from 'src/controller';\nimport theme from 'src/theme/MuiTheme';\nimport { DataFirebaseHm, OrderTracking } from 'src/afi-manager-base-model/model/OrderTracking';\nimport { IconButton } from '@material-ui/core';\nimport { IoDownloadOutline } from 'react-icons/io5';\nimport { dispatch } from '../../rematch/store';\nimport { countBoughtProduct, countProduct, totalAmount, totalCompletedAmount } from 'src/helper/CalculatorHmPrice';\nimport { firebaseConfig } from 'src/constants/FirebaseConfig';\nimport _ from 'lodash';\nimport { UserHm } from 'src/afi-manager-base-model/model/UserHm';\nimport OrderHmDetailForWarehouseItemList from 'src/component/warehouse/OrderHmDetailForWarehouseItemList';\nimport { downloadOrders } from 'src/helper/DownloadOrder';\n\ntype Props = {};\nconst useStyle = makeStyles((theme) => ({\n    statuses: {\n        '& p': {\n            padding: 10,\n            paddingTop: 5,\n            paddingBottom: 5,\n        },\n    },\n    giftCardForm: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridGap: 16,\n        '& .MuiFormControl-fullWidth': {\n            marginTop: 16,\n        },\n    },\n}));\n\nexport enum OrderStatus {\n    none = 'none',\n    initial = 'initial',\n    created = 'created',\n    addedToCard = 'addedToCard',\n    done = 'done',\n    error = 'error',\n}\nfunction OrderHmDetailForWarehouse(props: Props) {\n    const { userHmId } = useParams<{ userHmId: string }>();\n    const [userHm, setUserHm] = useState<UserHm>({} as UserHm);\n    const [selectedStatus, setSelectedStatus] = useState<OrderStatus>(OrderStatus.none);\n\n    const [state, setState] = useState<{ isListening: boolean; orderTracking: OrderTracking[] }>({\n        isListening: false,\n        orderTracking: [],\n    });\n\n    const classes = useStyle();\n    const globalStyle = useGlobalStyles();\n    const onListeningNotication = () => {\n        var getDos = firebaseConfig.firestore().collection('notication_order_update').doc(userHmId.toString());\n        console.log({\n            userHmId,\n        });\n        getDos.onSnapshot(\n            {\n                includeMetadataChanges: true,\n            },\n            function (doc) {\n                setState({\n                    ...state,\n                    isListening: true,\n                });\n                if (doc.data()) {\n                    const dataFromFirbase: DataFirebaseHm | undefined = doc.data();\n                    const checkItem = state.orderTracking?.find((item) => {\n                        return item.orderId == dataFromFirbase?.orderId;\n                    });\n\n                    if (!checkItem) {\n                        // dispatch.notification.success(\n                        //     `Cập nhật orderId thành công ${dataFromFirbase?.orderId} - ${dataFromFirbase?.email}`,\n                        // );\n                    }\n                    refeshList();\n                }\n            },\n        );\n    };\n\n    const refeshList = () => {\n        orderTrackingController.orderHmDetailForWarehouse({ orderHmId: userHmId }).then((res) => {\n            setState({\n                ...state,\n                orderTracking: orderByEmail(res.rows || []) || [],\n            });\n        });\n    };\n\n    const orderByEmail = (orderTrackings: OrderTracking[]): OrderTracking[] => {\n        return _.sortBy(orderTrackings, (item) => getIndexEmailAfiOrderHm(item), 'desc');\n    };\n    const getIndexEmailAfiOrderHm = (item: OrderTracking): number => {\n        let textSplit = item.email || '';\n        let startSplit = textSplit.lastIndexOf('+hm');\n        if (startSplit < 0) {\n            startSplit = textSplit.lastIndexOf('+afi');\n        }\n        startSplit += 4;\n        const endSplit = textSplit.indexOf('@gmail.com');\n        const indexOfEmail = Number((textSplit = textSplit.substring(startSplit, endSplit)));\n        return indexOfEmail;\n    };\n\n    useEffect(() => {\n        const body: any = document.querySelector('#root');\n        refeshList();\n        body.scrollIntoView(\n            {\n                behavior: 'smooth',\n            },\n            500,\n        );\n    }, []);\n\n    // useEffect(() => {\n    //     onChagngeGiftCard(giftCard);\n    // }, [giftCard]);\n\n    const filterByStatus = (rows: OrderTracking[]): OrderTracking[] => {\n        return rows?.filter((r) => {\n            let isValid = false;\n            switch (selectedStatus) {\n                case OrderStatus.done:\n                    isValid = r.orderId != null && r.orderId.length > 0;\n                    break;\n                case OrderStatus.error:\n                    isValid = r.errorDesc != null && r.errorDesc.length > 0;\n                    break;\n                case OrderStatus.addedToCard:\n                    isValid =\n                        (r.orderId == null || r.orderId.length === 0) &&\n                        (r.errorDesc == null || r.errorDesc.length === 0) &&\n                        r.isOrder\n                            ? r.isOrder\n                            : false;\n                    break;\n                case OrderStatus.created:\n                    isValid =\n                        (r.orderId == null || r.orderId.length === 0) &&\n                        (r.errorDesc == null || r.errorDesc.length === 0) &&\n                        (r.isOrder == null || r.isOrder === false) &&\n                        r.isRegister\n                            ? r.isRegister\n                            : false;\n                    break;\n                case OrderStatus.initial:\n                    isValid =\n                        (r.orderId == null || r.orderId.length === 0) &&\n                        (r.errorDesc == null || r.errorDesc.length === 0) &&\n                        (r.isOrder == null || r.isOrder === false) &&\n                        (r.isRegister == null || r.isRegister === false)\n                            ? true\n                            : false;\n                    break;\n                default:\n                    isValid = true;\n                    break;\n            }\n            return isValid;\n        });\n    };\n\n    const renderOrderStatusSummary = () => {\n        return (\n            <Grid container className={classes.statuses} justify=\"center\">\n                <Typography>Total Order: {state.orderTracking.length}</Typography>\n                <Typography>Registed: {state.orderTracking.filter((i) => i.isRegister).length}</Typography>\n                <Typography>Added to cart: {state.orderTracking.filter((i) => i.isOrder).length}</Typography>\n                <Typography>Complete: {state.orderTracking.filter((i) => i.orderId).length}</Typography>\n                <Typography>Error: {state.orderTracking.filter((i) => i.errorDesc).length}</Typography>\n            </Grid>\n        );\n    };\n\n    const renderPaymentStatusSummary = () => {\n        return (\n            <Grid container className={classes.statuses} justify=\"center\">\n                <Typography>Totol amount: {totalAmount(state.orderTracking || [])}</Typography>\n\n                <Typography>Total completed amount: {totalCompletedAmount(state.orderTracking || [])}</Typography>\n\n                <Typography>Total products: {countProduct(state.orderTracking || [])}</Typography>\n\n                <Typography>Total products purchased : {countBoughtProduct(state.orderTracking || [])}</Typography>\n            </Grid>\n        );\n    };\n\n    return (state.orderTracking.length || 0) > 0 ? (\n        <Grid\n            container\n            style={{\n                minHeight: '100vh',\n                background: 'white',\n                padding: theme.spacing(1),\n            }}\n        >\n            <Grid container justify=\"center\" className={clsx(globalStyle.pp2)}>\n                <Grid md={10}>\n                    <Grid container justify=\"center\">\n                        <Typography align=\"center\" variant=\"h4\">\n                            Chi tiết đơn hàng\n                            <IconButton\n                                onClick={() => {\n                                    downloadOrders(state.orderTracking || []);\n                                    dispatch.notification.success('Download successfully!');\n                                }}\n                                size=\"small\"\n                            >\n                                <IoDownloadOutline />\n                            </IconButton>\n                        </Typography>\n                        {renderPaymentStatusSummary()}\n                    </Grid>\n\n                    <Select\n                        fullWidth\n                        variant=\"outlined\"\n                        value={selectedStatus}\n                        onChange={(e) => {\n                            setSelectedStatus(e.target.value as OrderStatus);\n                        }}\n                    >\n                        <MenuItem value={OrderStatus.none}>All</MenuItem>\n                        <MenuItem value={OrderStatus.initial}>Khởi tạo</MenuItem>\n                        <MenuItem value={OrderStatus.created}>Đã tạo tài khoản</MenuItem>\n                        <MenuItem value={OrderStatus.addedToCard}>Đã thêm vào giỏ hàng</MenuItem>\n                        <MenuItem value={OrderStatus.done}>Đã thanh toán</MenuItem>\n                        <MenuItem value={OrderStatus.error}>Lỗi</MenuItem>\n                    </Select>\n\n                    <Grid container className={clsx(globalStyle.pt2, globalStyle.pb2)}>\n                        <ListGrid minWidthItem={'320px'} gridGap={20}>\n                            {filterByStatus(state.orderTracking || []).map((item, index) => (\n                                <Zoom in={true} timeout={index * 50}>\n                                    <Grid>\n                                        <OrderHmDetailForWarehouseItemList item={item} />\n                                    </Grid>\n                                </Zoom>\n                            ))}\n                        </ListGrid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    ) : (\n        <Grid container justify=\"center\">\n            <Typography variant=\"h2\">Tài khoản này chưa tiến hành lấy order hoặc order bị trống</Typography>\n        </Grid>\n    );\n}\n\nexport default React.memo(OrderHmDetailForWarehouse);\n","import { Button, Chip, Grid, IconButton, makeStyles, Slide, TextField, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { history } from 'src/constants/RouterAuthen';\nimport * as Yup from 'yup';\nimport { localStoryController, userController } from '../controller';\nimport { Dispatch, RootState } from '../rematch/store';\nimport { useGlobalStyles } from '../theme/GlobalStyle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100vh',\n        background: \"url('https://devforum.info/DEMO/LoginForm1/bg.jpg')\",\n        backgroundSize: 'cover',\n    },\n}));\n\nexport default function LoginWithCode() {\n    const { code } = useParams<{ code: string }>();\n    useEffect(() => {\n        const converToJwt = code.split('aleafi').join('.');\n        localStorage.setItem('jwt', converToJwt);\n        window.location.href = '/login';\n    }, []);\n    const classes = useStyles();\n    const globalStyles = useGlobalStyles();\n    return <Grid container justify=\"center\" alignItems=\"center\" className={classes.root}></Grid>;\n}\n","import React from 'react';\nimport { RouteComponentProps, StaticContext } from 'react-router';\nimport Login from 'src/container/Login';\nimport { AiFillDashboard, AiOutlineLineChart } from 'react-icons/ai';\nimport CheckTrackingHM from 'src/container/CheckTrackingHM';\nimport Register from 'src/container/Register';\nimport ToolAutoChangeTextHM from 'src/container/tool/ToolAutoChangeTextHM';\nimport UserHmManager from 'src/container/hm-manager/UserHmManager';\nimport ProgressAutoOrder from 'src/container/hm-manager/ProgressAutoOrder';\nimport ExportExcel from 'src/container/hm-manager/ExportExcel';\nimport { FaFileCsv, FaUserCheck } from 'react-icons/fa';\nimport StaticByUserHm from 'src/container/hm-manager/StaticByUserHm';\nimport FixDataTool from 'src/container/hm-manager/FixDataTool';\nimport SyncData from 'src/container/hm-manager/SyncData';\nimport { FiXOctagon } from 'react-icons/fi';\nimport { TiArrowSyncOutline, TiThMenuOutline } from 'react-icons/ti';\nimport StatisticAleTeam from 'src/container/hm-manager/StatisticAleTeam';\nimport PermissionContainer from 'src/container/permission/PermissionContainer';\nimport RoleContainer from 'src/container/permission/RoleContainer';\nimport SetupRoleContainer from 'src/container/permission/SetupRoleContainer';\nimport UserManager from 'src/container/permission/UserManager';\nimport SetupMenu from 'src/container/permission/SetupMenu';\nimport SetupMenuContainer from 'src/container/permission/SetupMenuContainer';\nimport { RiBillLine } from 'react-icons/ri';\nimport { GoTextSize } from 'react-icons/go';\nimport { MdLocalShipping } from 'react-icons/md';\nimport { GiHand } from 'react-icons/gi';\nimport { HiUserGroup } from 'react-icons/hi';\nimport UiKit from 'src/container/UiKit';\nimport OrderHmWarehouse from 'src/container/warehouse/OrderHmWarehouse';\nimport OrderHmDetailForWarehouse from 'src/container/warehouse/OrderHmDetailForWarehouse';\nimport LoginWithCode from 'src/container/LoginWithCode';\nimport RedirectToSystemSalesManager from 'src/container/permission/RedirectToSystemSalesManager';\nexport enum TypeScreen {\n    public = 'public',\n    authenMenu = 'authenMenu',\n    authenNotMenu = 'authenNotMenu',\n}\n\nexport const routers: RouteComponent[] = [\n    {\n        component: UiKit,\n        label: 'UI Kit',\n        link: '/ui-kit',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <AiFillDashboard />,\n    },\n    {\n        component: Login,\n        label: 'Login',\n        link: '/login',\n        typeAuthen: TypeScreen.public,\n        icon: <AiFillDashboard />,\n    },\n    {\n        component: ToolAutoChangeTextHM,\n        label: 'Tool change text',\n        link: '/tool-change-text',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <GoTextSize />,\n    },\n    {\n        component: UserHmManager,\n        label: 'User HM',\n        link: '/user-hm',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <RiBillLine />,\n    },\n    {\n        component: ProgressAutoOrder,\n        label: 'Progress',\n        link: '/progress-order/:userHmId',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <AiFillDashboard />,\n    },\n    {\n        component: ExportExcel,\n        label: 'Export Data',\n        link: '/export-data',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <FaFileCsv />,\n    },\n    {\n        component: FixDataTool,\n        label: 'Fix data',\n        link: '/fix-data-tool',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <FiXOctagon />,\n    },\n    {\n        component: StatisticAleTeam,\n        label: 'Statistic Ale Team',\n        link: '/statistic-ale-team',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <AiOutlineLineChart />,\n    },\n\n    {\n        component: StaticByUserHm,\n        label: 'Statistic user',\n        link: '/statistic-user-hm',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <AiOutlineLineChart />,\n    },\n\n    {\n        component: CheckTrackingHM,\n        label: 'Check Tracking',\n        link: '/check-tracking',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <MdLocalShipping />,\n    },\n    {\n        component: PermissionContainer,\n        label: 'Permssion',\n        link: '/permission',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <GiHand />,\n    },\n    {\n        component: RoleContainer,\n        label: 'Role',\n        link: '/role',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <FaUserCheck />,\n    },\n    {\n        component: SetupMenuContainer,\n        label: 'Role',\n        link: '/setup-menu',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <TiThMenuOutline />,\n    },\n    {\n        component: SetupRoleContainer,\n        label: 'Role',\n        link: '/role/:id',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <AiFillDashboard />,\n    },\n    {\n        component: UserManager,\n        label: 'User Manager',\n        link: '/user-manager',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <HiUserGroup />,\n    },\n    {\n        component: SetupMenu,\n        label: 'Setup Menu',\n        link: '/setup-menu/:id',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <AiFillDashboard />,\n    },\n    {\n        component: OrderHmWarehouse,\n        label: 'Order HM',\n        link: '/order-hm-warehouse',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <RiBillLine />,\n    },\n    {\n        component: OrderHmDetailForWarehouse,\n        label: 'Order HM',\n        link: '/order-hm-warehouse/:userHmId',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <RiBillLine />,\n    },\n    {\n        component: LoginWithCode,\n        label: 'Login with code',\n        link: '/loginWithCode/:code',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <RiBillLine />,\n    },\n    {\n        component: RedirectToSystemSalesManager,\n        label: 'Quản lý bán hàng',\n        link: '/redirect/sale-manager',\n        typeAuthen: TypeScreen.authenMenu,\n        icon: <RiBillLine />,\n    },\n];\n\n// export const getRouteByRole = (role: Role): string => {\n// \tif (role === Role.ADMIN) return \"/business\";\n// \tif (role ===  Role.BUSINESS) return \"/customer\";\n// \telse return \"/search-tracking\";\n// };\nexport const routersMap = new Map(routers.map((item) => [item.link, item]));\n\nexport interface RouteComponent {\n    link: string;\n    component: React.ComponentType<any> | React.ComponentType<RouteComponentProps<any, StaticContext, any>>;\n    typeAuthen: TypeScreen;\n    icon: React.ReactElement;\n    label: string;\n}\n","import {\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ListFilter } from 'luong-base-model/lib';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { StatisticByUserHm } from 'src/afi-manager-base-model/controllers/IOrderTrackingController';\nimport TableCrud, { ColumnTable } from 'src/component/common/TableCrud';\nimport { orderTrackingController } from 'src/controller';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { useGlobalStyles } from 'src/theme/GlobalStyle';\nimport theme from 'src/theme/MuiTheme';\nimport clsx from 'clsx';\nimport { handleWithPopupHook } from 'src/hook/HandleWithPopupHook';\nimport PopupMergeToUser from 'src/component/AutoOrderHm/PopupMergeToUser';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { CgMergeVertical } from 'react-icons/cg';\nexport default function StaticByUserHm() {\n    const [column, setColumn] = useState<ColumnTable<StatisticByUserHm>[]>([\n        {\n            id: 'createdAt',\n            label: 'Created At',\n            isSort: true,\n        },\n        {\n            id: 'username',\n            label: 'Username',\n            acceptSearch: true,\n            isSort: true,\n        },\n        {\n            id: 'emailUser',\n            label: 'Email User',\n            acceptSearch: true,\n            isSort: true,\n        },\n        {\n            id: 'totalOrder',\n            label: 'Order',\n            isSort: true,\n        },\n        {\n            id: 'totalRegister',\n            label: 'Register',\n            isSort: true,\n        },\n        {\n            id: 'totalAddCart',\n            label: 'Add Cart',\n            isSort: true,\n        },\n        {\n            id: 'totalDone',\n            label: 'Done',\n            isSort: true,\n        },\n        {\n            id: 'totalError',\n            label: 'Error',\n            isSort: true,\n        },\n        {\n            id: 'totalPrice',\n            label: 'Price',\n            isSort: true,\n        },\n        {\n            id: 'totalPriceError',\n            label: 'Price Error',\n            isSort: true,\n        },\n        {\n            id: 'status',\n            label: 'Status',\n            isSort: true,\n            acceptSearch: true,\n        },\n        {\n            id: 'action' as any,\n            label: 'Action',\n        },\n    ]);\n    const crud = useCrudHook<StatisticByUserHm, ListFilter<StatisticByUserHm>>({\n        controller: orderTrackingController as any,\n        listController: orderTrackingController.statisticByUserHm,\n        initQuery: {\n            pageSize: 50,\n            searchFields: ['username'],\n        },\n    });\n    const globalStyle = useGlobalStyles();\n\n    const handleWithPopupMerge = handleWithPopupHook<{\n        userHmId?: string;\n        userId?: string;\n    }>({\n        onConfirmByPopup: (item) => {\n            orderTrackingController\n                .mergeOrderTrackingToUser({\n                    ...item,\n                    userHmId: item?.userHmId || (null as any),\n                })\n                .then((res) => {\n                    crud.onRefreshList();\n                });\n        },\n    });\n\n    const warningEmailMergeWrong = (item: StatisticByUserHm): React.ReactElement => {\n        let check = true;\n        const splitUserName = item.username?.trim()?.substring(0, item.username?.indexOf('+'));\n        const splitEmailUser = item.emailUser?.trim()?.substring(0, item.emailUser?.indexOf('@'));\n\n        if ((splitUserName == splitEmailUser || item.username == item.emailUser) && Boolean(item.emailUser)) {\n            return <Grid>{item.username}</Grid>;\n        }\n        return (\n            <Grid\n                style={{\n                    color: theme.palette.error.main,\n                }}\n            >\n                {item.username}\n            </Grid>\n        );\n    };\n\n    const renderStatus = (): React.ReactElement => {\n        return <Grid></Grid>;\n    };\n\n    return (\n        <Grid\n            style={{\n                padding: theme.spacing(1),\n            }}\n        >\n            <PopupMergeToUser\n                isDisplay={handleWithPopupMerge.isDisplayPopup}\n                item={handleWithPopupMerge.itemSelected}\n                onCancel={handleWithPopupMerge.handleClosePopup}\n                onEdit={handleWithPopupMerge.handleConfirmByPopup}\n            />\n            <Grid\n                style={{\n                    background: theme.palette.background.paper,\n                }}\n                container\n            >\n                <Grid item xs={12} container justify=\"space-between\" className={clsx(globalStyle.pt2, globalStyle.pb2)}>\n                    <Typography variant=\"h4\">Thống kê order</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <TableCrud<StatisticByUserHm>\n                        column={column}\n                        id=\"9e01d63f-4bae-40de-985f-97fafcc9ebdb\"\n                        data={crud.pagingList}\n                        onQuery={(query) => {\n                            crud.setQuery({\n                                ...crud.query,\n                                ...query,\n                            });\n                        }}\n                        pageSize={[50, 100, 200, 500]}\n                        isShowHighlightText={true}\n                        query={crud.query}\n                        onCustomerCell={(item) => {\n                            return {\n                                ...item,\n                                totalPrice: Number(item.totalPrice).toFixed(2),\n                                totalPriceError: Number(item.totalPriceError).toFixed(2),\n                                createdAt: moment(item.createdAt).format('DD/MM/YY hh:mm'),\n                                username: warningEmailMergeWrong(item),\n                                action: (\n                                    <Grid>\n                                        <IconButton\n                                            color=\"primary\"\n                                            onClick={() => {\n                                                handleWithPopupMerge.handleShowPopup({\n                                                    userHmId: item.userHmId,\n                                                    userId: item.userId,\n                                                });\n                                            }}\n                                        >\n                                            <CgMergeVertical />\n                                        </IconButton>\n                                    </Grid>\n                                ),\n                            };\n                        }}\n                    ></TableCrud>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","import {\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ListFilter } from 'luong-base-model/lib';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { IoMdCopy } from 'react-icons/io';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { StatisticByUserHm } from 'src/afi-manager-base-model/controllers/IOrderTrackingController';\nimport { UserAccount } from 'src/afi-manager-base-model/model/User';\nimport PopUpConfirm from 'src/component/common/PopupConfirm';\nimport TableCrud, { ColumnTable } from 'src/component/common/TableCrud';\nimport PopupUserAccount from 'src/component/permssion/PopupUserAccount';\nimport { orderTrackingController, userController } from 'src/controller';\nimport { useCrudHook } from 'src/hook/useCrudHook';\nimport { dispatch } from 'src/rematch/store';\nimport theme from 'src/theme/MuiTheme';\n\nexport default function UserManager() {\n    const [column, setColumn] = useState<ColumnTable<UserAccount>[]>([\n        {\n            id: 'username',\n            label: 'User Name',\n        },\n        {\n            id: 'fullName',\n            label: 'Full Name',\n            isSort: true,\n            acceptSearch: true,\n        },\n        {\n            id: 'email',\n            label: 'Email',\n            isSort: true,\n            acceptSearch: true,\n        },\n        {\n            id: 'phoneNumber',\n            label: 'Phone',\n            isSort: true,\n            acceptSearch: true,\n        },\n        {\n            id: 'role',\n            label: 'Role',\n        },\n        {\n            id: 'action' as any,\n            label: 'Action',\n        },\n    ]);\n    const crudUserAccount = useCrudHook<UserAccount>({\n        controller: userController,\n        listController: userController.listUserForAdmin,\n        saveController: userController.saveUserForAdmin,\n        initQuery: {\n            pageSize: 50,\n            searchFields: ['fullName', 'phoneNumber', 'email'],\n        },\n    });\n\n    const actionCpn = (item: UserAccount): React.ReactElement => {\n        return (\n            <Grid>\n                <IconButton color=\"primary\" onClick={() => crudUserAccount.onShowPopup(item)}>\n                    <AiOutlineEdit />\n                </IconButton>\n                <IconButton\n                    color=\"secondary\"\n                    onClick={() => {\n                        userController.getByJwt({ userId: item.id || '' }).then((res) => {\n                            const login = `${window.location.origin}/loginWithCode/${res.jwt\n                                ?.split('.')\n                                .join('aleafi')}`;\n                            navigator.clipboard?.writeText(login || '')?.then(\n                                function () {\n                                    dispatch.notificationPopup.error({\n                                        message: 'Dán cái này vô trang ẩn danh là được á ',\n                                        title: 'Copy mã bị thành công',\n                                    });\n                                },\n                                function (err) {\n                                    console.error('Lỗi chi đó á: ', err);\n                                },\n                            );\n                        });\n                    }}\n                >\n                    <IoMdCopy />\n                </IconButton>\n            </Grid>\n        );\n    };\n\n    return (\n        <Grid\n            style={{\n                padding: theme.spacing(1),\n            }}\n        >\n            <PopupUserAccount\n                isDisplay={crudUserAccount.isShowPopup}\n                item={crudUserAccount.itemSelected}\n                onCancel={crudUserAccount.onCancelPopup}\n                onEdit={crudUserAccount.onSave}\n            />\n            <PopUpConfirm\n                isDisplay={crudUserAccount.isShowConfirm}\n                onCancel={crudUserAccount.onCancelConfirm}\n                onConfirm={() => crudUserAccount.onDelete(crudUserAccount.itemSelected)}\n            />\n            <Grid\n                style={{\n                    background: theme.palette.background.paper,\n                    padding: theme.spacing(6),\n                }}\n                container\n            >\n                <Grid item xs={12} container justify=\"space-between\">\n                    <Typography variant=\"h4\">User</Typography>\n                    <Button variant=\"contained\" color=\"primary\" onClick={(e) => crudUserAccount.onShowPopup({})}>\n                        New\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <TableCrud<UserAccount>\n                        column={column}\n                        data={crudUserAccount.pagingList}\n                        onQuery={(query) => {\n                            crudUserAccount.setQuery({\n                                ...crudUserAccount.query,\n                                ...query,\n                            });\n                        }}\n                        pageSize={[50, 100, 200, 500]}\n                        isShowHighlightText={true}\n                        query={crudUserAccount.query}\n                        onCustomerCell={(item) => {\n                            return {\n                                ...item,\n                                action: actionCpn(item),\n                                role: (item.role && item.role[0] && item.role[0].name) || '',\n                            };\n                        }}\n                    ></TableCrud>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","/* eslint-disable eqeqeq */\nimport { Grid } from '@material-ui/core';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Router } from 'react-router';\n\nimport {\n    // BrowserRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n} from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './App.css';\nimport BackdropLoading from './component/common/BackdropLoading';\nimport PopupNotification from './component/common/PopupNotification';\nimport { routers, TypeScreen } from './constants/Route';\nimport { AuthenRoute, history, PublicRoute, AuthenMenu } from './constants/RouterAuthen';\n// import \"./i18n/config\";\nimport { Dispatch, RootState } from './rematch/store';\n\nfunction App() {\n    const authen = useSelector((state: RootState) => state.authen);\n    const notification = useSelector((state: RootState) => state.notification);\n    const dispatch = useDispatch<Dispatch>();\n    const { enqueueSnackbar } = useSnackbar();\n    useEffect(() => {\n        if (notification.message) {\n            enqueueSnackbar(notification.message, {\n                variant: notification.type,\n            });\n        }\n    }, [notification]);\n    useEffect(() => {\n        dispatch.authen.getMe();\n    }, []);\n    return (\n        <Router history={history}>\n            {authen.isGet ? (\n                <Grid>\n                    <BackdropLoading />\n                    <PopupNotification />\n                    <TransitionGroup>\n                        <CSSTransition classNames=\"fade\" timeout={3000}>\n                            <Switch>\n                                {routers.map((route) => {\n                                    if (route.typeAuthen === TypeScreen.authenMenu) {\n                                        return (\n                                            <AuthenMenu\n                                                exact\n                                                component={route.component}\n                                                path={route.link}\n                                                authen={authen.info}\n                                            />\n                                        );\n                                    } else if (route.typeAuthen === TypeScreen.authenNotMenu) {\n                                        return (\n                                            <AuthenRoute\n                                                exact\n                                                component={route.component}\n                                                path={route.link}\n                                                authen={authen.info}\n                                            />\n                                        );\n                                    } else if (route.typeAuthen === TypeScreen.public) {\n                                        return <Route exact component={route.component} path={route.link} />;\n                                    } else {\n                                        return (\n                                            <PublicRoute\n                                                exact\n                                                component={route.component}\n                                                path={route.link}\n                                                authen={undefined}\n                                            />\n                                        );\n                                    }\n                                })}\n                                <Route\n                                    path=\"*\"\n                                    render={({ location }) => (\n                                        <Redirect\n                                            to={{\n                                                pathname: '/login',\n                                            }}\n                                        />\n                                    )}\n                                />\n                            </Switch>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </Grid>\n            ) : (\n                <Grid></Grid>\n            )}\n        </Router>\n    );\n}\n\nexport default function IntegrationNotistack() {\n    return (\n        <SnackbarProvider maxSnack={3}>\n            <App />\n        </SnackbarProvider>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport IntegrationNotistack from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core';\nimport theme from './theme/MuiTheme';\nimport { store } from './rematch/store';\nimport './index.css';\nimport SystemMaintenance from './component/common/SystemMaintenance';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <IntegrationNotistack />\n            {/* <SystemMaintenance /> */}\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById('root'),\n);\n\nreportWebVitals();\n","export interface IConfig {\n    applicationUrl: string;\n    apiGatewayUrl: string;\n    redirectToSaleManager: string;\n    apiProxyUrl: string;\n    apiSheetConfig: string\n}\n\nconst localConfig: IConfig = {\n    applicationUrl: `http://localhost:3000`,\n    apiGatewayUrl: 'http://localhost:3008',\n    redirectToSaleManager: 'http://localhost:4002',\n    apiProxyUrl: \"https://apiproxy.afivn.com\",\n    apiSheetConfig: \"https://script.google.com/macros/s/AKfycbxW4asrs4ORts7rMBm5iqW0PrJtCJGB9NJ1mnyeVmVqKYbMAQ8N4UP4eYnEYfhHIXg/exec\"\n};\n\nconst developmentConfig: IConfig = {\n    applicationUrl: `http://localhost:3000`,\n    apiGatewayUrl: 'http://localhost:3002',\n    redirectToSaleManager: 'http://localhost:4002',\n    apiProxyUrl: \"https://apiproxy.afivn.com\",\n    apiSheetConfig: \"https://script.google.com/macros/s/AKfycbxW4asrs4ORts7rMBm5iqW0PrJtCJGB9NJ1mnyeVmVqKYbMAQ8N4UP4eYnEYfhHIXg/exec\"\n};\n\nconst stagingConfig: IConfig = {\n    applicationUrl: `http://localhost:3000`,\n    apiGatewayUrl: 'http://localhost:3002',\n    redirectToSaleManager: 'http://localhost:4002',\n    apiProxyUrl: \"https://apiproxy.afivn.com\",\n    apiSheetConfig: \"https://script.google.com/macros/s/AKfycbxW4asrs4ORts7rMBm5iqW0PrJtCJGB9NJ1mnyeVmVqKYbMAQ8N4UP4eYnEYfhHIXg/exec\"\n};\n\nconst productionConfig: IConfig = {\n    applicationUrl: `http://localhost:3000`,\n    apiGatewayUrl: 'https://api.bot-checkout.afivn.com',\n    redirectToSaleManager: 'https://pos.afivn.com',\n    apiProxyUrl: \"https://apiproxy.afivn.com\",\n    apiSheetConfig: \"https://script.google.com/macros/s/AKfycbxW4asrs4ORts7rMBm5iqW0PrJtCJGB9NJ1mnyeVmVqKYbMAQ8N4UP4eYnEYfhHIXg/exec\"\n};\n\nconst config =\n    process.env.REACT_APP_ENV === 'production'\n        ? productionConfig\n        : process.env.REACT_APP_ENV === 'staging'\n            ? stagingConfig\n            : process.env.REACT_APP_ENV === 'development'\n                ? developmentConfig\n                : localConfig;\n\nexport default config;\n"],"sourceRoot":""}